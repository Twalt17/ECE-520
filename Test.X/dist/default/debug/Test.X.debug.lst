

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 30 17:03:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=4,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _LATA1	set	130513
    57   000000                     _PIR1bits	set	14753
    58   000000                     _LATB	set	16315
    59   000000                     _TRISA	set	16322
    60   000000                     _TRISB	set	16323
    61   000000                     _LATA0	set	130512
    62   000000                     _PORTAbits	set	16330
    63   000000                     _PORTCbits	set	16332
    64                           
    65                           	psect	smallconst
    66   002000                     __psmallconst:
    67                           	callstack 0
    68   002000  00                 	db	0
    69   002001                     STR_1:
    70   002001  45                 	db	69	;'E'
    71   002002  6D                 	db	109	;'m'
    72   002003  62                 	db	98	;'b'
    73   002004  65                 	db	101	;'e'
    74   002005  64                 	db	100	;'d'
    75   002006  64                 	db	100	;'d'
    76   002007  65                 	db	101	;'e'
    77   002008  64                 	db	100	;'d'
    78   002009  20                 	db	32
    79   00200A  53                 	db	83	;'S'
    80   00200B  79                 	db	121	;'y'
    81   00200C  73                 	db	115	;'s'
    82   00200D  74                 	db	116	;'t'
    83   00200E  65                 	db	101	;'e'
    84   00200F  6D                 	db	109	;'m'
    85   002010  21                 	db	33
    86   002011  00                 	db	0
    87   002012                     STR_2:
    88   002012  45                 	db	69	;'E'
    89   002013  45                 	db	69	;'E'
    90   002014  33                 	db	51	;'3'
    91   002015  31                 	db	49	;'1'
    92   002016  30                 	db	48	;'0'
    93   002017  40                 	db	64	;'@'
    94   002018  53                 	db	83	;'S'
    95   002019  53                 	db	83	;'S'
    96   00201A  55                 	db	85	;'U'
    97   00201B  00                 	db	0
    98   00201C  43                 	db	67	;'C'
    99   00201D  6F                 	db	111	;'o'
   100   00201E  72                 	db	114	;'r'
   101   00201F  72                 	db	114	;'r'
   102   002020  65                 	db	101	;'e'
   103   002021  63                 	db	99	;'c'
   104   002022  74                 	db	116	;'t'
   105   002023  21                 	db	33
   106   002024  00                 	db	0
   107   002025  57                 	db	87	;'W'
   108   002026  72                 	db	114	;'r'
   109   002027  6F                 	db	111	;'o'
   110   002028  6E                 	db	110	;'n'
   111   002029  67                 	db	103	;'g'
   112   00202A  21                 	db	33
   113   00202B  00                 	db	0
   114   00202C  00                 	db	0	; dummy byte at the end
   115   000000                     
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   004312                     __pcinit:
   120                           	callstack 0
   121   004312                     start_initialization:
   122                           	callstack 0
   123   004312                     __initialization:
   124                           	callstack 0
   125                           
   126                           ;
   127                           ; Setup IVTBASE
   128                           ;
   129   004312  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   130   004314  6ED5               	movwf	213,c
   131   004316  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   132   004318  6ED6               	movwf	214,c
   133   00431A  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   134   00431C  6ED7               	movwf	215,c
   135   00431E                     end_of_initialization:
   136                           	callstack 0
   137   00431E                     __end_of__initialization:
   138                           	callstack 0
   139   00431E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   140   004320  6EF8               	movwf	tblptru,c
   141   004322  0E20               	movlw	high __Lsmallconst
   142   004324  6EF7               	movwf	tblptrh,c
   143   004326  0100               	movlb	0
   144   004328  EF57  F021         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	cstackCOMRAM
   147   000001                     __pcstackCOMRAM:
   148                           	callstack 0
   149   000001                     delay_us@us:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x0
   153   000001                     	ds	2
   154   000003                     delay_us@i:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x2
   158   000003                     	ds	2
   159   000005                     INT0_ISR@i:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x4
   163   000005                     	ds	1
   164   000006                     INT0_ISR@timer:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x5
   168   000006                     	ds	2
   169   000008                     MSdelay@val:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x7
   173   000008                     	ds	2
   174   00000A                     MSdelay@i:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x9
   178   00000A                     	ds	2
   179   00000C                     MSdelay@j:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xB
   183   00000C                     	ds	2
   184   00000E                     LCD_Command@cmd:
   185                           	callstack 0
   186   00000E                     LCD_Char@dat:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0xD
   190   00000E                     	ds	1
   191   00000F                     LCD_String@msg:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xE
   195   00000F                     	ds	1
   196   000010                     LCD_String_xy@pos:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0xF
   200   000010                     	ds	1
   201   000011                     LCD_String_xy@msg:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x10
   205   000011                     	ds	1
   206   000012                     LCD_String_xy@row:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x11
   210   000012                     	ds	1
   211   000013                     LCD_String_xy@location:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x12
   215   000013                     	ds	1
   216   000014                     
   217                           ; 1 bytes @ 0x13
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 78 in file "newmain.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 6
   243 ;; This function calls:
   244 ;;		_LCD_Init
   245 ;;		_LCD_String_xy
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252   0042AE                     __ptext0:
   253                           	callstack 0
   254   0042AE                     _main:
   255                           	callstack 25
   256   0042AE                     
   257                           ;newmain.c: 81:     LCD_Init();
   258   0042AE  EC40  F021         	call	_LCD_Init	;wreg free
   259   0042B2                     
   260                           ;newmain.c: 82:     LCD_String_xy(1,0,"Embedded System!");
   261   0042B2  0E00               	movlw	0
   262   0042B4  6E10               	movwf	LCD_String_xy@pos^0,c
   263   0042B6  0E01               	movlw	low STR_1
   264   0042B8  6E11               	movwf	LCD_String_xy@msg^0,c
   265   0042BA  0E01               	movlw	1
   266   0042BC  ECEE  F020         	call	_LCD_String_xy
   267   0042C0                     
   268                           ;newmain.c: 84:     LCD_String_xy(2,0,"EE310@SSU");
   269   0042C0  0E00               	movlw	0
   270   0042C2  6E10               	movwf	LCD_String_xy@pos^0,c
   271   0042C4  0E12               	movlw	low STR_2
   272   0042C6  6E11               	movwf	LCD_String_xy@msg^0,c
   273   0042C8  0E02               	movlw	2
   274   0042CA  ECEE  F020         	call	_LCD_String_xy
   275   0042CE                     l31:
   276   0042CE  EF67  F021         	goto	l31
   277   0042D2  EF57  F020         	goto	start
   278   0042D6                     __end_of_main:
   279                           	callstack 0
   280                           
   281 ;; *************** function _LCD_String_xy *****************
   282 ;; Defined at:
   283 ;;		line 137 in file "newmain.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;  row             1    wreg     unsigned char 
   286 ;;  pos             1   15[COMRAM] unsigned char 
   287 ;;  msg             1   16[COMRAM] PTR const unsigned char 
   288 ;;		 -> STR_4(7), STR_3(9), STR_2(10), STR_1(17), 
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  row             1   17[COMRAM] unsigned char 
   291 ;;  location        1   18[COMRAM] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   305 ;;Total ram usage:        4 bytes
   306 ;; Hardware stack levels used: 1
   307 ;; Hardware stack levels required when called: 5
   308 ;; This function calls:
   309 ;;		_LCD_Command
   310 ;;		_LCD_String
   311 ;; This function is called by:
   312 ;;		_main
   313 ;;		_Decision
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text1
   318   0041DC                     __ptext1:
   319                           	callstack 0
   320   0041DC                     _LCD_String_xy:
   321                           	callstack 25
   322                           
   323                           ;incstack = 0
   324                           ;LCD_String_xy@row stored from wreg
   325   0041DC  6E12               	movwf	LCD_String_xy@row^0,c
   326   0041DE                     
   327                           ;newmain.c: 140:     if(row<=1)
   328   0041DE  0E02               	movlw	2
   329   0041E0  6012               	cpfslt	LCD_String_xy@row^0,c
   330   0041E2  EFF5  F020         	goto	u231
   331   0041E6  EFF7  F020         	goto	u230
   332   0041EA                     u231:
   333   0041EA  EF00  F021         	goto	l1042
   334   0041EE                     u230:
   335   0041EE                     
   336                           ;newmain.c: 141:     {;newmain.c: 142:         location=(0x80) | ((pos) & 0x0f);
   337   0041EE  5010               	movf	LCD_String_xy@pos^0,w,c
   338   0041F0  0B0F               	andlw	15
   339   0041F2  0980               	iorlw	128
   340   0041F4  6E13               	movwf	LCD_String_xy@location^0,c
   341   0041F6                     
   342                           ;newmain.c: 143:         LCD_Command(location);
   343   0041F6  5013               	movf	LCD_String_xy@location^0,w,c
   344   0041F8  EC7A  F021         	call	_LCD_Command
   345                           
   346                           ;newmain.c: 144:     }
   347   0041FC  EF07  F021         	goto	l1046
   348   004200                     l1042:
   349                           
   350                           ;newmain.c: 146:     {;newmain.c: 147:         location=(0xC0) | ((pos) & 0x0f);
   351   004200  5010               	movf	LCD_String_xy@pos^0,w,c
   352   004202  0B0F               	andlw	15
   353   004204  09C0               	iorlw	192
   354   004206  6E13               	movwf	LCD_String_xy@location^0,c
   355   004208                     
   356                           ;newmain.c: 148:         LCD_Command(location);
   357   004208  5013               	movf	LCD_String_xy@location^0,w,c
   358   00420A  EC7A  F021         	call	_LCD_Command
   359   00420E                     l1046:
   360                           
   361                           ;newmain.c: 150:     LCD_String(msg);
   362   00420E  C011  F00F         	movff	LCD_String_xy@msg,LCD_String@msg
   363   004212  EC28  F021         	call	_LCD_String	;wreg free
   364   004216  0012               	return		;funcret
   365   004218                     __end_of_LCD_String_xy:
   366                           	callstack 0
   367                           
   368 ;; *************** function _LCD_String *****************
   369 ;; Defined at:
   370 ;;		line 128 in file "newmain.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  msg             1   14[COMRAM] PTR const unsigned char 
   373 ;;		 -> STR_4(7), STR_3(9), STR_2(10), STR_1(17), 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   389 ;;Total ram usage:        1 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 4
   392 ;; This function calls:
   393 ;;		_LCD_Char
   394 ;; This function is called by:
   395 ;;		_LCD_String_xy
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text2
   400   004250                     __ptext2:
   401                           	callstack 0
   402   004250                     _LCD_String:
   403                           	callstack 25
   404   004250                     
   405                           ;newmain.c: 128: void LCD_String(const char *msg);newmain.c: 129: {;newmain.c: 130:     
      +                          while((*msg)!=0)
   406   004250  EF32  F021         	goto	l1026
   407   004254                     l1022:
   408                           
   409                           ;newmain.c: 131:     {;newmain.c: 132:       LCD_Char(*msg);
   410   004254  0060  F03F  FFF6   	movff	LCD_String@msg,tblptrl
   411   00425A                     	if	0	;There is only one active tblptr byte
   412   00425A                     	endif
   413   00425A                     	if	0	;tblptru may be non-zero
   414   00425A                     	endif
   415   00425A                     	if	0	;tblptru may be non-zero
   416   00425A                     	endif
   417   00425A  0008               	tblrd		*
   418   00425C  50F5               	movf	tablat,w,c
   419   00425E  EC6B  F021         	call	_LCD_Char
   420   004262                     
   421                           ;newmain.c: 133:       msg++;
   422   004262  2A0F               	incf	LCD_String@msg^0,f,c
   423   004264                     l1026:
   424                           
   425                           ;newmain.c: 130:     while((*msg)!=0)
   426   004264  0060  F03F  FFF6   	movff	LCD_String@msg,tblptrl
   427   00426A                     	if	0	;There is only one active tblptr byte
   428   00426A                     	endif
   429   00426A                     	if	0	;tblptru may be non-zero
   430   00426A                     	endif
   431   00426A                     	if	0	;tblptru may be non-zero
   432   00426A                     	endif
   433   00426A  0008               	tblrd		*
   434   00426C  50F5               	movf	tablat,w,c
   435   00426E  0900               	iorlw	0
   436   004270  A4D8               	btfss	status,2,c
   437   004272  EF3D  F021         	goto	u221
   438   004276  EF3F  F021         	goto	u220
   439   00427A                     u221:
   440   00427A  EF2A  F021         	goto	l1022
   441   00427E                     u220:
   442   00427E  0012               	return		;funcret
   443   004280                     __end_of_LCD_String:
   444                           	callstack 0
   445                           
   446 ;; *************** function _LCD_Char *****************
   447 ;; Defined at:
   448 ;;		line 117 in file "newmain.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  dat             1    wreg     unsigned char 
   451 ;; Auto vars:     Size  Location     Type
   452 ;;  dat             1   13[COMRAM] unsigned char 
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   466 ;;Total ram usage:        1 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 3
   469 ;; This function calls:
   470 ;;		_MSdelay
   471 ;; This function is called by:
   472 ;;		_LCD_String
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text3
   477   0042D6                     __ptext3:
   478                           	callstack 0
   479   0042D6                     _LCD_Char:
   480                           	callstack 25
   481                           
   482                           ;incstack = 0
   483                           ;LCD_Char@dat stored from wreg
   484   0042D6  6E0E               	movwf	LCD_Char@dat^0,c
   485   0042D8                     
   486                           ;newmain.c: 117: void LCD_Char(char dat);newmain.c: 118: {;newmain.c: 119:     LATB= dat
      +                          ;
   487   0042D8  0060  F03B  FFBB   	movff	LCD_Char@dat,16315	;volatile
   488   0042DE                     
   489                           ;newmain.c: 120:     LATA0 = 1;
   490   0042DE  80BA               	bsf	16314,0,c	;volatile
   491   0042E0                     
   492                           ;newmain.c: 121:     LATA1=1;
   493   0042E0  82BA               	bsf	16314,1,c	;volatile
   494   0042E2                     
   495                           ;newmain.c: 122:     __nop();
   496   0042E2  0000               	nop	
   497   0042E4                     
   498                           ;newmain.c: 123:     LATA1=0;
   499   0042E4  92BA               	bcf	16314,1,c	;volatile
   500   0042E6                     
   501                           ;newmain.c: 124:     MSdelay(1);
   502   0042E6  0E00               	movlw	0
   503   0042E8  6E09               	movwf	(MSdelay@val+1)^0,c
   504   0042EA  0E01               	movlw	1
   505   0042EC  6E08               	movwf	MSdelay@val^0,c
   506   0042EE  ECC9  F020         	call	_MSdelay	;wreg free
   507   0042F2  0012               	return		;funcret
   508   0042F4                     __end_of_LCD_Char:
   509                           	callstack 0
   510                           
   511 ;; *************** function _LCD_Init *****************
   512 ;; Defined at:
   513 ;;		line 91 in file "newmain.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 4
   534 ;; This function calls:
   535 ;;		_LCD_Command
   536 ;;		_MSdelay
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text4
   543   004280                     __ptext4:
   544                           	callstack 0
   545   004280                     _LCD_Init:
   546                           	callstack 26
   547   004280                     
   548                           ;newmain.c: 93:     MSdelay(15);
   549   004280  0E00               	movlw	0
   550   004282  6E09               	movwf	(MSdelay@val+1)^0,c
   551   004284  0E0F               	movlw	15
   552   004286  6E08               	movwf	MSdelay@val^0,c
   553   004288  ECC9  F020         	call	_MSdelay	;wreg free
   554   00428C                     
   555                           ;newmain.c: 94:     TRISB = 0x00;
   556   00428C  0E00               	movlw	0
   557   00428E  6EC3               	movwf	195,c	;volatile
   558   004290                     
   559                           ;newmain.c: 95:     TRISA = 0x00;
   560   004290  0E00               	movlw	0
   561   004292  6EC2               	movwf	194,c	;volatile
   562                           
   563                           ;newmain.c: 96:     LCD_Command(0x01);
   564   004294  0E01               	movlw	1
   565   004296  EC7A  F021         	call	_LCD_Command
   566                           
   567                           ;newmain.c: 97:     LCD_Command(0x38);
   568   00429A  0E38               	movlw	56
   569   00429C  EC7A  F021         	call	_LCD_Command
   570                           
   571                           ;newmain.c: 98:     LCD_Command(0x0c);
   572   0042A0  0E0C               	movlw	12
   573   0042A2  EC7A  F021         	call	_LCD_Command
   574                           
   575                           ;newmain.c: 99:     LCD_Command(0x06);
   576   0042A6  0E06               	movlw	6
   577   0042A8  EC7A  F021         	call	_LCD_Command
   578   0042AC  0012               	return		;funcret
   579   0042AE                     __end_of_LCD_Init:
   580                           	callstack 0
   581                           
   582 ;; *************** function _LCD_Command *****************
   583 ;; Defined at:
   584 ;;		line 107 in file "newmain.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  cmd             1    wreg     unsigned char 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  cmd             1   13[COMRAM] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   602 ;;Total ram usage:        1 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 3
   605 ;; This function calls:
   606 ;;		_MSdelay
   607 ;; This function is called by:
   608 ;;		_LCD_Init
   609 ;;		_LCD_String_xy
   610 ;;		_LCD_Clear
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text5
   615   0042F4                     __ptext5:
   616                           	callstack 0
   617   0042F4                     _LCD_Command:
   618                           	callstack 26
   619                           
   620                           ;incstack = 0
   621                           ;LCD_Command@cmd stored from wreg
   622   0042F4  6E0E               	movwf	LCD_Command@cmd^0,c
   623   0042F6                     
   624                           ;newmain.c: 107: void LCD_Command(char cmd );newmain.c: 108: {;newmain.c: 109:     LATB=
      +                           cmd;
   625   0042F6  0060  F03B  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   626   0042FC                     
   627                           ;newmain.c: 110:     LATA0 = 0;
   628   0042FC  90BA               	bcf	16314,0,c	;volatile
   629   0042FE                     
   630                           ;newmain.c: 111:     LATA1 = 1;
   631   0042FE  82BA               	bsf	16314,1,c	;volatile
   632   004300                     
   633                           ;newmain.c: 112:     __nop();
   634   004300  0000               	nop	
   635   004302                     
   636                           ;newmain.c: 113:     LATA1 = 0;
   637   004302  92BA               	bcf	16314,1,c	;volatile
   638   004304                     
   639                           ;newmain.c: 114:     MSdelay(3);
   640   004304  0E00               	movlw	0
   641   004306  6E09               	movwf	(MSdelay@val+1)^0,c
   642   004308  0E03               	movlw	3
   643   00430A  6E08               	movwf	MSdelay@val^0,c
   644   00430C  ECC9  F020         	call	_MSdelay	;wreg free
   645   004310  0012               	return		;funcret
   646   004312                     __end_of_LCD_Command:
   647                           	callstack 0
   648                           
   649 ;; *************** function _MSdelay *****************
   650 ;; Defined at:
   651 ;;		line 154 in file "newmain.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  val             2    7[COMRAM] unsigned int 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  j               2   11[COMRAM] unsigned int 
   656 ;;  i               2    9[COMRAM] unsigned int 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   667 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   669 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   670 ;;Total ram usage:        6 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 2
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_LCD_Init
   677 ;;		_LCD_Command
   678 ;;		_LCD_Char
   679 ;;		_LightScan
   680 ;;		_Decision
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text6
   685   004192                     __ptext6:
   686                           	callstack 0
   687   004192                     _MSdelay:
   688                           	callstack 25
   689   004192                     
   690                           ;newmain.c: 154: void MSdelay(unsigned int val);newmain.c: 155: {;newmain.c: 156:      u
      +                          nsigned int i,j;;newmain.c: 157:         for(i=0;i<val;i++)
   691   004192  0E00               	movlw	0
   692   004194  6E0B               	movwf	(MSdelay@i+1)^0,c
   693   004196  0E00               	movlw	0
   694   004198  6E0A               	movwf	MSdelay@i^0,c
   695   00419A  EFE2  F020         	goto	l994
   696   00419E                     l982:
   697                           
   698                           ;newmain.c: 158:             for(j=0;j<165;j++);
   699   00419E  0E00               	movlw	0
   700   0041A0  6E0D               	movwf	(MSdelay@j+1)^0,c
   701   0041A2  0E00               	movlw	0
   702   0041A4  6E0C               	movwf	MSdelay@j^0,c
   703   0041A6                     l988:
   704   0041A6  4A0C               	infsnz	MSdelay@j^0,f,c
   705   0041A8  2A0D               	incf	(MSdelay@j+1)^0,f,c
   706   0041AA  500D               	movf	(MSdelay@j+1)^0,w,c
   707   0041AC  E109               	bnz	u200
   708   0041AE  0EA5               	movlw	165
   709   0041B0  5C0C               	subwf	MSdelay@j^0,w,c
   710   0041B2  A0D8               	btfss	status,0,c
   711   0041B4  EFDE  F020         	goto	u201
   712   0041B8  EFE0  F020         	goto	u200
   713   0041BC                     u201:
   714   0041BC  EFD3  F020         	goto	l988
   715   0041C0                     u200:
   716   0041C0  4A0A               	infsnz	MSdelay@i^0,f,c
   717   0041C2  2A0B               	incf	(MSdelay@i+1)^0,f,c
   718   0041C4                     l994:
   719   0041C4  5008               	movf	MSdelay@val^0,w,c
   720   0041C6  5C0A               	subwf	MSdelay@i^0,w,c
   721   0041C8  5009               	movf	(MSdelay@val+1)^0,w,c
   722   0041CA  580B               	subwfb	(MSdelay@i+1)^0,w,c
   723   0041CC  A0D8               	btfss	status,0,c
   724   0041CE  EFEB  F020         	goto	u211
   725   0041D2  EFED  F020         	goto	u210
   726   0041D6                     u211:
   727   0041D6  EFCF  F020         	goto	l982
   728   0041DA                     u210:
   729   0041DA  0012               	return		;funcret
   730   0041DC                     __end_of_MSdelay:
   731                           	callstack 0
   732                           
   733 ;; *************** function _INT0_ISR *****************
   734 ;; Defined at:
   735 ;;		line 251 in file "newmain.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  timer           2    5[COMRAM] unsigned int 
   740 ;;  i               1    4[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   753 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   754 ;;Total ram usage:        3 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 1
   757 ;; This function calls:
   758 ;;		_delay_us
   759 ;; This function is called by:
   760 ;;		Interrupt level 2
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text7
   765   0040B4                     __ptext7:
   766                           	callstack 0
   767   0040B4                     _INT0_ISR:
   768                           	callstack 25
   769   0040B4                     
   770                           ;newmain.c: 253:     for(char i =0; i<3;i++)
   771   0040B4  0E00               	movlw	0
   772   0040B6  6E05               	movwf	INT0_ISR@i^0,c
   773   0040B8                     i2l1134:
   774                           
   775                           ;newmain.c: 254:     {;newmain.c: 255:     unsigned int timer = 100;
   776   0040B8  0E00               	movlw	0
   777   0040BA  6E07               	movwf	(INT0_ISR@timer+1)^0,c
   778   0040BC  0E64               	movlw	100
   779   0040BE  6E06               	movwf	INT0_ISR@timer^0,c
   780                           
   781                           ;newmain.c: 257:     while(timer >0)
   782   0040C0  EF73  F020         	goto	i2l1144
   783   0040C4                     i2l1136:
   784                           
   785                           ;newmain.c: 258:     {;newmain.c: 259:     delay_us(100);
   786   0040C4  0E00               	movlw	0
   787   0040C6  6E02               	movwf	(delay_us@us+1)^0,c
   788   0040C8  0E64               	movlw	100
   789   0040CA  6E01               	movwf	delay_us@us^0,c
   790   0040CC  EC0C  F021         	call	_delay_us	;wreg free
   791   0040D0                     
   792                           ;newmain.c: 260:     PORTCbits.RC4 = 1;
   793   0040D0  88CC               	bsf	204,4,c	;volatile
   794                           
   795                           ;newmain.c: 261:     delay_us(100);
   796   0040D2  0E00               	movlw	0
   797   0040D4  6E02               	movwf	(delay_us@us+1)^0,c
   798   0040D6  0E64               	movlw	100
   799   0040D8  6E01               	movwf	delay_us@us^0,c
   800   0040DA  EC0C  F021         	call	_delay_us	;wreg free
   801   0040DE                     
   802                           ;newmain.c: 262:     PORTCbits.RC4 = 0;
   803   0040DE  98CC               	bcf	204,4,c	;volatile
   804   0040E0                     
   805                           ;newmain.c: 263:     timer--;
   806   0040E0  0606               	decf	INT0_ISR@timer^0,f,c
   807   0040E2  A0D8               	btfss	status,0,c
   808   0040E4  0607               	decf	(INT0_ISR@timer+1)^0,f,c
   809   0040E6                     i2l1144:
   810                           
   811                           ;newmain.c: 257:     while(timer >0)
   812   0040E6  5006               	movf	INT0_ISR@timer^0,w,c
   813   0040E8  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
   814   0040EA  A4D8               	btfss	status,2,c
   815   0040EC  EF7A  F020         	goto	i2u35_41
   816   0040F0  EF7C  F020         	goto	i2u35_40
   817   0040F4                     i2u35_41:
   818   0040F4  EF62  F020         	goto	i2l1136
   819   0040F8                     i2u35_40:
   820   0040F8                     
   821                           ;newmain.c: 266:     timer = 200;
   822   0040F8  0E00               	movlw	0
   823   0040FA  6E07               	movwf	(INT0_ISR@timer+1)^0,c
   824   0040FC  0EC8               	movlw	200
   825   0040FE  6E06               	movwf	INT0_ISR@timer^0,c
   826                           
   827                           ;newmain.c: 268:     while(timer >0)
   828   004100  EF93  F020         	goto	i2l1156
   829   004104                     i2l1148:
   830                           
   831                           ;newmain.c: 269:     {;newmain.c: 270:     delay_us(50);
   832   004104  0E00               	movlw	0
   833   004106  6E02               	movwf	(delay_us@us+1)^0,c
   834   004108  0E32               	movlw	50
   835   00410A  6E01               	movwf	delay_us@us^0,c
   836   00410C  EC0C  F021         	call	_delay_us	;wreg free
   837   004110                     
   838                           ;newmain.c: 271:     PORTCbits.RC4 = 1;
   839   004110  88CC               	bsf	204,4,c	;volatile
   840                           
   841                           ;newmain.c: 272:     delay_us(50);
   842   004112  0E00               	movlw	0
   843   004114  6E02               	movwf	(delay_us@us+1)^0,c
   844   004116  0E32               	movlw	50
   845   004118  6E01               	movwf	delay_us@us^0,c
   846   00411A  EC0C  F021         	call	_delay_us	;wreg free
   847   00411E                     
   848                           ;newmain.c: 273:     PORTCbits.RC4 = 0;
   849   00411E  98CC               	bcf	204,4,c	;volatile
   850   004120                     
   851                           ;newmain.c: 274:     timer--;
   852   004120  0606               	decf	INT0_ISR@timer^0,f,c
   853   004122  A0D8               	btfss	status,0,c
   854   004124  0607               	decf	(INT0_ISR@timer+1)^0,f,c
   855   004126                     i2l1156:
   856                           
   857                           ;newmain.c: 268:     while(timer >0)
   858   004126  5006               	movf	INT0_ISR@timer^0,w,c
   859   004128  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
   860   00412A  A4D8               	btfss	status,2,c
   861   00412C  EF9A  F020         	goto	i2u36_41
   862   004130  EF9C  F020         	goto	i2u36_40
   863   004134                     i2u36_41:
   864   004134  EF82  F020         	goto	i2l1148
   865   004138                     i2u36_40:
   866   004138                     
   867                           ;newmain.c: 277:     timer = 400;
   868   004138  0E01               	movlw	1
   869   00413A  6E07               	movwf	(INT0_ISR@timer+1)^0,c
   870   00413C  0E90               	movlw	144
   871   00413E  6E06               	movwf	INT0_ISR@timer^0,c
   872                           
   873                           ;newmain.c: 279:     while(timer >0)
   874   004140  EFB3  F020         	goto	i2l1168
   875   004144                     i2l1160:
   876                           
   877                           ;newmain.c: 280:     {;newmain.c: 281:     delay_us(25);
   878   004144  0E00               	movlw	0
   879   004146  6E02               	movwf	(delay_us@us+1)^0,c
   880   004148  0E19               	movlw	25
   881   00414A  6E01               	movwf	delay_us@us^0,c
   882   00414C  EC0C  F021         	call	_delay_us	;wreg free
   883   004150                     
   884                           ;newmain.c: 282:     PORTCbits.RC4 = 1;
   885   004150  88CC               	bsf	204,4,c	;volatile
   886                           
   887                           ;newmain.c: 283:     delay_us(25);
   888   004152  0E00               	movlw	0
   889   004154  6E02               	movwf	(delay_us@us+1)^0,c
   890   004156  0E19               	movlw	25
   891   004158  6E01               	movwf	delay_us@us^0,c
   892   00415A  EC0C  F021         	call	_delay_us	;wreg free
   893   00415E                     
   894                           ;newmain.c: 284:     PORTCbits.RC4 = 0;
   895   00415E  98CC               	bcf	204,4,c	;volatile
   896   004160                     
   897                           ;newmain.c: 285:     timer--;
   898   004160  0606               	decf	INT0_ISR@timer^0,f,c
   899   004162  A0D8               	btfss	status,0,c
   900   004164  0607               	decf	(INT0_ISR@timer+1)^0,f,c
   901   004166                     i2l1168:
   902                           
   903                           ;newmain.c: 279:     while(timer >0)
   904   004166  5006               	movf	INT0_ISR@timer^0,w,c
   905   004168  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
   906   00416A  A4D8               	btfss	status,2,c
   907   00416C  EFBA  F020         	goto	i2u37_41
   908   004170  EFBC  F020         	goto	i2u37_40
   909   004174                     i2u37_41:
   910   004174  EFA2  F020         	goto	i2l1160
   911   004178                     i2u37_40:
   912   004178                     
   913                           ;newmain.c: 287:     }
   914   004178  2A05               	incf	INT0_ISR@i^0,f,c
   915   00417A  0E02               	movlw	2
   916   00417C  6405               	cpfsgt	INT0_ISR@i^0,c
   917   00417E  EFC3  F020         	goto	i2u38_41
   918   004182  EFC5  F020         	goto	i2u38_40
   919   004186                     i2u38_41:
   920   004186  EF5C  F020         	goto	i2l1134
   921   00418A                     i2u38_40:
   922   00418A                     
   923                           ;newmain.c: 289:     PORTCbits.RC4 = 1;
   924   00418A  88CC               	bsf	204,4,c	;volatile
   925                           
   926                           ;newmain.c: 290:     PIR1bits.INT0IF = 0;
   927   00418C  0139               	movlb	57	; () banked
   928   00418E  91A1               	bcf	161,0,b	;volatile
   929   004190                     
   930                           ; BSR set to: 57
   931   004190  0011               	retfie		f
   932   004192                     __end_of_INT0_ISR:
   933                           	callstack 0
   934                           
   935 ;; *************** function _delay_us *****************
   936 ;; Defined at:
   937 ;;		line 236 in file "newmain.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  us              2    0[COMRAM] unsigned int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  i               2    2[COMRAM] unsigned int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   955 ;;Total ram usage:        4 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_INT0_ISR
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text8
   965   004218                     __ptext8:
   966                           	callstack 0
   967   004218                     _delay_us:
   968                           	callstack 25
   969   004218                     
   970                           ;newmain.c: 238:     for (unsigned int i = 0; i < us; i++) {
   971   004218  0E00               	movlw	0
   972   00421A  6E04               	movwf	(delay_us@i+1)^0,c
   973   00421C  0E00               	movlw	0
   974   00421E  6E03               	movwf	delay_us@i^0,c
   975   004220  EF1C  F021         	goto	i2l1052
   976   004224                     i2l92:
   977   004224  0000               	nop		;# 
   978   004226  0000               	nop		;# 
   979   004228  0000               	nop		;# 
   980   00422A  0000               	nop		;# 
   981   00422C  0000               	nop		;# 
   982   00422E  0000               	nop		;# 
   983   004230  0000               	nop		;# 
   984   004232  0000               	nop		;# 
   985   004234                     
   986                           ;newmain.c: 247:     }
   987   004234  4A03               	infsnz	delay_us@i^0,f,c
   988   004236  2A04               	incf	(delay_us@i+1)^0,f,c
   989   004238                     i2l1052:
   990   004238  5001               	movf	delay_us@us^0,w,c
   991   00423A  5C03               	subwf	delay_us@i^0,w,c
   992   00423C  5002               	movf	(delay_us@us+1)^0,w,c
   993   00423E  5804               	subwfb	(delay_us@i+1)^0,w,c
   994   004240  A0D8               	btfss	status,0,c
   995   004242  EF25  F021         	goto	i2u24_41
   996   004246  EF27  F021         	goto	i2u24_40
   997   00424A                     i2u24_41:
   998   00424A  EF12  F021         	goto	i2l92
   999   00424E                     i2u24_40:
  1000   00424E  0012               	return		;funcret
  1001   004250                     __end_of_delay_us:
  1002                           	callstack 0
  1003                           
  1004                           ;
  1005                           ; H/W Interrupt Vector Table @ 0x4008
  1006                           ;
  1007                           
  1008                           	psect	ivt0x4008
  1009   004008                     __pivt0x4008:
  1010                           	callstack 0
  1011   004008                     ivt0x4008_base:
  1012                           	callstack 0
  1013                           
  1014                           ; Vector 0 : SWINT
  1015   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1016                           
  1017                           ; Vector 1 : HLVD
  1018   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1019                           
  1020                           ; Vector 2 : OSF
  1021   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1022                           
  1023                           ; Vector 3 : CSW
  1024   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1025                           
  1026                           ; Vector 4 : NVM
  1027   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1028                           
  1029                           ; Vector 5 : SCAN
  1030   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1031                           
  1032                           ; Vector 6 : CRC
  1033   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1034                           
  1035                           ; Vector 7 : IOC
  1036   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1037                           
  1038                           ; Vector 8 : INT0
  1039   004018  102D               	dw	_INT0_ISR shr (0+2)
  1040                           
  1041                           ; Vector 9 : ZCD
  1042   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1043                           
  1044                           ; Vector 10 : AD
  1045   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1046                           
  1047                           ; Vector 11 : ADT
  1048   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1049                           
  1050                           ; Vector 12 : CMP1
  1051   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1052                           
  1053                           ; Vector 13 : SMT1
  1054   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1055                           
  1056                           ; Vector 14 : SMT1PRA
  1057   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1058                           
  1059                           ; Vector 15 : SMT1PRW
  1060   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1061                           
  1062                           ; Vector 16 : DMA1SCNT
  1063   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1064                           
  1065                           ; Vector 17 : DMA1DCNT
  1066   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1067                           
  1068                           ; Vector 18 : DMA1OR
  1069   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1070                           
  1071                           ; Vector 19 : DMA1A
  1072   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1073                           
  1074                           ; Vector 20 : SPI1RX
  1075   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1076                           
  1077                           ; Vector 21 : SPI1TX
  1078   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1079                           
  1080                           ; Vector 22 : SPI1
  1081   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1082                           
  1083                           ; Vector 23 : I2C1RX
  1084   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1085                           
  1086                           ; Vector 24 : I2C1TX
  1087   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1088                           
  1089                           ; Vector 25 : I2C1
  1090   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1091                           
  1092                           ; Vector 26 : I2C1E
  1093   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1094                           
  1095                           ; Vector 27 : U1RX
  1096   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1097                           
  1098                           ; Vector 28 : U1TX
  1099   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1100                           
  1101                           ; Vector 29 : U1E
  1102   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1103                           
  1104                           ; Vector 30 : U1
  1105   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1106                           
  1107                           ; Vector 31 : TMR0
  1108   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1109                           
  1110                           ; Vector 32 : TMR1
  1111   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1112                           
  1113                           ; Vector 33 : TMR1G
  1114   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1115                           
  1116                           ; Vector 34 : TMR2
  1117   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1118                           
  1119                           ; Vector 35 : CCP1
  1120   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1121                           
  1122                           ; Vector 36 : Undefined
  1123   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1124                           
  1125                           ; Vector 37 : NCO1
  1126   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1127                           
  1128                           ; Vector 38 : CWG1
  1129   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1130                           
  1131                           ; Vector 39 : CLC1
  1132   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1133                           
  1134                           ; Vector 40 : INT1
  1135   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1136                           
  1137                           ; Vector 41 : CMP2
  1138   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1139                           
  1140                           ; Vector 42 : DMA2SCNT
  1141   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1142                           
  1143                           ; Vector 43 : DMA2DCNT
  1144   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1145                           
  1146                           ; Vector 44 : DMA2OR
  1147   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1148                           
  1149                           ; Vector 45 : DMA2A
  1150   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1151                           
  1152                           ; Vector 46 : I2C2RX
  1153   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1154                           
  1155                           ; Vector 47 : I2C2TX
  1156   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1157                           
  1158                           ; Vector 48 : I2C2
  1159   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1160                           
  1161                           ; Vector 49 : I2C2E
  1162   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1163                           
  1164                           ; Vector 50 : U2RX
  1165   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1166                           
  1167                           ; Vector 51 : U2TX
  1168   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1169                           
  1170                           ; Vector 52 : U2E
  1171   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1172                           
  1173                           ; Vector 53 : U2
  1174   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1175                           
  1176                           ; Vector 54 : TMR3
  1177   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1178                           
  1179                           ; Vector 55 : TMR3G
  1180   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1181                           
  1182                           ; Vector 56 : TMR4
  1183   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1184                           
  1185                           ; Vector 57 : CCP2
  1186   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1187                           
  1188                           ; Vector 58 : Undefined
  1189   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1190                           
  1191                           ; Vector 59 : CWG2
  1192   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1193                           
  1194                           ; Vector 60 : CLC2
  1195   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1196                           
  1197                           ; Vector 61 : INT2
  1198   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1199                           
  1200                           ; Vector 62 : Undefined
  1201   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1202                           
  1203                           ; Vector 63 : Undefined
  1204   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1205                           
  1206                           ; Vector 64 : Undefined
  1207   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1208                           
  1209                           ; Vector 65 : Undefined
  1210   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1211                           
  1212                           ; Vector 66 : Undefined
  1213   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1214                           
  1215                           ; Vector 67 : Undefined
  1216   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1217                           
  1218                           ; Vector 68 : Undefined
  1219   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1220                           
  1221                           ; Vector 69 : Undefined
  1222   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1223                           
  1224                           ; Vector 70 : TMR5
  1225   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1226                           
  1227                           ; Vector 71 : TMR5G
  1228   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1229                           
  1230                           ; Vector 72 : TMR6
  1231   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1232                           
  1233                           ; Vector 73 : CCP3
  1234   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1235                           
  1236                           ; Vector 74 : CWG3
  1237   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1238                           
  1239                           ; Vector 75 : CLC3
  1240   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1241                           
  1242                           ; Vector 76 : Undefined
  1243   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1244                           
  1245                           ; Vector 77 : Undefined
  1246   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1247                           
  1248                           ; Vector 78 : Undefined
  1249   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1250                           
  1251                           ; Vector 79 : Undefined
  1252   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1253                           
  1254                           ; Vector 80 : CCP4
  1255   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1256                           
  1257                           ; Vector 81 : CLC4
  1258   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1259   0040AC                     ivt0x4008_undefint:
  1260                           	callstack 0
  1261   0040AC  00FF               	reset	
  1262                           
  1263                           	psect	rparam
  1264   000000                     
  1265                           	psect	config
  1266                           
  1267                           ;Config register CONFIG1L @ 0x300000
  1268                           ;	External Oscillator Selection
  1269                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1270                           ;	Reset Oscillator Selection
  1271                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1272   300000                     	org	3145728
  1273   300000  F8                 	db	248
  1274                           
  1275                           ;Config register CONFIG1H @ 0x300001
  1276                           ;	Clock out Enable bit
  1277                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1278                           ;	PRLOCKED One-Way Set Enable bit
  1279                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1280                           ;	Clock Switch Enable bit
  1281                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1282                           ;	Fail-Safe Clock Monitor Enable bit
  1283                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1284   300001                     	org	3145729
  1285   300001  FF                 	db	255
  1286                           
  1287                           ;Config register CONFIG2L @ 0x300002
  1288                           ;	MCLR Enable bit
  1289                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1290                           ;	Power-up timer selection bits
  1291                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1292                           ;	Multi-vector enable bit
  1293                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1294                           ;	IVTLOCK bit One-way set enable bit
  1295                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1296                           ;	Low Power BOR Enable bit
  1297                           ;	LPBOREN = OFF, ULPBOR disabled
  1298                           ;	Brown-out Reset Enable bits
  1299                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1300   300002                     	org	3145730
  1301   300002  FF                 	db	255
  1302                           
  1303                           ;Config register CONFIG2H @ 0x300003
  1304                           ;	Brown-out Reset Voltage Selection bits
  1305                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1306                           ;	ZCD Disable bit
  1307                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1308                           ;	PPSLOCK bit One-Way Set Enable bit
  1309                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1310                           ;	Stack Full/Underflow Reset Enable bit
  1311                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1312                           ;	Debugger Enable bit
  1313                           ;	DEBUG = OFF, Background debugger disabled
  1314                           ;	Extended Instruction Set Enable bit
  1315                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1316   300003                     	org	3145731
  1317   300003  FF                 	db	255
  1318                           
  1319                           ;Config register CONFIG3L @ 0x300004
  1320                           ;	WDT Period selection bits
  1321                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1322                           ;	WDT operating mode
  1323                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1324   300004                     	org	3145732
  1325   300004  9F                 	db	159
  1326                           
  1327                           ;Config register CONFIG3H @ 0x300005
  1328                           ;	WDT Window Select bits
  1329                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1330                           ;	WDT input clock selector
  1331                           ;	WDTCCS = SC, Software Control
  1332   300005                     	org	3145733
  1333   300005  FF                 	db	255
  1334                           
  1335                           ;Config register CONFIG4L @ 0x300006
  1336                           ;	Boot Block Size selection bits
  1337                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1338                           ;	Boot Block enable bit
  1339                           ;	BBEN = OFF, Boot block disabled
  1340                           ;	Storage Area Flash enable bit
  1341                           ;	SAFEN = OFF, SAF disabled
  1342                           ;	Application Block write protection bit
  1343                           ;	WRTAPP = OFF, Application Block not write protected
  1344   300006                     	org	3145734
  1345   300006  FF                 	db	255
  1346                           
  1347                           ;Config register CONFIG4H @ 0x300007
  1348                           ;	Boot Block Write Protection bit
  1349                           ;	WRTB = OFF, Boot Block not write-protected
  1350                           ;	Configuration Register Write Protection bit
  1351                           ;	WRTC = OFF, Configuration registers not write-protected
  1352                           ;	Data EEPROM Write Protection bit
  1353                           ;	WRTD = OFF, Data EEPROM not write-protected
  1354                           ;	SAF Write protection bit
  1355                           ;	WRTSAF = OFF, SAF not Write Protected
  1356                           ;	Low Voltage Programming Enable bit
  1357                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1358   300007                     	org	3145735
  1359   300007  FF                 	db	255
  1360                           
  1361                           ;Config register CONFIG5L @ 0x300008
  1362                           ;	PFM and Data EEPROM Code Protection bit
  1363                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1364   300008                     	org	3145736
  1365   300008  FF                 	db	255
  1366                           
  1367                           ;Config register CONFIG5H @ 0x300009
  1368                           ;	unspecified, using default values
  1369   300009                     	org	3145737
  1370   300009  FF                 	db	255
  1371                           tosu	equ	0x3FFF
  1372                           tosh	equ	0x3FFE
  1373                           tosl	equ	0x3FFD
  1374                           stkptr	equ	0x3FFC
  1375                           pclatu	equ	0x3FFB
  1376                           pclath	equ	0x3FFA
  1377                           pcl	equ	0x3FF9
  1378                           tblptru	equ	0x3FF8
  1379                           tblptrh	equ	0x3FF7
  1380                           tblptrl	equ	0x3FF6
  1381                           tablat	equ	0x3FF5
  1382                           prodh	equ	0x3FF4
  1383                           prodl	equ	0x3FF3
  1384                           indf0	equ	0x3FEF
  1385                           postinc0	equ	0x3FEE
  1386                           postdec0	equ	0x3FED
  1387                           preinc0	equ	0x3FEC
  1388                           plusw0	equ	0x3FEB
  1389                           fsr0h	equ	0x3FEA
  1390                           fsr0l	equ	0x3FE9
  1391                           wreg	equ	0x3FE8
  1392                           indf1	equ	0x3FE7
  1393                           postinc1	equ	0x3FE6
  1394                           postdec1	equ	0x3FE5
  1395                           preinc1	equ	0x3FE4
  1396                           plusw1	equ	0x3FE3
  1397                           fsr1h	equ	0x3FE2
  1398                           fsr1l	equ	0x3FE1
  1399                           bsr	equ	0x3FE0
  1400                           indf2	equ	0x3FDF
  1401                           postinc2	equ	0x3FDE
  1402                           postdec2	equ	0x3FDD
  1403                           preinc2	equ	0x3FDC
  1404                           plusw2	equ	0x3FDB
  1405                           fsr2h	equ	0x3FDA
  1406                           fsr2l	equ	0x3FD9
  1407                           status	equ	0x3FD8

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), STR_3(CODE[9]), STR_4(CODE[7]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), STR_3(CODE[9]), STR_4(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->_delay_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4338
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    2612
                                             15 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     995
                                             14 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     874
                                             13 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1726
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     874
                                             13 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     852
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             3     3      0     620
                                              4 COMRAM     3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _delay_us                                             4     2      2     502
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay

 _INT0_ISR (ROOT)
   _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     13      13       1       20.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
ABS                  0      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        33      0       0      69        0.0%
BITBIGSFRhhl         1      0       0      70        0.0%
BITBIGSFRhl          6      0       0      71        0.0%
BITBIGSFRlh          6      0       0      72        0.0%
BITBIGSFRllh       618      0       0      73        0.0%
BITBIGSFRlll       1A1      0       0      74        0.0%
BIGRAM            1FFF      0       0      75        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 30 17:03:33 2024

           ?_LCD_Command 0001                       l31 42CE                       l32 42CE  
                     l43 4310                       l52 427E                       l37 42AC  
                     l46 42F2                       l65 41DA                       l57 4216  
            ?_LCD_String 000F                      l980 4192                      l990 41AA  
                    l982 419E                      l992 41C0                      l994 41C4  
                    l988 41A6                      l996 42D8                      l998 42DE  
                    u200 41C0                      u201 41BC                      u210 41DA  
                    u211 41D6                      u220 427E                      u221 427A  
                    u230 41EE                      u231 41EA              LCD_Char@dat 000E  
                   l1000 42E0                     l1010 42FC                     l1002 42E2  
                   l1012 42FE                     l1004 42E4                     l1020 4250  
                   l1014 4300                     l1030 428C                     l1006 42E6  
                   l1022 4254                     l1016 4302                     l1008 42F6  
                   l1032 4290                     l1024 4262                     l1040 41F6  
                   l1018 4304                     l1026 4264                     l1042 4200  
                   l1034 41DE                     l1028 4280                     l1044 4208  
                   l1036 41DE                     l1046 420E                     l1038 41EE  
                   l1054 42AE                     l1056 42B2                     l1058 42C0  
                   STR_1 2001                     STR_2 2012                     STR_3 201C  
                   STR_4 2025                     _LATB 3FBB                     i2l92 4224  
                   i2l94 424E                     _main 42AE                     start 40AE  
        __end_of_MSdelay 41DC            _LCD_String_xy 41DC             ___param_bank 0000  
       __end_of_LCD_Char 42F4         __end_of_LCD_Init 42AE         __end_of_INT0_ISR 4192  
                  ?_main 0001                    _LATA0 1FDD0                    _LATA1 1FDD1  
                  i2l100 418A                    i2l110 4190                    _TRISA 3FC2  
                  _TRISB 3FC3                    tablat 3FF5                    status 3FD8  
         ?_LCD_String_xy 0010          __initialization 4312             __end_of_main 42D6  
                 ??_main 0014            __activetblptr 0001         LCD_String_xy@msg 0011  
       LCD_String_xy@pos 0010         LCD_String_xy@row 0012                   i2l1050 4234  
                 i2l1052 4238                   i2l1140 40DE                   i2l1150 4110  
                 i2l1142 40E0                   i2l1134 40B8                ??_MSdelay 000A  
                 i2l1048 4218                   i2l1160 4144                   i2l1152 411E  
                 i2l1136 40C4                   i2l1144 40E6                   i2l1128 40B4  
                 i2l1170 4178                   i2l1162 4150                   i2l1154 4120  
                 i2l1146 40F8                   i2l1138 40D0                   i2l1172 417A  
                 i2l1164 415E                   i2l1148 4104                   i2l1156 4126  
                 i2l1166 4160                   i2l1158 4138                   i2l1168 4166  
       __end_of_delay_us 4250                   isa$std 0001             __mediumconst 0000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 431E  
              ?_LCD_Init 0001                ?_INT0_ISR 0001          ??_LCD_String_xy 0012  
          ___rparam_used 0001                INT0_ISR@i 0005           __pcstackCOMRAM 0001  
           ??_LCD_String 0010            INT0_ISR@timer 0006               ??_LCD_Char 000E  
             ??_LCD_Init 000F               ??_INT0_ISR 0005       __end_of_LCD_String 4280  
                IVTBASEH 3FD6                  IVTBASEL 3FD5                  IVTBASEU 3FD7  
              ?_delay_us 0001                  i2u24_40 424E                  i2u24_41 424A  
                i2u35_40 40F8                  i2u35_41 40F4                  i2u36_40 4138  
                i2u36_41 4134                  i2u37_40 4178                  i2u37_41 4174  
                i2u38_40 418A                  i2u38_41 4186                  _MSdelay 4192  
          LCD_String@msg 000F                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000                  __pcinit 4312                  __ramtop 2000  
          ivt0x4008_base 4008                  __ptext0 42AE                  __ptext1 41DC  
                __ptext2 4250                  __ptext3 42D6                  __ptext4 4280  
                __ptext5 42F4                  __ptext6 4192                  __ptext7 40B4  
                __ptext8 4218               ??_delay_us 0003     end_of_initialization 431E  
             delay_us@us 0001           LCD_Command@cmd 000E                _PORTAbits 3FCA  
              _PORTCbits 3FCC            ??_LCD_Command 000E      start_initialization 4312  
  __end_of_LCD_String_xy 4218      __end_of_LCD_Command 4312                 ?_MSdelay 0008  
            __pivt0x4008 4008              __smallconst 2000    LCD_String_xy@location 0013  
               MSdelay@i 000A                 MSdelay@j 000C                 _LCD_Char 42D6  
               _LCD_Init 4280                 _INT0_ISR 40B4                delay_us@i 0003  
               _PIR1bits 39A1        ivt0x4008_undefint 40AC              _LCD_Command 42F4  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
               _delay_us 4218               MSdelay@val 0008                 isa$xinst 0000  
             _LCD_String 4250                 intlevel2 0000  
