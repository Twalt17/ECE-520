

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 20 20:54:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K42 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _LATD1	set	130537
    54   000000                     _LATB	set	16315
    55   000000                     _TRISB	set	16323
    56   000000                     _TRISD	set	16325
    57   000000                     _LATD0	set	130536
    58                           
    59                           	psect	smallconst
    60   002000                     __psmallconst:
    61                           	callstack 0
    62   002000  00                 	db	0
    63   002001                     STR_1:
    64   002001  45                 	db	69	;'E'
    65   002002  6D                 	db	109	;'m'
    66   002003  62                 	db	98	;'b'
    67   002004  65                 	db	101	;'e'
    68   002005  64                 	db	100	;'d'
    69   002006  64                 	db	100	;'d'
    70   002007  65                 	db	101	;'e'
    71   002008  64                 	db	100	;'d'
    72   002009  20                 	db	32
    73   00200A  53                 	db	83	;'S'
    74   00200B  79                 	db	121	;'y'
    75   00200C  73                 	db	115	;'s'
    76   00200D  74                 	db	116	;'t'
    77   00200E  65                 	db	101	;'e'
    78   00200F  6D                 	db	109	;'m'
    79   002010  21                 	db	33
    80   002011  00                 	db	0
    81   002012                     STR_2:
    82   002012  45                 	db	69	;'E'
    83   002013  45                 	db	69	;'E'
    84   002014  33                 	db	51	;'3'
    85   002015  31                 	db	49	;'1'
    86   002016  30                 	db	48	;'0'
    87   002017  40                 	db	64	;'@'
    88   002018  53                 	db	83	;'S'
    89   002019  53                 	db	83	;'S'
    90   00201A  55                 	db	85	;'U'
    91   00201B  00                 	db	0
    92   00201C  00                 	db	0	; dummy byte at the end
    93   000000                     
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   0021A0                     __pcinit:
    98                           	callstack 0
    99   0021A0                     start_initialization:
   100                           	callstack 0
   101   0021A0                     __initialization:
   102                           	callstack 0
   103   0021A0                     end_of_initialization:
   104                           	callstack 0
   105   0021A0                     __end_of__initialization:
   106                           	callstack 0
   107   0021A0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108   0021A2  6EF8               	movwf	tblptru,c
   109   0021A4  0E20               	movlw	high __Lsmallconst
   110   0021A6  6EF7               	movwf	tblptrh,c
   111   0021A8  0100               	movlb	0
   112   0021AA  EF5D  F010         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115   000001                     __pcstackCOMRAM:
   116                           	callstack 0
   117   000001                     MSdelay@val:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   000001                     	ds	2
   122   000003                     MSdelay@i:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x2
   126   000003                     	ds	2
   127   000005                     MSdelay@j:
   128                           	callstack 0
   129                           
   130                           ; 2 bytes @ 0x4
   131   000005                     	ds	2
   132   000007                     LCD_Command@cmd:
   133                           	callstack 0
   134   000007                     LCD_Char@dat:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x6
   138   000007                     	ds	1
   139   000008                     LCD_String@msg:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x7
   143   000008                     	ds	1
   144   000009                     LCD_String_xy@pos:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x8
   148   000009                     	ds	1
   149   00000A                     LCD_String_xy@msg:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153   00000A                     	ds	1
   154   00000B                     LCD_String_xy@row:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0xA
   158   00000B                     	ds	1
   159   00000C                     LCD_String_xy@location:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0xB
   163   00000C                     	ds	1
   164   00000D                     ??_main:
   165                           
   166                           ; 1 bytes @ 0xC
   167   00000D                     	ds	2
   168                           
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 87 in file "newmain.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   192 ;;Total ram usage:        2 bytes
   193 ;; Hardware stack levels required when called: 4
   194 ;; This function calls:
   195 ;;		_LCD_Init
   196 ;;		_LCD_String_xy
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203   0020BA                     __ptext0:
   204                           	callstack 0
   205   0020BA                     _main:
   206                           	callstack 27
   207   0020BA                     l27:
   208   0020BA                     
   209                           ;newmain.c: 91:     {;newmain.c: 92:     LCD_Init();
   210   0020BA  EC0F  F010         	call	_LCD_Init	;wreg free
   211   0020BE                     
   212                           ;newmain.c: 93:     LCD_String_xy(1,0,"Embedded System!");
   213   0020BE  0E00               	movlw	0
   214   0020C0  6E09               	movwf	LCD_String_xy@pos^0,c
   215   0020C2  0E01               	movlw	low STR_1
   216   0020C4  6E0A               	movwf	LCD_String_xy@msg^0,c
   217   0020C6  0E01               	movlw	1
   218   0020C8  EC7C  F010         	call	_LCD_String_xy
   219   0020CC                     
   220                           ;newmain.c: 95:     LCD_String_xy(2,0,"EE310@SSU");
   221   0020CC  0E00               	movlw	0
   222   0020CE  6E09               	movwf	LCD_String_xy@pos^0,c
   223   0020D0  0E12               	movlw	low STR_2
   224   0020D2  6E0A               	movwf	LCD_String_xy@msg^0,c
   225   0020D4  0E02               	movlw	2
   226   0020D6  EC7C  F010         	call	_LCD_String_xy
   227   0020DA                     
   228                           ;newmain.c: 97:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   229   0020DA  0E06               	movlw	6
   230   0020DC  6E0E               	movwf	(??_main+1)^0,c
   231   0020DE  0E13               	movlw	19
   232   0020E0  6E0D               	movwf	??_main^0,c
   233   0020E2  0EAE               	movlw	174
   234   0020E4                     u97:
   235   0020E4  2EE8               	decfsz	wreg,f,c
   236   0020E6  D7FE               	bra	u97
   237   0020E8  2E0D               	decfsz	??_main^0,f,c
   238   0020EA  D7FC               	bra	u97
   239   0020EC  2E0E               	decfsz	(??_main+1)^0,f,c
   240   0020EE  D7FA               	bra	u97
   241   0020F0  EF5D  F010         	goto	l27
   242   0020F4  EFFE  F0FF         	goto	start
   243   0020F8                     __end_of_main:
   244                           	callstack 0
   245                           
   246 ;; *************** function _LCD_String_xy *****************
   247 ;; Defined at:
   248 ;;		line 152 in file "newmain.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;  row             1    wreg     unsigned char 
   251 ;;  pos             1    8[COMRAM] unsigned char 
   252 ;;  msg             1    9[COMRAM] PTR const unsigned char 
   253 ;;		 -> STR_2(10), STR_1(17), 
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  row             1   10[COMRAM] unsigned char 
   256 ;;  location        1   11[COMRAM] unsigned char 
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;Total ram usage:        4 bytes
   271 ;; Hardware stack levels used: 1
   272 ;; Hardware stack levels required when called: 3
   273 ;; This function calls:
   274 ;;		_LCD_Command
   275 ;;		_LCD_String
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282   0020F8                     __ptext1:
   283                           	callstack 0
   284   0020F8                     _LCD_String_xy:
   285                           	callstack 27
   286                           
   287                           ;incstack = 0
   288                           ;LCD_String_xy@row stored from wreg
   289   0020F8  6E0B               	movwf	LCD_String_xy@row^0,c
   290   0020FA                     
   291                           ;newmain.c: 155:     if(row<=1)
   292   0020FA  0E02               	movlw	2
   293   0020FC  600B               	cpfslt	LCD_String_xy@row^0,c
   294   0020FE  EF83  F010         	goto	u81
   295   002102  EF85  F010         	goto	u80
   296   002106                     u81:
   297   002106  EF8E  F010         	goto	l877
   298   00210A                     u80:
   299   00210A                     
   300                           ;newmain.c: 156:     {;newmain.c: 157:         location=(0x80) | ((pos) & 0x0f);
   301   00210A  5009               	movf	LCD_String_xy@pos^0,w,c
   302   00210C  0B0F               	andlw	15
   303   00210E  0980               	iorlw	128
   304   002110  6E0C               	movwf	LCD_String_xy@location^0,c
   305   002112                     
   306                           ;newmain.c: 158:         LCD_Command(location);
   307   002112  500C               	movf	LCD_String_xy@location^0,w,c
   308   002114  ECC1  F010         	call	_LCD_Command
   309                           
   310                           ;newmain.c: 159:     }
   311   002118  EF95  F010         	goto	l881
   312   00211C                     l877:
   313                           
   314                           ;newmain.c: 161:     {;newmain.c: 162:         location=(0xC0) | ((pos) & 0x0f);
   315   00211C  5009               	movf	LCD_String_xy@pos^0,w,c
   316   00211E  0B0F               	andlw	15
   317   002120  09C0               	iorlw	192
   318   002122  6E0C               	movwf	LCD_String_xy@location^0,c
   319   002124                     
   320                           ;newmain.c: 163:         LCD_Command(location);
   321   002124  500C               	movf	LCD_String_xy@location^0,w,c
   322   002126  ECC1  F010         	call	_LCD_Command
   323   00212A                     l881:
   324                           
   325                           ;newmain.c: 165:     LCD_String(msg);
   326   00212A  C00A  F008         	movff	LCD_String_xy@msg,LCD_String@msg
   327   00212E  EC9A  F010         	call	_LCD_String	;wreg free
   328   002132  0012               	return		;funcret
   329   002134                     __end_of_LCD_String_xy:
   330                           	callstack 0
   331                           
   332 ;; *************** function _LCD_String *****************
   333 ;; Defined at:
   334 ;;		line 143 in file "newmain.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;  msg             1    7[COMRAM] PTR const unsigned char 
   337 ;;		 -> STR_2(10), STR_1(17), 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;		None
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   353 ;;Total ram usage:        1 bytes
   354 ;; Hardware stack levels used: 1
   355 ;; Hardware stack levels required when called: 2
   356 ;; This function calls:
   357 ;;		_LCD_Char
   358 ;; This function is called by:
   359 ;;		_LCD_String_xy
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text2
   364   002134                     __ptext2:
   365                           	callstack 0
   366   002134                     _LCD_String:
   367                           	callstack 27
   368   002134                     
   369                           ;newmain.c: 143: void LCD_String(const char *msg);newmain.c: 144: {;newmain.c: 145:     
      +                          while((*msg)!=0)
   370   002134  EFA4  F010         	goto	l861
   371   002138                     l857:
   372                           
   373                           ;newmain.c: 146:     {;newmain.c: 147:       LCD_Char(*msg);
   374   002138  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   375   00213E                     	if	0	;There is only one active tblptr byte
   376   00213E                     	endif
   377   00213E                     	if	0	;tblptru may be non-zero
   378   00213E                     	endif
   379   00213E                     	if	0	;tblptru may be non-zero
   380   00213E                     	endif
   381   00213E  0008               	tblrd		*
   382   002140  50F5               	movf	tablat,w,c
   383   002142  ECB2  F010         	call	_LCD_Char
   384   002146                     
   385                           ;newmain.c: 148:       msg++;
   386   002146  2A08               	incf	LCD_String@msg^0,f,c
   387   002148                     l861:
   388                           
   389                           ;newmain.c: 145:     while((*msg)!=0)
   390   002148  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   391   00214E                     	if	0	;There is only one active tblptr byte
   392   00214E                     	endif
   393   00214E                     	if	0	;tblptru may be non-zero
   394   00214E                     	endif
   395   00214E                     	if	0	;tblptru may be non-zero
   396   00214E                     	endif
   397   00214E  0008               	tblrd		*
   398   002150  50F5               	movf	tablat,w,c
   399   002152  0900               	iorlw	0
   400   002154  A4D8               	btfss	status,2,c
   401   002156  EFAF  F010         	goto	u71
   402   00215A  EFB1  F010         	goto	u70
   403   00215E                     u71:
   404   00215E  EF9C  F010         	goto	l857
   405   002162                     u70:
   406   002162  0012               	return		;funcret
   407   002164                     __end_of_LCD_String:
   408                           	callstack 0
   409                           
   410 ;; *************** function _LCD_Char *****************
   411 ;; Defined at:
   412 ;;		line 132 in file "newmain.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  dat             1    wreg     unsigned char 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  dat             1    6[COMRAM] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   430 ;;Total ram usage:        1 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 1
   433 ;; This function calls:
   434 ;;		_MSdelay
   435 ;; This function is called by:
   436 ;;		_LCD_String
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text3
   441   002164                     __ptext3:
   442                           	callstack 0
   443   002164                     _LCD_Char:
   444                           	callstack 27
   445                           
   446                           ;incstack = 0
   447                           ;LCD_Char@dat stored from wreg
   448   002164  6E07               	movwf	LCD_Char@dat^0,c
   449   002166                     
   450                           ;newmain.c: 132: void LCD_Char(char dat);newmain.c: 133: {;newmain.c: 134:     LATB= dat
      +                          ;
   451   002166  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
   452   00216C                     
   453                           ;newmain.c: 135:     LATD0 = 1;
   454   00216C  80BD               	bsf	16317,0,c	;volatile
   455   00216E                     
   456                           ;newmain.c: 136:     LATD1=1;
   457   00216E  82BD               	bsf	16317,1,c	;volatile
   458   002170                     
   459                           ;newmain.c: 137:     __nop();
   460   002170  0000               	nop	
   461   002172                     
   462                           ;newmain.c: 138:     LATD1=0;
   463   002172  92BD               	bcf	16317,1,c	;volatile
   464   002174                     
   465                           ;newmain.c: 139:     MSdelay(1);
   466   002174  0E00               	movlw	0
   467   002176  6E02               	movwf	(MSdelay@val+1)^0,c
   468   002178  0E01               	movlw	1
   469   00217A  6E01               	movwf	MSdelay@val^0,c
   470   00217C  EC38  F010         	call	_MSdelay	;wreg free
   471   002180  0012               	return		;funcret
   472   002182                     __end_of_LCD_Char:
   473                           	callstack 0
   474                           
   475 ;; *************** function _LCD_Init *****************
   476 ;; Defined at:
   477 ;;		line 103 in file "newmain.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		_LCD_Command
   500 ;;		_MSdelay
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text4
   507   00201E                     __ptext4:
   508                           	callstack 0
   509   00201E                     _LCD_Init:
   510                           	callstack 28
   511   00201E                     
   512                           ;newmain.c: 105:     MSdelay(15);
   513   00201E  0E00               	movlw	0
   514   002020  6E02               	movwf	(MSdelay@val+1)^0,c
   515   002022  0E0F               	movlw	15
   516   002024  6E01               	movwf	MSdelay@val^0,c
   517   002026  EC38  F010         	call	_MSdelay	;wreg free
   518   00202A                     
   519                           ;newmain.c: 106:     TRISB = 0x00;
   520   00202A  0E00               	movlw	0
   521   00202C  6EC3               	movwf	195,c	;volatile
   522   00202E                     
   523                           ;newmain.c: 107:     TRISD = 0x00;
   524   00202E  0E00               	movlw	0
   525   002030  6EC5               	movwf	197,c	;volatile
   526                           
   527                           ;newmain.c: 108:     LCD_Command(0x01);
   528   002032  0E01               	movlw	1
   529   002034  ECC1  F010         	call	_LCD_Command
   530                           
   531                           ;newmain.c: 109:     MSdelay(15);
   532   002038  0E00               	movlw	0
   533   00203A  6E02               	movwf	(MSdelay@val+1)^0,c
   534   00203C  0E0F               	movlw	15
   535   00203E  6E01               	movwf	MSdelay@val^0,c
   536   002040  EC38  F010         	call	_MSdelay	;wreg free
   537                           
   538                           ;newmain.c: 110:     LCD_Command(0x38);
   539   002044  0E38               	movlw	56
   540   002046  ECC1  F010         	call	_LCD_Command
   541                           
   542                           ;newmain.c: 111:     MSdelay(15);
   543   00204A  0E00               	movlw	0
   544   00204C  6E02               	movwf	(MSdelay@val+1)^0,c
   545   00204E  0E0F               	movlw	15
   546   002050  6E01               	movwf	MSdelay@val^0,c
   547   002052  EC38  F010         	call	_MSdelay	;wreg free
   548                           
   549                           ;newmain.c: 112:     LCD_Command(0x0c);
   550   002056  0E0C               	movlw	12
   551   002058  ECC1  F010         	call	_LCD_Command
   552                           
   553                           ;newmain.c: 113:     MSdelay(15);
   554   00205C  0E00               	movlw	0
   555   00205E  6E02               	movwf	(MSdelay@val+1)^0,c
   556   002060  0E0F               	movlw	15
   557   002062  6E01               	movwf	MSdelay@val^0,c
   558   002064  EC38  F010         	call	_MSdelay	;wreg free
   559                           
   560                           ;newmain.c: 114:     LCD_Command(0x06);
   561   002068  0E06               	movlw	6
   562   00206A  ECC1  F010         	call	_LCD_Command
   563   00206E  0012               	return		;funcret
   564   002070                     __end_of_LCD_Init:
   565                           	callstack 0
   566                           
   567 ;; *************** function _LCD_Command *****************
   568 ;; Defined at:
   569 ;;		line 122 in file "newmain.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  cmd             1    wreg     unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  cmd             1    6[COMRAM] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 1
   590 ;; This function calls:
   591 ;;		_MSdelay
   592 ;; This function is called by:
   593 ;;		_LCD_Init
   594 ;;		_LCD_String_xy
   595 ;;		_LCD_Clear
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text5
   600   002182                     __ptext5:
   601                           	callstack 0
   602   002182                     _LCD_Command:
   603                           	callstack 28
   604                           
   605                           ;incstack = 0
   606                           ;LCD_Command@cmd stored from wreg
   607   002182  6E07               	movwf	LCD_Command@cmd^0,c
   608   002184                     
   609                           ;newmain.c: 122: void LCD_Command(char cmd );newmain.c: 123: {;newmain.c: 124:     LATB=
      +                           cmd;
   610   002184  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   611   00218A                     
   612                           ;newmain.c: 125:     LATD0 = 0;
   613   00218A  90BD               	bcf	16317,0,c	;volatile
   614   00218C                     
   615                           ;newmain.c: 126:     LATD1 = 1;
   616   00218C  82BD               	bsf	16317,1,c	;volatile
   617   00218E                     
   618                           ;newmain.c: 127:     __nop();
   619   00218E  0000               	nop	
   620   002190                     
   621                           ;newmain.c: 128:     LATD1 = 0;
   622   002190  92BD               	bcf	16317,1,c	;volatile
   623   002192                     
   624                           ;newmain.c: 129:     MSdelay(3);
   625   002192  0E00               	movlw	0
   626   002194  6E02               	movwf	(MSdelay@val+1)^0,c
   627   002196  0E03               	movlw	3
   628   002198  6E01               	movwf	MSdelay@val^0,c
   629   00219A  EC38  F010         	call	_MSdelay	;wreg free
   630   00219E  0012               	return		;funcret
   631   0021A0                     __end_of_LCD_Command:
   632                           	callstack 0
   633                           
   634 ;; *************** function _MSdelay *****************
   635 ;; Defined at:
   636 ;;		line 169 in file "newmain.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  val             2    0[COMRAM] unsigned int 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  j               2    4[COMRAM] unsigned int 
   641 ;;  i               2    2[COMRAM] unsigned int 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   652 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;Total ram usage:        6 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_LCD_Init
   661 ;;		_LCD_Command
   662 ;;		_LCD_Char
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text6
   667   002070                     __ptext6:
   668                           	callstack 0
   669   002070                     _MSdelay:
   670                           	callstack 27
   671   002070                     
   672                           ;newmain.c: 169: void MSdelay(unsigned int val);newmain.c: 170: {;newmain.c: 171:      u
      +                          nsigned int i,j;;newmain.c: 172:         for(i=0;i<val;i++)
   673   002070  0E00               	movlw	0
   674   002072  6E04               	movwf	(MSdelay@i+1)^0,c
   675   002074  0E00               	movlw	0
   676   002076  6E03               	movwf	MSdelay@i^0,c
   677   002078  EF51  F010         	goto	l829
   678   00207C                     l817:
   679                           
   680                           ;newmain.c: 173:             for(j=0;j<165;j++);
   681   00207C  0E00               	movlw	0
   682   00207E  6E06               	movwf	(MSdelay@j+1)^0,c
   683   002080  0E00               	movlw	0
   684   002082  6E05               	movwf	MSdelay@j^0,c
   685   002084                     l823:
   686   002084  4A05               	infsnz	MSdelay@j^0,f,c
   687   002086  2A06               	incf	(MSdelay@j+1)^0,f,c
   688   002088  5006               	movf	(MSdelay@j+1)^0,w,c
   689   00208A  E109               	bnz	u50
   690   00208C  0EA5               	movlw	165
   691   00208E  5C05               	subwf	MSdelay@j^0,w,c
   692   002090  A0D8               	btfss	status,0,c
   693   002092  EF4D  F010         	goto	u51
   694   002096  EF4F  F010         	goto	u50
   695   00209A                     u51:
   696   00209A  EF42  F010         	goto	l823
   697   00209E                     u50:
   698   00209E  4A03               	infsnz	MSdelay@i^0,f,c
   699   0020A0  2A04               	incf	(MSdelay@i+1)^0,f,c
   700   0020A2                     l829:
   701   0020A2  5001               	movf	MSdelay@val^0,w,c
   702   0020A4  5C03               	subwf	MSdelay@i^0,w,c
   703   0020A6  5002               	movf	(MSdelay@val+1)^0,w,c
   704   0020A8  5804               	subwfb	(MSdelay@i+1)^0,w,c
   705   0020AA  A0D8               	btfss	status,0,c
   706   0020AC  EF5A  F010         	goto	u61
   707   0020B0  EF5C  F010         	goto	u60
   708   0020B4                     u61:
   709   0020B4  EF3E  F010         	goto	l817
   710   0020B8                     u60:
   711   0020B8  0012               	return		;funcret
   712   0020BA                     __end_of_MSdelay:
   713                           	callstack 0
   714                           
   715                           	psect	rparam
   716   000000                     
   717                           	psect	config
   718                           
   719                           ;Config register CONFIG1L @ 0x300000
   720                           ;	External Oscillator Selection
   721                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   722                           ;	Reset Oscillator Selection
   723                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   724   300000                     	org	3145728
   725   300000  F8                 	db	248
   726                           
   727                           ;Config register CONFIG1H @ 0x300001
   728                           ;	Clock out Enable bit
   729                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   730                           ;	PRLOCKED One-Way Set Enable bit
   731                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   732                           ;	Clock Switch Enable bit
   733                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   734                           ;	Fail-Safe Clock Monitor Enable bit
   735                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   736   300001                     	org	3145729
   737   300001  FF                 	db	255
   738                           
   739                           ;Config register CONFIG2L @ 0x300002
   740                           ;	MCLR Enable bit
   741                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   742                           ;	Power-up timer selection bits
   743                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   744                           ;	Multi-vector enable bit
   745                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   746                           ;	IVTLOCK bit One-way set enable bit
   747                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   748                           ;	Low Power BOR Enable bit
   749                           ;	LPBOREN = OFF, ULPBOR disabled
   750                           ;	Brown-out Reset Enable bits
   751                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   752   300002                     	org	3145730
   753   300002  FF                 	db	255
   754                           
   755                           ;Config register CONFIG2H @ 0x300003
   756                           ;	Brown-out Reset Voltage Selection bits
   757                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   758                           ;	ZCD Disable bit
   759                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   760                           ;	PPSLOCK bit One-Way Set Enable bit
   761                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   762                           ;	Stack Full/Underflow Reset Enable bit
   763                           ;	STVREN = ON, Stack full/underflow will cause Reset
   764                           ;	Debugger Enable bit
   765                           ;	DEBUG = OFF, Background debugger disabled
   766                           ;	Extended Instruction Set Enable bit
   767                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   768   300003                     	org	3145731
   769   300003  FF                 	db	255
   770                           
   771                           ;Config register CONFIG3L @ 0x300004
   772                           ;	WDT Period selection bits
   773                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   774                           ;	WDT operating mode
   775                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   776   300004                     	org	3145732
   777   300004  9F                 	db	159
   778                           
   779                           ;Config register CONFIG3H @ 0x300005
   780                           ;	WDT Window Select bits
   781                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   782                           ;	WDT input clock selector
   783                           ;	WDTCCS = SC, Software Control
   784   300005                     	org	3145733
   785   300005  FF                 	db	255
   786                           
   787                           ;Config register CONFIG4L @ 0x300006
   788                           ;	Boot Block Size selection bits
   789                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   790                           ;	Boot Block enable bit
   791                           ;	BBEN = OFF, Boot block disabled
   792                           ;	Storage Area Flash enable bit
   793                           ;	SAFEN = OFF, SAF disabled
   794                           ;	Application Block write protection bit
   795                           ;	WRTAPP = OFF, Application Block not write protected
   796   300006                     	org	3145734
   797   300006  FF                 	db	255
   798                           
   799                           ;Config register CONFIG4H @ 0x300007
   800                           ;	Boot Block Write Protection bit
   801                           ;	WRTB = OFF, Boot Block not write-protected
   802                           ;	Configuration Register Write Protection bit
   803                           ;	WRTC = OFF, Configuration registers not write-protected
   804                           ;	Data EEPROM Write Protection bit
   805                           ;	WRTD = OFF, Data EEPROM not write-protected
   806                           ;	SAF Write protection bit
   807                           ;	WRTSAF = OFF, SAF not Write Protected
   808                           ;	Low Voltage Programming Enable bit
   809                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   810   300007                     	org	3145735
   811   300007  FF                 	db	255
   812                           
   813                           ;Config register CONFIG5L @ 0x300008
   814                           ;	PFM and Data EEPROM Code Protection bit
   815                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   816   300008                     	org	3145736
   817   300008  FF                 	db	255
   818                           
   819                           ;Config register CONFIG5H @ 0x300009
   820                           ;	unspecified, using default values
   821   300009                     	org	3145737
   822   300009  FF                 	db	255
   823                           tosu	equ	0x3FFF
   824                           tosh	equ	0x3FFE
   825                           tosl	equ	0x3FFD
   826                           stkptr	equ	0x3FFC
   827                           pclatu	equ	0x3FFB
   828                           pclath	equ	0x3FFA
   829                           pcl	equ	0x3FF9
   830                           tblptru	equ	0x3FF8
   831                           tblptrh	equ	0x3FF7
   832                           tblptrl	equ	0x3FF6
   833                           tablat	equ	0x3FF5
   834                           prodh	equ	0x3FF4
   835                           prodl	equ	0x3FF3
   836                           indf0	equ	0x3FEF
   837                           postinc0	equ	0x3FEE
   838                           postdec0	equ	0x3FED
   839                           preinc0	equ	0x3FEC
   840                           plusw0	equ	0x3FEB
   841                           fsr0h	equ	0x3FEA
   842                           fsr0l	equ	0x3FE9
   843                           wreg	equ	0x3FE8
   844                           indf1	equ	0x3FE7
   845                           postinc1	equ	0x3FE6
   846                           postdec1	equ	0x3FE5
   847                           preinc1	equ	0x3FE4
   848                           plusw1	equ	0x3FE3
   849                           fsr1h	equ	0x3FE2
   850                           fsr1l	equ	0x3FE1
   851                           bsr	equ	0x3FE0
   852                           indf2	equ	0x3FDF
   853                           postinc2	equ	0x3FDE
   854                           postdec2	equ	0x3FDD
   855                           preinc2	equ	0x3FDC
   856                           plusw2	equ	0x3FDB
   857                           fsr2h	equ	0x3FDA
   858                           fsr2l	equ	0x3FD9
   859                           status	equ	0x3FD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2818
                                             12 COMRAM     2     2      0
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    1700
                                              8 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     691
                                              7 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     570
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1118
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     570
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     548
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBIGSFRhh         3A      0       0      68        0.0%
BITBIGSFRhl          1      0       0      69        0.0%
BITBIGSFRlhh         5      0       0      70        0.0%
BITBIGSFRlhl         1      0       0      71        0.0%
BITBIGSFRll        7BB      0       0      72        0.0%
ABS                  0      0       0      73        0.0%
BIGRAM            1FFF      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 20 20:54:20 2024

           ?_LCD_Command 0001                       l33 206E                       l42 2180  
                     l27 20BA                       l61 20B8                       l53 2132  
                     l39 219E                       l48 2162                       u50 209E  
                     u51 209A                       u60 20B8                       u61 20B4  
                     u70 2162                       u71 215E                       u80 210A  
                     u81 2106                       u97 20E4              ?_LCD_String 0008  
                    l823 2084                      l815 2070                      l831 2166  
                    l825 2088                      l817 207C                      l841 2174  
                    l833 216C                      l827 209E                      l851 2190  
                    l843 2184                      l835 216E                      l829 20A2  
                    l853 2192                      l845 218A                      l837 2170  
                    l861 2148                      l847 218C                      l863 201E  
                    l839 2172                      l855 2134                      l871 20FA  
                    l849 218E                      l865 202A                      l857 2138  
                    l881 212A                      l873 210A                      l867 202E  
                    l859 2146                      l875 2112                      l883 20BA  
                    l877 211C                      l869 20FA                      l885 20BE  
                    l879 2124                      l887 20CC                      l889 20DA  
                    wreg 3FE8              LCD_Char@dat 0007                     STR_1 2001  
                   STR_2 2012                     _LATB 3FBB                     _main 20BA  
                   start FFFC          __end_of_MSdelay 20BA            _LCD_String_xy 20F8  
           ___param_bank 0000         __end_of_LCD_Char 2182         __end_of_LCD_Init 2070  
                  ?_main 0001                    _LATD0 1FDE8                    _LATD1 1FDE9  
                  _TRISB 3FC3                    _TRISD 3FC5                    tablat 3FF5  
                  status 3FD8           ?_LCD_String_xy 0009          __initialization 21A0  
           __end_of_main 20F8                   ??_main 000D            __activetblptr 0001  
       LCD_String_xy@msg 000A         LCD_String_xy@pos 0009         LCD_String_xy@row 000B  
              ??_MSdelay 0003                   isa$std 0001             __mediumconst 0000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 21A0  
              ?_LCD_Init 0001          ??_LCD_String_xy 000B            ___rparam_used 0001  
         __pcstackCOMRAM 0001             ??_LCD_String 0009               ??_LCD_Char 0007  
             ??_LCD_Init 0008       __end_of_LCD_String 2164                  _MSdelay 2070  
          LCD_String@msg 0008                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000                  __pcinit 21A0                  __ramtop 2000  
                __ptext0 20BA                  __ptext1 20F8                  __ptext2 2134  
                __ptext3 2164                  __ptext4 201E                  __ptext5 2182  
                __ptext6 2070     end_of_initialization 21A0           LCD_Command@cmd 0007  
          ??_LCD_Command 0007      start_initialization 21A0    __end_of_LCD_String_xy 2134  
    __end_of_LCD_Command 21A0                 ?_MSdelay 0001              __smallconst 2000  
  LCD_String_xy@location 000C                 MSdelay@i 0003                 MSdelay@j 0005  
               _LCD_Char 2164                 _LCD_Init 201E              _LCD_Command 2182  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
             MSdelay@val 0001                 isa$xinst 0000               _LCD_String 2134  
