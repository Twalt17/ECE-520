

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 20 21:11:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K42 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _LATD1	set	130537
    54   000000                     _LATB	set	16315
    55   000000                     _TRISB	set	16323
    56   000000                     _TRISD	set	16325
    57   000000                     _LATD0	set	130536
    58                           
    59                           	psect	smallconst
    60   002000                     __psmallconst:
    61                           	callstack 0
    62   002000  00                 	db	0
    63   002001                     STR_1:
    64   002001  45                 	db	69	;'E'
    65   002002  6D                 	db	109	;'m'
    66   002003  62                 	db	98	;'b'
    67   002004  65                 	db	101	;'e'
    68   002005  64                 	db	100	;'d'
    69   002006  64                 	db	100	;'d'
    70   002007  65                 	db	101	;'e'
    71   002008  64                 	db	100	;'d'
    72   002009  20                 	db	32
    73   00200A  53                 	db	83	;'S'
    74   00200B  79                 	db	121	;'y'
    75   00200C  73                 	db	115	;'s'
    76   00200D  74                 	db	116	;'t'
    77   00200E  65                 	db	101	;'e'
    78   00200F  6D                 	db	109	;'m'
    79   002010  21                 	db	33
    80   002011  00                 	db	0
    81   002012                     STR_2:
    82   002012  45                 	db	69	;'E'
    83   002013  45                 	db	69	;'E'
    84   002014  33                 	db	51	;'3'
    85   002015  31                 	db	49	;'1'
    86   002016  30                 	db	48	;'0'
    87   002017  40                 	db	64	;'@'
    88   002018  53                 	db	83	;'S'
    89   002019  53                 	db	83	;'S'
    90   00201A  55                 	db	85	;'U'
    91   00201B  00                 	db	0
    92   00201C  00                 	db	0	; dummy byte at the end
    93   000000                     
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   00217C                     __pcinit:
    98                           	callstack 0
    99   00217C                     start_initialization:
   100                           	callstack 0
   101   00217C                     __initialization:
   102                           	callstack 0
   103   00217C                     end_of_initialization:
   104                           	callstack 0
   105   00217C                     __end_of__initialization:
   106                           	callstack 0
   107   00217C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108   00217E  6EF8               	movwf	tblptru,c
   109   002180  0E20               	movlw	high __Lsmallconst
   110   002182  6EF7               	movwf	tblptrh,c
   111   002184  0100               	movlb	0
   112   002186  EF34  F010         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115   000001                     __pcstackCOMRAM:
   116                           	callstack 0
   117   000001                     MSdelay@val:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   000001                     	ds	2
   122   000003                     MSdelay@i:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x2
   126   000003                     	ds	2
   127   000005                     MSdelay@j:
   128                           	callstack 0
   129                           
   130                           ; 2 bytes @ 0x4
   131   000005                     	ds	2
   132   000007                     LCD_Command@cmd:
   133                           	callstack 0
   134   000007                     LCD_Char@dat:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x6
   138   000007                     	ds	1
   139   000008                     LCD_String@msg:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x7
   143   000008                     	ds	1
   144   000009                     LCD_String_xy@pos:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x8
   148   000009                     	ds	1
   149   00000A                     LCD_String_xy@msg:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153   00000A                     	ds	1
   154   00000B                     LCD_String_xy@row:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0xA
   158   00000B                     	ds	1
   159   00000C                     LCD_String_xy@location:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0xB
   163   00000C                     	ds	1
   164   00000D                     ??_main:
   165                           
   166                           ; 1 bytes @ 0xC
   167   00000D                     	ds	2
   168                           
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 87 in file "newmain.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   192 ;;Total ram usage:        2 bytes
   193 ;; Hardware stack levels required when called: 4
   194 ;; This function calls:
   195 ;;		_LCD_Init
   196 ;;		_LCD_String_xy
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203   002068                     __ptext0:
   204                           	callstack 0
   205   002068                     _main:
   206                           	callstack 27
   207   002068                     l27:
   208   002068                     
   209                           ;newmain.c: 91:     {;newmain.c: 92:     LCD_Init();
   210   002068  EC89  F010         	call	_LCD_Init	;wreg free
   211   00206C                     
   212                           ;newmain.c: 93:     LCD_String_xy(1,0,"Embedded System!");
   213   00206C  0E00               	movlw	0
   214   00206E  6E09               	movwf	LCD_String_xy@pos^0,c
   215   002070  0E01               	movlw	low STR_1
   216   002072  6E0A               	movwf	LCD_String_xy@msg^0,c
   217   002074  0E01               	movlw	1
   218   002076  EC53  F010         	call	_LCD_String_xy
   219   00207A                     
   220                           ;newmain.c: 95:     LCD_String_xy(2,0,"EE310@SSU");
   221   00207A  0E00               	movlw	0
   222   00207C  6E09               	movwf	LCD_String_xy@pos^0,c
   223   00207E  0E12               	movlw	low STR_2
   224   002080  6E0A               	movwf	LCD_String_xy@msg^0,c
   225   002082  0E02               	movlw	2
   226   002084  EC53  F010         	call	_LCD_String_xy
   227   002088                     
   228                           ;newmain.c: 97:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   229   002088  0E06               	movlw	6
   230   00208A  6E0E               	movwf	(??_main+1)^0,c
   231   00208C  0E13               	movlw	19
   232   00208E  6E0D               	movwf	??_main^0,c
   233   002090  0EAE               	movlw	174
   234   002092                     u97:
   235   002092  2EE8               	decfsz	wreg,f,c
   236   002094  D7FE               	bra	u97
   237   002096  2E0D               	decfsz	??_main^0,f,c
   238   002098  D7FC               	bra	u97
   239   00209A  2E0E               	decfsz	(??_main+1)^0,f,c
   240   00209C  D7FA               	bra	u97
   241   00209E  EF34  F010         	goto	l27
   242   0020A2  EFFE  F0FF         	goto	start
   243   0020A6                     __end_of_main:
   244                           	callstack 0
   245                           
   246 ;; *************** function _LCD_String_xy *****************
   247 ;; Defined at:
   248 ;;		line 152 in file "newmain.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;  row             1    wreg     unsigned char 
   251 ;;  pos             1    8[COMRAM] unsigned char 
   252 ;;  msg             1    9[COMRAM] PTR const unsigned char 
   253 ;;		 -> STR_2(10), STR_1(17), 
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  row             1   10[COMRAM] unsigned char 
   256 ;;  location        1   11[COMRAM] unsigned char 
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;Total ram usage:        4 bytes
   271 ;; Hardware stack levels used: 1
   272 ;; Hardware stack levels required when called: 3
   273 ;; This function calls:
   274 ;;		_LCD_Command
   275 ;;		_LCD_String
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282   0020A6                     __ptext1:
   283                           	callstack 0
   284   0020A6                     _LCD_String_xy:
   285                           	callstack 27
   286                           
   287                           ;incstack = 0
   288                           ;LCD_String_xy@row stored from wreg
   289   0020A6  6E0B               	movwf	LCD_String_xy@row^0,c
   290   0020A8                     
   291                           ;newmain.c: 155:     if(row<=1)
   292   0020A8  0E02               	movlw	2
   293   0020AA  600B               	cpfslt	LCD_String_xy@row^0,c
   294   0020AC  EF5A  F010         	goto	u81
   295   0020B0  EF5C  F010         	goto	u80
   296   0020B4                     u81:
   297   0020B4  EF65  F010         	goto	l877
   298   0020B8                     u80:
   299   0020B8                     
   300                           ;newmain.c: 156:     {;newmain.c: 157:         location=(0x80) | ((pos) & 0x0f);
   301   0020B8  5009               	movf	LCD_String_xy@pos^0,w,c
   302   0020BA  0B0F               	andlw	15
   303   0020BC  0980               	iorlw	128
   304   0020BE  6E0C               	movwf	LCD_String_xy@location^0,c
   305   0020C0                     
   306                           ;newmain.c: 158:         LCD_Command(location);
   307   0020C0  500C               	movf	LCD_String_xy@location^0,w,c
   308   0020C2  ECAF  F010         	call	_LCD_Command
   309                           
   310                           ;newmain.c: 159:     }
   311   0020C6  EF6C  F010         	goto	l881
   312   0020CA                     l877:
   313                           
   314                           ;newmain.c: 161:     {;newmain.c: 162:         location=(0xC0) | ((pos) & 0x0f);
   315   0020CA  5009               	movf	LCD_String_xy@pos^0,w,c
   316   0020CC  0B0F               	andlw	15
   317   0020CE  09C0               	iorlw	192
   318   0020D0  6E0C               	movwf	LCD_String_xy@location^0,c
   319   0020D2                     
   320                           ;newmain.c: 163:         LCD_Command(location);
   321   0020D2  500C               	movf	LCD_String_xy@location^0,w,c
   322   0020D4  ECAF  F010         	call	_LCD_Command
   323   0020D8                     l881:
   324                           
   325                           ;newmain.c: 165:     LCD_String(msg);
   326   0020D8  C00A  F008         	movff	LCD_String_xy@msg,LCD_String@msg
   327   0020DC  EC71  F010         	call	_LCD_String	;wreg free
   328   0020E0  0012               	return		;funcret
   329   0020E2                     __end_of_LCD_String_xy:
   330                           	callstack 0
   331                           
   332 ;; *************** function _LCD_String *****************
   333 ;; Defined at:
   334 ;;		line 143 in file "newmain.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;  msg             1    7[COMRAM] PTR const unsigned char 
   337 ;;		 -> STR_2(10), STR_1(17), 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;		None
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   353 ;;Total ram usage:        1 bytes
   354 ;; Hardware stack levels used: 1
   355 ;; Hardware stack levels required when called: 2
   356 ;; This function calls:
   357 ;;		_LCD_Char
   358 ;; This function is called by:
   359 ;;		_LCD_String_xy
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text2
   364   0020E2                     __ptext2:
   365                           	callstack 0
   366   0020E2                     _LCD_String:
   367                           	callstack 27
   368   0020E2                     
   369                           ;newmain.c: 143: void LCD_String(const char *msg);newmain.c: 144: {;newmain.c: 145:     
      +                          while((*msg)!=0)
   370   0020E2  EF7B  F010         	goto	l861
   371   0020E6                     l857:
   372                           
   373                           ;newmain.c: 146:     {;newmain.c: 147:       LCD_Char(*msg);
   374   0020E6  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   375   0020EC                     	if	0	;There is only one active tblptr byte
   376   0020EC                     	endif
   377   0020EC                     	if	0	;tblptru may be non-zero
   378   0020EC                     	endif
   379   0020EC                     	if	0	;tblptru may be non-zero
   380   0020EC                     	endif
   381   0020EC  0008               	tblrd		*
   382   0020EE  50F5               	movf	tablat,w,c
   383   0020F0  ECA0  F010         	call	_LCD_Char
   384   0020F4                     
   385                           ;newmain.c: 148:       msg++;
   386   0020F4  2A08               	incf	LCD_String@msg^0,f,c
   387   0020F6                     l861:
   388                           
   389                           ;newmain.c: 145:     while((*msg)!=0)
   390   0020F6  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   391   0020FC                     	if	0	;There is only one active tblptr byte
   392   0020FC                     	endif
   393   0020FC                     	if	0	;tblptru may be non-zero
   394   0020FC                     	endif
   395   0020FC                     	if	0	;tblptru may be non-zero
   396   0020FC                     	endif
   397   0020FC  0008               	tblrd		*
   398   0020FE  50F5               	movf	tablat,w,c
   399   002100  0900               	iorlw	0
   400   002102  A4D8               	btfss	status,2,c
   401   002104  EF86  F010         	goto	u71
   402   002108  EF88  F010         	goto	u70
   403   00210C                     u71:
   404   00210C  EF73  F010         	goto	l857
   405   002110                     u70:
   406   002110  0012               	return		;funcret
   407   002112                     __end_of_LCD_String:
   408                           	callstack 0
   409                           
   410 ;; *************** function _LCD_Char *****************
   411 ;; Defined at:
   412 ;;		line 132 in file "newmain.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  dat             1    wreg     unsigned char 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  dat             1    6[COMRAM] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   430 ;;Total ram usage:        1 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 1
   433 ;; This function calls:
   434 ;;		_MSdelay
   435 ;; This function is called by:
   436 ;;		_LCD_String
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text3
   441   002140                     __ptext3:
   442                           	callstack 0
   443   002140                     _LCD_Char:
   444                           	callstack 27
   445                           
   446                           ;incstack = 0
   447                           ;LCD_Char@dat stored from wreg
   448   002140  6E07               	movwf	LCD_Char@dat^0,c
   449   002142                     
   450                           ;newmain.c: 132: void LCD_Char(char dat);newmain.c: 133: {;newmain.c: 134:     LATB= dat
      +                          ;
   451   002142  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
   452   002148                     
   453                           ;newmain.c: 135:     LATD0 = 1;
   454   002148  80BD               	bsf	16317,0,c	;volatile
   455   00214A                     
   456                           ;newmain.c: 136:     LATD1=1;
   457   00214A  82BD               	bsf	16317,1,c	;volatile
   458   00214C                     
   459                           ;newmain.c: 137:     __nop();
   460   00214C  0000               	nop	
   461   00214E                     
   462                           ;newmain.c: 138:     LATD1=0;
   463   00214E  92BD               	bcf	16317,1,c	;volatile
   464   002150                     
   465                           ;newmain.c: 139:     MSdelay(1);
   466   002150  0E00               	movlw	0
   467   002152  6E02               	movwf	(MSdelay@val+1)^0,c
   468   002154  0E01               	movlw	1
   469   002156  6E01               	movwf	MSdelay@val^0,c
   470   002158  EC0F  F010         	call	_MSdelay	;wreg free
   471   00215C  0012               	return		;funcret
   472   00215E                     __end_of_LCD_Char:
   473                           	callstack 0
   474                           
   475 ;; *************** function _LCD_Init *****************
   476 ;; Defined at:
   477 ;;		line 103 in file "newmain.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		_LCD_Command
   500 ;;		_MSdelay
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text4
   507   002112                     __ptext4:
   508                           	callstack 0
   509   002112                     _LCD_Init:
   510                           	callstack 28
   511   002112                     
   512                           ;newmain.c: 105:     MSdelay(15);
   513   002112  0E00               	movlw	0
   514   002114  6E02               	movwf	(MSdelay@val+1)^0,c
   515   002116  0E0F               	movlw	15
   516   002118  6E01               	movwf	MSdelay@val^0,c
   517   00211A  EC0F  F010         	call	_MSdelay	;wreg free
   518   00211E                     
   519                           ;newmain.c: 106:     TRISB = 0x00;
   520   00211E  0E00               	movlw	0
   521   002120  6EC3               	movwf	195,c	;volatile
   522   002122                     
   523                           ;newmain.c: 107:     TRISD = 0x00;
   524   002122  0E00               	movlw	0
   525   002124  6EC5               	movwf	197,c	;volatile
   526                           
   527                           ;newmain.c: 108:     LCD_Command(0x01);
   528   002126  0E01               	movlw	1
   529   002128  ECAF  F010         	call	_LCD_Command
   530                           
   531                           ;newmain.c: 110:     LCD_Command(0x38);
   532   00212C  0E38               	movlw	56
   533   00212E  ECAF  F010         	call	_LCD_Command
   534                           
   535                           ;newmain.c: 112:     LCD_Command(0x0c);
   536   002132  0E0C               	movlw	12
   537   002134  ECAF  F010         	call	_LCD_Command
   538                           
   539                           ;newmain.c: 114:     LCD_Command(0x06);
   540   002138  0E06               	movlw	6
   541   00213A  ECAF  F010         	call	_LCD_Command
   542   00213E  0012               	return		;funcret
   543   002140                     __end_of_LCD_Init:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Command *****************
   547 ;; Defined at:
   548 ;;		line 122 in file "newmain.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  cmd             1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  cmd             1    6[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   566 ;;Total ram usage:        1 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 1
   569 ;; This function calls:
   570 ;;		_MSdelay
   571 ;; This function is called by:
   572 ;;		_LCD_Init
   573 ;;		_LCD_String_xy
   574 ;;		_LCD_Clear
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text5
   579   00215E                     __ptext5:
   580                           	callstack 0
   581   00215E                     _LCD_Command:
   582                           	callstack 28
   583                           
   584                           ;incstack = 0
   585                           ;LCD_Command@cmd stored from wreg
   586   00215E  6E07               	movwf	LCD_Command@cmd^0,c
   587   002160                     
   588                           ;newmain.c: 122: void LCD_Command(char cmd );newmain.c: 123: {;newmain.c: 124:     LATB=
      +                           cmd;
   589   002160  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   590   002166                     
   591                           ;newmain.c: 125:     LATD0 = 0;
   592   002166  90BD               	bcf	16317,0,c	;volatile
   593   002168                     
   594                           ;newmain.c: 126:     LATD1 = 1;
   595   002168  82BD               	bsf	16317,1,c	;volatile
   596   00216A                     
   597                           ;newmain.c: 127:     __nop();
   598   00216A  0000               	nop	
   599   00216C                     
   600                           ;newmain.c: 128:     LATD1 = 0;
   601   00216C  92BD               	bcf	16317,1,c	;volatile
   602   00216E                     
   603                           ;newmain.c: 129:     MSdelay(3);
   604   00216E  0E00               	movlw	0
   605   002170  6E02               	movwf	(MSdelay@val+1)^0,c
   606   002172  0E03               	movlw	3
   607   002174  6E01               	movwf	MSdelay@val^0,c
   608   002176  EC0F  F010         	call	_MSdelay	;wreg free
   609   00217A  0012               	return		;funcret
   610   00217C                     __end_of_LCD_Command:
   611                           	callstack 0
   612                           
   613 ;; *************** function _MSdelay *****************
   614 ;; Defined at:
   615 ;;		line 169 in file "newmain.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  val             2    0[COMRAM] unsigned int 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  j               2    4[COMRAM] unsigned int 
   620 ;;  i               2    2[COMRAM] unsigned int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   634 ;;Total ram usage:        6 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_LCD_Init
   640 ;;		_LCD_Command
   641 ;;		_LCD_Char
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text6
   646   00201E                     __ptext6:
   647                           	callstack 0
   648   00201E                     _MSdelay:
   649                           	callstack 27
   650   00201E                     
   651                           ;newmain.c: 169: void MSdelay(unsigned int val);newmain.c: 170: {;newmain.c: 171:      u
      +                          nsigned int i,j;;newmain.c: 172:         for(i=0;i<val;i++)
   652   00201E  0E00               	movlw	0
   653   002020  6E04               	movwf	(MSdelay@i+1)^0,c
   654   002022  0E00               	movlw	0
   655   002024  6E03               	movwf	MSdelay@i^0,c
   656   002026  EF28  F010         	goto	l829
   657   00202A                     l817:
   658                           
   659                           ;newmain.c: 173:             for(j=0;j<165;j++);
   660   00202A  0E00               	movlw	0
   661   00202C  6E06               	movwf	(MSdelay@j+1)^0,c
   662   00202E  0E00               	movlw	0
   663   002030  6E05               	movwf	MSdelay@j^0,c
   664   002032                     l823:
   665   002032  4A05               	infsnz	MSdelay@j^0,f,c
   666   002034  2A06               	incf	(MSdelay@j+1)^0,f,c
   667   002036  5006               	movf	(MSdelay@j+1)^0,w,c
   668   002038  E109               	bnz	u50
   669   00203A  0EA5               	movlw	165
   670   00203C  5C05               	subwf	MSdelay@j^0,w,c
   671   00203E  A0D8               	btfss	status,0,c
   672   002040  EF24  F010         	goto	u51
   673   002044  EF26  F010         	goto	u50
   674   002048                     u51:
   675   002048  EF19  F010         	goto	l823
   676   00204C                     u50:
   677   00204C  4A03               	infsnz	MSdelay@i^0,f,c
   678   00204E  2A04               	incf	(MSdelay@i+1)^0,f,c
   679   002050                     l829:
   680   002050  5001               	movf	MSdelay@val^0,w,c
   681   002052  5C03               	subwf	MSdelay@i^0,w,c
   682   002054  5002               	movf	(MSdelay@val+1)^0,w,c
   683   002056  5804               	subwfb	(MSdelay@i+1)^0,w,c
   684   002058  A0D8               	btfss	status,0,c
   685   00205A  EF31  F010         	goto	u61
   686   00205E  EF33  F010         	goto	u60
   687   002062                     u61:
   688   002062  EF15  F010         	goto	l817
   689   002066                     u60:
   690   002066  0012               	return		;funcret
   691   002068                     __end_of_MSdelay:
   692                           	callstack 0
   693                           
   694                           	psect	rparam
   695   000000                     
   696                           	psect	config
   697                           
   698                           ;Config register CONFIG1L @ 0x300000
   699                           ;	External Oscillator Selection
   700                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   701                           ;	Reset Oscillator Selection
   702                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   703   300000                     	org	3145728
   704   300000  F8                 	db	248
   705                           
   706                           ;Config register CONFIG1H @ 0x300001
   707                           ;	Clock out Enable bit
   708                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   709                           ;	PRLOCKED One-Way Set Enable bit
   710                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   711                           ;	Clock Switch Enable bit
   712                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   713                           ;	Fail-Safe Clock Monitor Enable bit
   714                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   715   300001                     	org	3145729
   716   300001  FF                 	db	255
   717                           
   718                           ;Config register CONFIG2L @ 0x300002
   719                           ;	MCLR Enable bit
   720                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   721                           ;	Power-up timer selection bits
   722                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   723                           ;	Multi-vector enable bit
   724                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   725                           ;	IVTLOCK bit One-way set enable bit
   726                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   727                           ;	Low Power BOR Enable bit
   728                           ;	LPBOREN = OFF, ULPBOR disabled
   729                           ;	Brown-out Reset Enable bits
   730                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   731   300002                     	org	3145730
   732   300002  FF                 	db	255
   733                           
   734                           ;Config register CONFIG2H @ 0x300003
   735                           ;	Brown-out Reset Voltage Selection bits
   736                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   737                           ;	ZCD Disable bit
   738                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   739                           ;	PPSLOCK bit One-Way Set Enable bit
   740                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   741                           ;	Stack Full/Underflow Reset Enable bit
   742                           ;	STVREN = ON, Stack full/underflow will cause Reset
   743                           ;	Debugger Enable bit
   744                           ;	DEBUG = OFF, Background debugger disabled
   745                           ;	Extended Instruction Set Enable bit
   746                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   747   300003                     	org	3145731
   748   300003  FF                 	db	255
   749                           
   750                           ;Config register CONFIG3L @ 0x300004
   751                           ;	WDT Period selection bits
   752                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   753                           ;	WDT operating mode
   754                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   755   300004                     	org	3145732
   756   300004  9F                 	db	159
   757                           
   758                           ;Config register CONFIG3H @ 0x300005
   759                           ;	WDT Window Select bits
   760                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   761                           ;	WDT input clock selector
   762                           ;	WDTCCS = SC, Software Control
   763   300005                     	org	3145733
   764   300005  FF                 	db	255
   765                           
   766                           ;Config register CONFIG4L @ 0x300006
   767                           ;	Boot Block Size selection bits
   768                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   769                           ;	Boot Block enable bit
   770                           ;	BBEN = OFF, Boot block disabled
   771                           ;	Storage Area Flash enable bit
   772                           ;	SAFEN = OFF, SAF disabled
   773                           ;	Application Block write protection bit
   774                           ;	WRTAPP = OFF, Application Block not write protected
   775   300006                     	org	3145734
   776   300006  FF                 	db	255
   777                           
   778                           ;Config register CONFIG4H @ 0x300007
   779                           ;	Boot Block Write Protection bit
   780                           ;	WRTB = OFF, Boot Block not write-protected
   781                           ;	Configuration Register Write Protection bit
   782                           ;	WRTC = OFF, Configuration registers not write-protected
   783                           ;	Data EEPROM Write Protection bit
   784                           ;	WRTD = OFF, Data EEPROM not write-protected
   785                           ;	SAF Write protection bit
   786                           ;	WRTSAF = OFF, SAF not Write Protected
   787                           ;	Low Voltage Programming Enable bit
   788                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   789   300007                     	org	3145735
   790   300007  FF                 	db	255
   791                           
   792                           ;Config register CONFIG5L @ 0x300008
   793                           ;	PFM and Data EEPROM Code Protection bit
   794                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   795   300008                     	org	3145736
   796   300008  FF                 	db	255
   797                           
   798                           ;Config register CONFIG5H @ 0x300009
   799                           ;	unspecified, using default values
   800   300009                     	org	3145737
   801   300009  FF                 	db	255
   802                           tosu	equ	0x3FFF
   803                           tosh	equ	0x3FFE
   804                           tosl	equ	0x3FFD
   805                           stkptr	equ	0x3FFC
   806                           pclatu	equ	0x3FFB
   807                           pclath	equ	0x3FFA
   808                           pcl	equ	0x3FF9
   809                           tblptru	equ	0x3FF8
   810                           tblptrh	equ	0x3FF7
   811                           tblptrl	equ	0x3FF6
   812                           tablat	equ	0x3FF5
   813                           prodh	equ	0x3FF4
   814                           prodl	equ	0x3FF3
   815                           indf0	equ	0x3FEF
   816                           postinc0	equ	0x3FEE
   817                           postdec0	equ	0x3FED
   818                           preinc0	equ	0x3FEC
   819                           plusw0	equ	0x3FEB
   820                           fsr0h	equ	0x3FEA
   821                           fsr0l	equ	0x3FE9
   822                           wreg	equ	0x3FE8
   823                           indf1	equ	0x3FE7
   824                           postinc1	equ	0x3FE6
   825                           postdec1	equ	0x3FE5
   826                           preinc1	equ	0x3FE4
   827                           plusw1	equ	0x3FE3
   828                           fsr1h	equ	0x3FE2
   829                           fsr1l	equ	0x3FE1
   830                           bsr	equ	0x3FE0
   831                           indf2	equ	0x3FDF
   832                           postinc2	equ	0x3FDE
   833                           postdec2	equ	0x3FDD
   834                           preinc2	equ	0x3FDC
   835                           plusw2	equ	0x3FDB
   836                           fsr2h	equ	0x3FDA
   837                           fsr2l	equ	0x3FD9
   838                           status	equ	0x3FD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1906
                                             12 COMRAM     2     2      0
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    1244
                                              8 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     463
                                              7 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBIGSFRhh         3A      0       0      68        0.0%
BITBIGSFRhl          1      0       0      69        0.0%
BITBIGSFRlhh         5      0       0      70        0.0%
BITBIGSFRlhl         1      0       0      71        0.0%
BITBIGSFRll        7BB      0       0      72        0.0%
ABS                  0      0       0      73        0.0%
BIGRAM            1FFF      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 20 21:11:46 2024

           ?_LCD_Command 0001                       l33 213E                       l42 215C  
                     l27 2068                       l61 2066                       l53 20E0  
                     l39 217A                       l48 2110                       u50 204C  
                     u51 2048                       u60 2066                       u61 2062  
                     u70 2110                       u71 210C                       u80 20B8  
                     u81 20B4                       u97 2092              ?_LCD_String 0008  
                    l823 2032                      l815 201E                      l831 2142  
                    l825 2036                      l817 202A                      l841 2150  
                    l833 2148                      l827 204C                      l851 216C  
                    l843 2160                      l835 214A                      l829 2050  
                    l853 216E                      l845 2166                      l837 214C  
                    l861 20F6                      l847 2168                      l863 2112  
                    l839 214E                      l855 20E2                      l871 20A8  
                    l849 216A                      l865 211E                      l857 20E6  
                    l881 20D8                      l873 20B8                      l867 2122  
                    l859 20F4                      l875 20C0                      l883 2068  
                    l877 20CA                      l869 20A8                      l885 206C  
                    l879 20D2                      l887 207A                      l889 2088  
                    wreg 3FE8              LCD_Char@dat 0007                     STR_1 2001  
                   STR_2 2012                     _LATB 3FBB                     _main 2068  
                   start FFFC          __end_of_MSdelay 2068            _LCD_String_xy 20A6  
           ___param_bank 0000         __end_of_LCD_Char 215E         __end_of_LCD_Init 2140  
                  ?_main 0001                    _LATD0 1FDE8                    _LATD1 1FDE9  
                  _TRISB 3FC3                    _TRISD 3FC5                    tablat 3FF5  
                  status 3FD8           ?_LCD_String_xy 0009          __initialization 217C  
           __end_of_main 20A6                   ??_main 000D            __activetblptr 0001  
       LCD_String_xy@msg 000A         LCD_String_xy@pos 0009         LCD_String_xy@row 000B  
              ??_MSdelay 0003                   isa$std 0001             __mediumconst 0000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 217C  
              ?_LCD_Init 0001          ??_LCD_String_xy 000B            ___rparam_used 0001  
         __pcstackCOMRAM 0001             ??_LCD_String 0009               ??_LCD_Char 0007  
             ??_LCD_Init 0008       __end_of_LCD_String 2112                  _MSdelay 201E  
          LCD_String@msg 0008                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000                  __pcinit 217C                  __ramtop 2000  
                __ptext0 2068                  __ptext1 20A6                  __ptext2 20E2  
                __ptext3 2140                  __ptext4 2112                  __ptext5 215E  
                __ptext6 201E     end_of_initialization 217C           LCD_Command@cmd 0007  
          ??_LCD_Command 0007      start_initialization 217C    __end_of_LCD_String_xy 20E2  
    __end_of_LCD_Command 217C                 ?_MSdelay 0001              __smallconst 2000  
  LCD_String_xy@location 000C                 MSdelay@i 0003                 MSdelay@j 0005  
               _LCD_Char 2140                 _LCD_Init 2112              _LCD_Command 215E  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
             MSdelay@val 0001                 isa$xinst 0000               _LCD_String 20E2  
