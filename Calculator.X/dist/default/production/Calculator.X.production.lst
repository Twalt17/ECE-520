

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 23:09:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _TRISC	set	16324
    57   000000                     _TRISD	set	16325
    58   000000                     _TRISB	set	16323
    59                           
    60                           	psect	nvCOMRAM
    61   000013                     __pnvCOMRAM:
    62                           	callstack 0
    63   000013                     _Display_Result_REG:
    64                           	callstack 0
    65   000013                     	ds	1
    66   000014                     _calculation:
    67                           	callstack 0
    68   000014                     	ds	1
    69   000015                     _Operation_REG:
    70                           	callstack 0
    71   000015                     	ds	1
    72   000016                     _Y_Input_REG:
    73                           	callstack 0
    74   000016                     	ds	1
    75   000017                     _X_Input_REG:
    76                           	callstack 0
    77   000017                     	ds	1
    78   000000                     _PORTB	set	16331
    79   000000                     _PORTCbits	set	16332
    80   000000                     _ANSELA	set	14912
    81   000000                     _TRISA	set	16322
    82   000000                     _ANSELB	set	14928
    83   000000                     _ANSELC	set	14944
    84   000000                     _ANSELD	set	14960
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _PORTC	set	16332
    88   000000                     _PORTD	set	16333
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   00287E                     __pcinit:
    94                           	callstack 0
    95   00287E                     start_initialization:
    96                           	callstack 0
    97   00287E                     __initialization:
    98                           	callstack 0
    99   00287E                     end_of_initialization:
   100                           	callstack 0
   101   00287E                     __end_of__initialization:
   102                           	callstack 0
   103   00287E  0100               	movlb	0
   104   002880  EF81  F013         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ??_scan_number:
   110   000001                     ??_scan_operation:
   111   000001                     ?___wmul:
   112                           	callstack 0
   113   000001                     ?___awdiv:
   114                           	callstack 0
   115   000001                     ?___awmod:
   116                           	callstack 0
   117   000001                     ___lbdiv@divisor:
   118                           	callstack 0
   119   000001                     ___wmul@multiplier:
   120                           	callstack 0
   121   000001                     ___awdiv@dividend:
   122                           	callstack 0
   123   000001                     ___awmod@dividend:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ___lbdiv@dividend:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132   000002                     	ds	1
   133   000003                     scan_number@button:
   134                           	callstack 0
   135   000003                     scan_operation@op_key:
   136                           	callstack 0
   137   000003                     ___lbdiv@counter:
   138                           	callstack 0
   139   000003                     ___wmul@multiplicand:
   140                           	callstack 0
   141   000003                     ___awdiv@divisor:
   142                           	callstack 0
   143   000003                     ___awmod@divisor:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x2
   147   000003                     	ds	1
   148   000004                     scan_number@count:
   149                           	callstack 0
   150   000004                     ___lbdiv@quotient:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154   000004                     	ds	1
   155   000005                     ?_calculate:
   156                           	callstack 0
   157   000005                     scan_number@output:
   158                           	callstack 0
   159   000005                     calculate@y:
   160                           	callstack 0
   161   000005                     ___awdiv@counter:
   162                           	callstack 0
   163   000005                     ___awmod@counter:
   164                           	callstack 0
   165   000005                     ___wmul@product:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x4
   169   000005                     	ds	1
   170   000006                     scan_number@input:
   171                           	callstack 0
   172   000006                     calculate@op:
   173                           	callstack 0
   174   000006                     ___awdiv@sign:
   175                           	callstack 0
   176   000006                     ___awmod@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180   000006                     	ds	1
   181   000007                     calculate@output:
   182                           	callstack 0
   183   000007                     ___awdiv@quotient:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x6
   187   000007                     	ds	1
   188   000008                     calculate@x:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x7
   192   000008                     	ds	1
   193   000009                     PORT_Output@answer:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x8
   197   000009                     	ds	2
   198   00000B                     ??_PORT_Output:
   199                           
   200                           ; 1 bytes @ 0xA
   201   00000B                     	ds	1
   202   00000C                     PORT_Output@enter:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xB
   206   00000C                     	ds	1
   207   00000D                     PORT_Output@i:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xC
   211   00000D                     	ds	2
   212   00000F                     PORT_Output@display1:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xE
   216   00000F                     	ds	1
   217   000010                     PORT_Output@display2:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xF
   221   000010                     	ds	1
   222   000011                     PORT_Output@second_dig:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x10
   226   000011                     	ds	1
   227   000012                     PORT_Output@first_dig:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x11
   231   000012                     	ds	1
   232   000013                     
   233                           ; 1 bytes @ 0x12
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 26 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 2
   259 ;; This function calls:
   260 ;;		_PORT_Output
   261 ;;		_calculate
   262 ;;		_scan_number
   263 ;;		_scan_operation
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   002702                     __ptext0:
   271                           	callstack 0
   272   002702                     _main:
   273                           	callstack 29
   274   002702                     
   275                           ;main.c: 27:     TRISA = 0xFF;
   276   002702  68C2               	setf	194,c	;volatile
   277   002704                     
   278                           ;main.c: 28:     ANSELA = 0;
   279   002704  0E00               	movlw	0
   280   002706  013A               	movlb	58	; () banked
   281   002708  6F40               	movwf	64,b	;volatile
   282                           
   283                           ;main.c: 29:     TRISB = 0;
   284   00270A  0E00               	movlw	0
   285   00270C  6EC3               	movwf	195,c	;volatile
   286                           
   287                           ;main.c: 30:     ANSELB = 0;
   288   00270E  0E00               	movlw	0
   289   002710  6F50               	movwf	80,b	;volatile
   290                           
   291                           ;main.c: 31:     ANSELD = 0;
   292   002712  0E00               	movlw	0
   293   002714  6F70               	movwf	112,b	;volatile
   294                           
   295                           ;main.c: 32:     TRISD = 0;
   296   002716  0E00               	movlw	0
   297   002718  6EC5               	movwf	197,c	;volatile
   298                           
   299                           ;main.c: 33:     TRISC = 0;
   300   00271A  0E00               	movlw	0
   301   00271C  6EC4               	movwf	196,c	;volatile
   302                           
   303                           ;main.c: 34:     ANSELC = 0;
   304   00271E  0E00               	movlw	0
   305   002720  6F60               	movwf	96,b	;volatile
   306   002722                     
   307                           ; BSR set to: 58
   308                           ;main.c: 35:     PORTD = 0xFF;
   309   002722  68CD               	setf	205,c	;volatile
   310   002724                     
   311                           ; BSR set to: 58
   312                           ;main.c: 36:     PORTC = 0xFF;
   313   002724  68CC               	setf	204,c	;volatile
   314   002726                     l53:
   315                           
   316                           ;main.c: 39:     X_Input_REG = 0;
   317   002726  0E00               	movlw	0
   318   002728  6E17               	movwf	_X_Input_REG^0,c
   319                           
   320                           ;main.c: 40:     Y_Input_REG = 0;
   321   00272A  0E00               	movlw	0
   322   00272C  6E16               	movwf	_Y_Input_REG^0,c
   323                           
   324                           ;main.c: 41:     Operation_REG = 0;
   325   00272E  0E00               	movlw	0
   326   002730  6E15               	movwf	_Operation_REG^0,c
   327                           
   328                           ;main.c: 42:     calculation = 0;
   329   002732  0E00               	movlw	0
   330   002734  6E14               	movwf	_calculation^0,c
   331                           
   332                           ;main.c: 43:     Display_Result_REG = 0;
   333   002736  0E00               	movlw	0
   334   002738  6E13               	movwf	_Display_Result_REG^0,c
   335   00273A                     
   336                           ;main.c: 44:     X_Input_REG = scan_number();
   337   00273A  EC86  F011         	call	_scan_number	;wreg free
   338   00273E  6E17               	movwf	_X_Input_REG^0,c
   339   002740                     
   340                           ;main.c: 45:     PORTBbits.RB5 = 1;
   341   002740  8ACB               	bsf	203,5,c	;volatile
   342   002742                     
   343                           ;main.c: 46:     PORTCbits.RC7 = 0;
   344   002742  9ECC               	bcf	204,7,c	;volatile
   345   002744                     
   346                           ;main.c: 47:     Operation_REG = scan_operation();
   347   002744  EC42  F013         	call	_scan_operation	;wreg free
   348   002748  6E15               	movwf	_Operation_REG^0,c
   349   00274A                     
   350                           ;main.c: 48:     Y_Input_REG = scan_number();
   351   00274A  EC86  F011         	call	_scan_number	;wreg free
   352   00274E  6E16               	movwf	_Y_Input_REG^0,c
   353   002750                     
   354                           ;main.c: 49:     PORTCbits.RC7 = 1;
   355   002750  8ECC               	bsf	204,7,c	;volatile
   356   002752                     
   357                           ;main.c: 50:     PORTBbits.RB6 = 1;
   358   002752  8CCB               	bsf	203,6,c	;volatile
   359   002754                     
   360                           ;main.c: 51:     PORTCbits.RC6 = 0;
   361   002754  9CCC               	bcf	204,6,c	;volatile
   362   002756                     
   363                           ;main.c: 52:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   364   002756  C016  F005         	movff	_Y_Input_REG,calculate@y
   365   00275A  C015  F006         	movff	_Operation_REG,calculate@op
   366   00275E  5017               	movf	_X_Input_REG^0,w,c
   367   002760  ECBF  F013         	call	_calculate
   368   002764  5005               	movf	?_calculate^0,w,c
   369   002766  6E14               	movwf	_calculation^0,c
   370   002768                     
   371                           ;main.c: 53:     PORT_Output(calculation);
   372   002768  5014               	movf	_calculation^0,w,c
   373   00276A  6E09               	movwf	PORT_Output@answer^0,c
   374   00276C  6A0A               	clrf	(PORT_Output@answer+1)^0,c
   375   00276E  BE09               	btfsc	PORT_Output@answer^0,7,c
   376   002770  060A               	decf	(PORT_Output@answer+1)^0,f,c
   377   002772  EC01  F010         	call	_PORT_Output	;wreg free
   378   002776  EF93  F013         	goto	l53
   379   00277A  EFFE  F0FF         	goto	start
   380   00277E                     __end_of_main:
   381                           	callstack 0
   382                           
   383 ;; *************** function _scan_operation *****************
   384 ;; Defined at:
   385 ;;		line 120 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  op_key          1    2[COMRAM] char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      char 
   392 ;; Registers used:
   393 ;;		wreg, status,2
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   403 ;;Total ram usage:        3 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413   002684                     __ptext1:
   414                           	callstack 0
   415   002684                     _scan_operation:
   416                           	callstack 30
   417   002684                     
   418                           ;main.c: 121:     signed char op_key = 0;
   419   002684  0E00               	movlw	0
   420   002686  6E03               	movwf	scan_operation@op_key^0,c
   421                           
   422                           ;main.c: 122:     while (op_key ==0) {
   423   002688  EF6B  F013         	goto	l88
   424   00268C                     l89:
   425                           
   426                           ;main.c: 124:      PORTBbits.RB3 = 1;
   427   00268C  86CB               	bsf	203,3,c	;volatile
   428                           
   429                           ;main.c: 125:         if(PORTAbits.RA0 == 1) op_key = 1;
   430   00268E  A0CA               	btfss	202,0,c	;volatile
   431   002690  EF4C  F013         	goto	u381
   432   002694  EF4E  F013         	goto	u380
   433   002698                     u381:
   434   002698  EF50  F013         	goto	l1062
   435   00269C                     u380:
   436   00269C  0E01               	movlw	1
   437   00269E  6E03               	movwf	scan_operation@op_key^0,c
   438   0026A0                     l1062:
   439                           
   440                           ;main.c: 126:         if(PORTAbits.RA1 == 1) op_key = 2;
   441   0026A0  A2CA               	btfss	202,1,c	;volatile
   442   0026A2  EF55  F013         	goto	u391
   443   0026A6  EF57  F013         	goto	u390
   444   0026AA                     u391:
   445   0026AA  EF59  F013         	goto	l1066
   446   0026AE                     u390:
   447   0026AE  0E02               	movlw	2
   448   0026B0  6E03               	movwf	scan_operation@op_key^0,c
   449   0026B2                     l1066:
   450                           
   451                           ;main.c: 127:         if(PORTAbits.RA2 == 1) op_key = 3;
   452   0026B2  A4CA               	btfss	202,2,c	;volatile
   453   0026B4  EF5E  F013         	goto	u401
   454   0026B8  EF60  F013         	goto	u400
   455   0026BC                     u401:
   456   0026BC  EF62  F013         	goto	l1070
   457   0026C0                     u400:
   458   0026C0  0E03               	movlw	3
   459   0026C2  6E03               	movwf	scan_operation@op_key^0,c
   460   0026C4                     l1070:
   461                           
   462                           ;main.c: 128:         if(PORTAbits.RA3 == 1) op_key = 4;
   463   0026C4  A6CA               	btfss	202,3,c	;volatile
   464   0026C6  EF67  F013         	goto	u411
   465   0026CA  EF69  F013         	goto	u410
   466   0026CE                     u411:
   467   0026CE  EF6B  F013         	goto	l88
   468   0026D2                     u410:
   469   0026D2  0E04               	movlw	4
   470   0026D4  6E03               	movwf	scan_operation@op_key^0,c
   471   0026D6                     l88:
   472                           
   473                           ;main.c: 122:     while (op_key ==0) {
   474   0026D6  5003               	movf	scan_operation@op_key^0,w,c
   475   0026D8  B4D8               	btfsc	status,2,c
   476   0026DA  EF71  F013         	goto	u421
   477   0026DE  EF73  F013         	goto	u420
   478   0026E2                     u421:
   479   0026E2  EF46  F013         	goto	l89
   480   0026E6                     u420:
   481   0026E6                     
   482                           ;main.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
   483   0026E6  0E03               	movlw	3
   484   0026E8  6E02               	movwf	(??_scan_operation+1)^0,c
   485   0026EA  0E08               	movlw	8
   486   0026EC  6E01               	movwf	??_scan_operation^0,c
   487   0026EE  0E77               	movlw	119
   488   0026F0                     u1167:
   489   0026F0  2EE8               	decfsz	wreg,f,c
   490   0026F2  D7FE               	bra	u1167
   491   0026F4  2E01               	decfsz	??_scan_operation^0,f,c
   492   0026F6  D7FC               	bra	u1167
   493   0026F8  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   494   0026FA  D7FA               	bra	u1167
   495   0026FC  0000               	nop	
   496   0026FE                     
   497                           ;main.c: 131:         return op_key;
   498   0026FE  5003               	movf	scan_operation@op_key^0,w,c
   499   002700  0012               	return		;funcret
   500   002702                     __end_of_scan_operation:
   501                           	callstack 0
   502                           
   503 ;; *************** function _scan_number *****************
   504 ;; Defined at:
   505 ;;		line 58 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  input           1    5[COMRAM] char 
   510 ;;  output          1    4[COMRAM] char 
   511 ;;  count           1    3[COMRAM] char 
   512 ;;  button          1    2[COMRAM] char 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      char 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, prodl, prodh
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   526 ;;Total ram usage:        6 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536   00230C                     __ptext2:
   537                           	callstack 0
   538   00230C                     _scan_number:
   539                           	callstack 30
   540   00230C                     
   541                           ;main.c: 59:     signed char input = 10;
   542   00230C  0E0A               	movlw	10
   543   00230E  6E06               	movwf	scan_number@input^0,c
   544                           
   545                           ;main.c: 61:     signed char button = 0;
   546   002310  0E00               	movlw	0
   547   002312  6E03               	movwf	scan_number@button^0,c
   548                           
   549                           ;main.c: 62:     signed char count = 2;
   550   002314  0E02               	movlw	2
   551   002316  6E04               	movwf	scan_number@count^0,c
   552                           
   553                           ;main.c: 64:     while (input == 10)
   554   002318  EFEE  F011         	goto	l990
   555   00231C                     l60:
   556                           
   557                           ;main.c: 65:     {;main.c: 66:         PORTBbits.RB0 = 1;
   558   00231C  80CB               	bsf	203,0,c	;volatile
   559                           
   560                           ;main.c: 67:         if (PORTAbits.RA0 == 1)input = 1;
   561   00231E  A0CA               	btfss	202,0,c	;volatile
   562   002320  EF94  F011         	goto	u161
   563   002324  EF96  F011         	goto	u160
   564   002328                     u161:
   565   002328  EF98  F011         	goto	l944
   566   00232C                     u160:
   567   00232C  0E01               	movlw	1
   568   00232E  6E06               	movwf	scan_number@input^0,c
   569   002330                     l944:
   570                           
   571                           ;main.c: 68:         if(PORTAbits.RA1 == 1) input = 4;
   572   002330  A2CA               	btfss	202,1,c	;volatile
   573   002332  EF9D  F011         	goto	u171
   574   002336  EF9F  F011         	goto	u170
   575   00233A                     u171:
   576   00233A  EFA1  F011         	goto	l948
   577   00233E                     u170:
   578   00233E  0E04               	movlw	4
   579   002340  6E06               	movwf	scan_number@input^0,c
   580   002342                     l948:
   581                           
   582                           ;main.c: 69:         if(PORTAbits.RA2 == 1) input = 7;
   583   002342  A4CA               	btfss	202,2,c	;volatile
   584   002344  EFA6  F011         	goto	u181
   585   002348  EFA8  F011         	goto	u180
   586   00234C                     u181:
   587   00234C  EFAA  F011         	goto	l952
   588   002350                     u180:
   589   002350  0E07               	movlw	7
   590   002352  6E06               	movwf	scan_number@input^0,c
   591   002354                     l952:
   592                           
   593                           ;main.c: 70:         PORTBbits.RB0 = 0;
   594   002354  90CB               	bcf	203,0,c	;volatile
   595   002356                     
   596                           ;main.c: 72:          PORTBbits.RB1 = 1;
   597   002356  82CB               	bsf	203,1,c	;volatile
   598   002358                     
   599                           ;main.c: 73:         if (PORTAbits.RA0 == 1)input = 2;
   600   002358  A0CA               	btfss	202,0,c	;volatile
   601   00235A  EFB1  F011         	goto	u191
   602   00235E  EFB3  F011         	goto	u190
   603   002362                     u191:
   604   002362  EFB5  F011         	goto	l960
   605   002366                     u190:
   606   002366  0E02               	movlw	2
   607   002368  6E06               	movwf	scan_number@input^0,c
   608   00236A                     l960:
   609                           
   610                           ;main.c: 74:         if(PORTAbits.RA1 == 1) input = 5;
   611   00236A  A2CA               	btfss	202,1,c	;volatile
   612   00236C  EFBA  F011         	goto	u201
   613   002370  EFBC  F011         	goto	u200
   614   002374                     u201:
   615   002374  EFBE  F011         	goto	l964
   616   002378                     u200:
   617   002378  0E05               	movlw	5
   618   00237A  6E06               	movwf	scan_number@input^0,c
   619   00237C                     l964:
   620                           
   621                           ;main.c: 75:         if(PORTAbits.RA2 == 1) input = 8;
   622   00237C  A4CA               	btfss	202,2,c	;volatile
   623   00237E  EFC3  F011         	goto	u211
   624   002382  EFC5  F011         	goto	u210
   625   002386                     u211:
   626   002386  EFC7  F011         	goto	l968
   627   00238A                     u210:
   628   00238A  0E08               	movlw	8
   629   00238C  6E06               	movwf	scan_number@input^0,c
   630   00238E                     l968:
   631                           
   632                           ;main.c: 76:         if(PORTAbits.RA3 == 1) input = 0;
   633   00238E  A6CA               	btfss	202,3,c	;volatile
   634   002390  EFCC  F011         	goto	u221
   635   002394  EFCE  F011         	goto	u220
   636   002398                     u221:
   637   002398  EFD0  F011         	goto	l972
   638   00239C                     u220:
   639   00239C  0E00               	movlw	0
   640   00239E  6E06               	movwf	scan_number@input^0,c
   641   0023A0                     l972:
   642                           
   643                           ;main.c: 77:         PORTBbits.RB1 = 0;
   644   0023A0  92CB               	bcf	203,1,c	;volatile
   645   0023A2                     
   646                           ;main.c: 79:          PORTBbits.RB2 = 1;
   647   0023A2  84CB               	bsf	203,2,c	;volatile
   648   0023A4                     
   649                           ;main.c: 80:         if (PORTAbits.RA0 == 1)input = 3;
   650   0023A4  A0CA               	btfss	202,0,c	;volatile
   651   0023A6  EFD7  F011         	goto	u231
   652   0023AA  EFD9  F011         	goto	u230
   653   0023AE                     u231:
   654   0023AE  EFDB  F011         	goto	l980
   655   0023B2                     u230:
   656   0023B2  0E03               	movlw	3
   657   0023B4  6E06               	movwf	scan_number@input^0,c
   658   0023B6                     l980:
   659                           
   660                           ;main.c: 81:         if(PORTAbits.RA1 == 1) input = 6;
   661   0023B6  A2CA               	btfss	202,1,c	;volatile
   662   0023B8  EFE0  F011         	goto	u241
   663   0023BC  EFE2  F011         	goto	u240
   664   0023C0                     u241:
   665   0023C0  EFE4  F011         	goto	l984
   666   0023C4                     u240:
   667   0023C4  0E06               	movlw	6
   668   0023C6  6E06               	movwf	scan_number@input^0,c
   669   0023C8                     l984:
   670                           
   671                           ;main.c: 82:         if(PORTAbits.RA2 == 1) input = 9;
   672   0023C8  A4CA               	btfss	202,2,c	;volatile
   673   0023CA  EFE9  F011         	goto	u251
   674   0023CE  EFEB  F011         	goto	u250
   675   0023D2                     u251:
   676   0023D2  EFED  F011         	goto	l988
   677   0023D6                     u250:
   678   0023D6  0E09               	movlw	9
   679   0023D8  6E06               	movwf	scan_number@input^0,c
   680   0023DA                     l988:
   681                           
   682                           ;main.c: 83:         PORTBbits.RB2 = 0;
   683   0023DA  94CB               	bcf	203,2,c	;volatile
   684   0023DC                     l990:
   685                           
   686                           ;main.c: 64:     while (input == 10)
   687   0023DC  0E0A               	movlw	10
   688   0023DE  1806               	xorwf	scan_number@input^0,w,c
   689   0023E0  B4D8               	btfsc	status,2,c
   690   0023E2  EFF5  F011         	goto	u261
   691   0023E6  EFF7  F011         	goto	u260
   692   0023EA                     u261:
   693   0023EA  EF8E  F011         	goto	l60
   694   0023EE                     u260:
   695   0023EE                     
   696                           ;main.c: 86:     _delay((unsigned long)((200)*(8000000/4000.0)));
   697   0023EE  0E03               	movlw	3
   698   0023F0  6E02               	movwf	(??_scan_number+1)^0,c
   699   0023F2  0E08               	movlw	8
   700   0023F4  6E01               	movwf	??_scan_number^0,c
   701   0023F6  0E77               	movlw	119
   702   0023F8                     u1177:
   703   0023F8  2EE8               	decfsz	wreg,f,c
   704   0023FA  D7FE               	bra	u1177
   705   0023FC  2E01               	decfsz	??_scan_number^0,f,c
   706   0023FE  D7FC               	bra	u1177
   707   002400  2E02               	decfsz	(??_scan_number+1)^0,f,c
   708   002402  D7FA               	bra	u1177
   709   002404  0000               	nop	
   710   002406                     
   711                           ;main.c: 88:     input *=10;
   712   002406  0E0A               	movlw	10
   713   002408  0206               	mulwf	scan_number@input^0,c
   714   00240A  50F3               	movf	prodl,w,c
   715   00240C  6E06               	movwf	scan_number@input^0,c
   716   00240E                     
   717                           ;main.c: 89:     output = input;
   718   00240E  C006  F005         	movff	scan_number@input,scan_number@output
   719   002412                     
   720                           ;main.c: 91:     input = 10;
   721   002412  0E0A               	movlw	10
   722   002414  6E06               	movwf	scan_number@input^0,c
   723                           
   724                           ;main.c: 92:     while (input == 10)
   725   002416  EF6F  F012         	goto	l1048
   726   00241A                     l73:
   727                           
   728                           ;main.c: 93:     {;main.c: 94:         PORTBbits.RB0 = 1;
   729   00241A  80CB               	bsf	203,0,c	;volatile
   730                           
   731                           ;main.c: 95:         if (PORTAbits.RA0 == 1)input = 1;
   732   00241C  A0CA               	btfss	202,0,c	;volatile
   733   00241E  EF13  F012         	goto	u271
   734   002422  EF15  F012         	goto	u270
   735   002426                     u271:
   736   002426  EF17  F012         	goto	l1002
   737   00242A                     u270:
   738   00242A  0E01               	movlw	1
   739   00242C  6E06               	movwf	scan_number@input^0,c
   740   00242E                     l1002:
   741                           
   742                           ;main.c: 96:         if(PORTAbits.RA1 == 1) input = 4;
   743   00242E  A2CA               	btfss	202,1,c	;volatile
   744   002430  EF1C  F012         	goto	u281
   745   002434  EF1E  F012         	goto	u280
   746   002438                     u281:
   747   002438  EF20  F012         	goto	l1006
   748   00243C                     u280:
   749   00243C  0E04               	movlw	4
   750   00243E  6E06               	movwf	scan_number@input^0,c
   751   002440                     l1006:
   752                           
   753                           ;main.c: 97:         if(PORTAbits.RA2 == 1) input = 7;
   754   002440  A4CA               	btfss	202,2,c	;volatile
   755   002442  EF25  F012         	goto	u291
   756   002446  EF27  F012         	goto	u290
   757   00244A                     u291:
   758   00244A  EF29  F012         	goto	l1010
   759   00244E                     u290:
   760   00244E  0E07               	movlw	7
   761   002450  6E06               	movwf	scan_number@input^0,c
   762   002452                     l1010:
   763                           
   764                           ;main.c: 98:         PORTBbits.RB0 = 0;
   765   002452  90CB               	bcf	203,0,c	;volatile
   766   002454                     
   767                           ;main.c: 100:          PORTBbits.RB1 = 1;
   768   002454  82CB               	bsf	203,1,c	;volatile
   769   002456                     
   770                           ;main.c: 101:         if(PORTAbits.RA0 == 1) input = 2;
   771   002456  A0CA               	btfss	202,0,c	;volatile
   772   002458  EF30  F012         	goto	u301
   773   00245C  EF32  F012         	goto	u300
   774   002460                     u301:
   775   002460  EF34  F012         	goto	l1018
   776   002464                     u300:
   777   002464  0E02               	movlw	2
   778   002466  6E06               	movwf	scan_number@input^0,c
   779   002468                     l1018:
   780                           
   781                           ;main.c: 102:         if(PORTAbits.RA1 == 1) input = 5;
   782   002468  A2CA               	btfss	202,1,c	;volatile
   783   00246A  EF39  F012         	goto	u311
   784   00246E  EF3B  F012         	goto	u310
   785   002472                     u311:
   786   002472  EF3D  F012         	goto	l1022
   787   002476                     u310:
   788   002476  0E05               	movlw	5
   789   002478  6E06               	movwf	scan_number@input^0,c
   790   00247A                     l1022:
   791                           
   792                           ;main.c: 103:         if(PORTAbits.RA2 == 1) input = 8;
   793   00247A  A4CA               	btfss	202,2,c	;volatile
   794   00247C  EF42  F012         	goto	u321
   795   002480  EF44  F012         	goto	u320
   796   002484                     u321:
   797   002484  EF46  F012         	goto	l1026
   798   002488                     u320:
   799   002488  0E08               	movlw	8
   800   00248A  6E06               	movwf	scan_number@input^0,c
   801   00248C                     l1026:
   802                           
   803                           ;main.c: 104:         if(PORTAbits.RA3 == 1) input = 0;
   804   00248C  A6CA               	btfss	202,3,c	;volatile
   805   00248E  EF4B  F012         	goto	u331
   806   002492  EF4D  F012         	goto	u330
   807   002496                     u331:
   808   002496  EF4F  F012         	goto	l1030
   809   00249A                     u330:
   810   00249A  0E00               	movlw	0
   811   00249C  6E06               	movwf	scan_number@input^0,c
   812   00249E                     l1030:
   813                           
   814                           ;main.c: 105:         PORTBbits.RB1 = 0;
   815   00249E  92CB               	bcf	203,1,c	;volatile
   816   0024A0                     
   817                           ;main.c: 107:          PORTBbits.RB2 = 1;
   818   0024A0  84CB               	bsf	203,2,c	;volatile
   819   0024A2                     
   820                           ;main.c: 108:         if (PORTAbits.RA0 == 1)input = 3;
   821   0024A2  A0CA               	btfss	202,0,c	;volatile
   822   0024A4  EF56  F012         	goto	u341
   823   0024A8  EF58  F012         	goto	u340
   824   0024AC                     u341:
   825   0024AC  EF5A  F012         	goto	l1038
   826   0024B0                     u340:
   827   0024B0  0E03               	movlw	3
   828   0024B2  6E06               	movwf	scan_number@input^0,c
   829   0024B4                     l1038:
   830                           
   831                           ;main.c: 109:         if(PORTAbits.RA1 == 1) input = 6;
   832   0024B4  A2CA               	btfss	202,1,c	;volatile
   833   0024B6  EF5F  F012         	goto	u351
   834   0024BA  EF61  F012         	goto	u350
   835   0024BE                     u351:
   836   0024BE  EF63  F012         	goto	l1042
   837   0024C2                     u350:
   838   0024C2  0E06               	movlw	6
   839   0024C4  6E06               	movwf	scan_number@input^0,c
   840   0024C6                     l1042:
   841                           
   842                           ;main.c: 110:         if(PORTAbits.RA2 == 1) input = 9;
   843   0024C6  A4CA               	btfss	202,2,c	;volatile
   844   0024C8  EF68  F012         	goto	u361
   845   0024CC  EF6A  F012         	goto	u360
   846   0024D0                     u361:
   847   0024D0  EF6C  F012         	goto	l1046
   848   0024D4                     u360:
   849   0024D4  0E09               	movlw	9
   850   0024D6  6E06               	movwf	scan_number@input^0,c
   851   0024D8                     l1046:
   852                           
   853                           ;main.c: 111:         PORTBbits.RB2 = 0;
   854   0024D8  94CB               	bcf	203,2,c	;volatile
   855                           
   856                           ;main.c: 113:         PORTB = 0;
   857   0024DA  0E00               	movlw	0
   858   0024DC  6ECB               	movwf	203,c	;volatile
   859   0024DE                     l1048:
   860                           
   861                           ;main.c: 92:     while (input == 10)
   862   0024DE  0E0A               	movlw	10
   863   0024E0  1806               	xorwf	scan_number@input^0,w,c
   864   0024E2  B4D8               	btfsc	status,2,c
   865   0024E4  EF76  F012         	goto	u371
   866   0024E8  EF78  F012         	goto	u370
   867   0024EC                     u371:
   868   0024EC  EF0D  F012         	goto	l73
   869   0024F0                     u370:
   870   0024F0                     
   871                           ;main.c: 115:     output += input;
   872   0024F0  5006               	movf	scan_number@input^0,w,c
   873   0024F2  2605               	addwf	scan_number@output^0,f,c
   874   0024F4                     
   875                           ;main.c: 116:     _delay((unsigned long)((200)*(8000000/4000.0)));
   876   0024F4  0E03               	movlw	3
   877   0024F6  6E02               	movwf	(??_scan_number+1)^0,c
   878   0024F8  0E08               	movlw	8
   879   0024FA  6E01               	movwf	??_scan_number^0,c
   880   0024FC  0E77               	movlw	119
   881   0024FE                     u1187:
   882   0024FE  2EE8               	decfsz	wreg,f,c
   883   002500  D7FE               	bra	u1187
   884   002502  2E01               	decfsz	??_scan_number^0,f,c
   885   002504  D7FC               	bra	u1187
   886   002506  2E02               	decfsz	(??_scan_number+1)^0,f,c
   887   002508  D7FA               	bra	u1187
   888   00250A  0000               	nop	
   889   00250C                     
   890                           ;main.c: 117:     return output;
   891   00250C  5005               	movf	scan_number@output^0,w,c
   892   00250E  0012               	return		;funcret
   893   002510                     __end_of_scan_number:
   894                           	callstack 0
   895                           
   896 ;; *************** function _calculate *****************
   897 ;; Defined at:
   898 ;;		line 134 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  x               1    wreg     unsigned char 
   901 ;;  y               1    4[COMRAM] unsigned char 
   902 ;;  op              1    5[COMRAM] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  x               1    7[COMRAM] unsigned char 
   905 ;;  output          1    6[COMRAM] char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2    4[COMRAM] int 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   919 ;;Total ram usage:        4 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 1
   922 ;; This function calls:
   923 ;;		___lbdiv
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930   00277E                     __ptext3:
   931                           	callstack 0
   932   00277E                     _calculate:
   933                           	callstack 29
   934                           
   935                           ;incstack = 0
   936                           ;calculate@x stored from wreg
   937   00277E  6E08               	movwf	calculate@x^0,c
   938   002780                     
   939                           ;main.c: 135:     signed char output = 0;
   940   002780  0E00               	movlw	0
   941   002782  6E07               	movwf	calculate@output^0,c
   942   002784                     
   943                           ;main.c: 136:     if(op == 1)
   944   002784  0406               	decf	calculate@op^0,w,c
   945   002786  A4D8               	btfss	status,2,c
   946   002788  EFC8  F013         	goto	u871
   947   00278C  EFCA  F013         	goto	u870
   948   002790                     u871:
   949   002790  EFCD  F013         	goto	l98
   950   002794                     u870:
   951   002794                     
   952                           ;main.c: 137:         output = x + y;
   953   002794  5008               	movf	calculate@x^0,w,c
   954   002796  2405               	addwf	calculate@y^0,w,c
   955   002798  6E07               	movwf	calculate@output^0,c
   956   00279A                     l98:
   957                           
   958                           ;main.c: 138:     if(op == 2)
   959   00279A  0E02               	movlw	2
   960   00279C  1806               	xorwf	calculate@op^0,w,c
   961   00279E  A4D8               	btfss	status,2,c
   962   0027A0  EFD4  F013         	goto	u881
   963   0027A4  EFD6  F013         	goto	u880
   964   0027A8                     u881:
   965   0027A8  EFD9  F013         	goto	l99
   966   0027AC                     u880:
   967   0027AC                     
   968                           ;main.c: 139:         output = x-y;
   969   0027AC  5005               	movf	calculate@y^0,w,c
   970   0027AE  5C08               	subwf	calculate@x^0,w,c
   971   0027B0  6E07               	movwf	calculate@output^0,c
   972   0027B2                     l99:
   973                           
   974                           ;main.c: 140:     if(op == 3)
   975   0027B2  0E03               	movlw	3
   976   0027B4  1806               	xorwf	calculate@op^0,w,c
   977   0027B6  A4D8               	btfss	status,2,c
   978   0027B8  EFE0  F013         	goto	u891
   979   0027BC  EFE2  F013         	goto	u890
   980   0027C0                     u891:
   981   0027C0  EFE7  F013         	goto	l1364
   982   0027C4                     u890:
   983   0027C4                     
   984                           ;main.c: 141:         output = x*y;
   985   0027C4  5008               	movf	calculate@x^0,w,c
   986   0027C6  0205               	mulwf	calculate@y^0,c
   987   0027C8  006F FFCC  F007    	movff	prodl,calculate@output
   988   0027CE                     l1364:
   989                           
   990                           ;main.c: 142:     if(op == 4)
   991   0027CE  0E04               	movlw	4
   992   0027D0  1806               	xorwf	calculate@op^0,w,c
   993   0027D2  A4D8               	btfss	status,2,c
   994   0027D4  EFEE  F013         	goto	u901
   995   0027D8  EFF0  F013         	goto	u900
   996   0027DC                     u901:
   997   0027DC  EFF6  F013         	goto	l1368
   998   0027E0                     u900:
   999   0027E0                     
  1000                           ;main.c: 143:         output = x/y;
  1001   0027E0  C005  F001         	movff	calculate@y,___lbdiv@divisor
  1002   0027E4  5008               	movf	calculate@x^0,w,c
  1003   0027E6  ECFC  F013         	call	___lbdiv
  1004   0027EA  6E07               	movwf	calculate@output^0,c
  1005   0027EC                     l1368:
  1006                           
  1007                           ;main.c: 144:     return output;
  1008   0027EC  5007               	movf	calculate@output^0,w,c
  1009   0027EE  6E05               	movwf	?_calculate^0,c
  1010   0027F0  6A06               	clrf	(?_calculate+1)^0,c
  1011   0027F2  BE05               	btfsc	?_calculate^0,7,c
  1012   0027F4  0606               	decf	(?_calculate+1)^0,f,c
  1013   0027F6  0012               	return		;funcret
  1014   0027F8                     __end_of_calculate:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function ___lbdiv *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  dividend        1    wreg     unsigned char 
  1022 ;;  divisor         1    0[COMRAM] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  dividend        1    1[COMRAM] unsigned char 
  1025 ;;  quotient        1    3[COMRAM] unsigned char 
  1026 ;;  counter         1    2[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1036 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;Total ram usage:        4 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_calculate
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050   0027F8                     __ptext4:
  1051                           	callstack 0
  1052   0027F8                     ___lbdiv:
  1053                           	callstack 29
  1054                           
  1055                           ;incstack = 0
  1056                           ;___lbdiv@dividend stored from wreg
  1057   0027F8  6E02               	movwf	___lbdiv@dividend^0,c
  1058   0027FA  0E00               	movlw	0
  1059   0027FC  6E04               	movwf	___lbdiv@quotient^0,c
  1060   0027FE  5001               	movf	___lbdiv@divisor^0,w,c
  1061   002800  B4D8               	btfsc	status,2,c
  1062   002802  EF05  F014         	goto	u841
  1063   002806  EF07  F014         	goto	u840
  1064   00280A                     u841:
  1065   00280A  EF28  F014         	goto	l1350
  1066   00280E                     u840:
  1067   00280E  0E01               	movlw	1
  1068   002810  6E03               	movwf	___lbdiv@counter^0,c
  1069   002812  EF0E  F014         	goto	l1338
  1070   002816                     l1334:
  1071   002816  90D8               	bcf	status,0,c
  1072   002818  3601               	rlcf	___lbdiv@divisor^0,f,c
  1073   00281A  2A03               	incf	___lbdiv@counter^0,f,c
  1074   00281C                     l1338:
  1075   00281C  AE01               	btfss	___lbdiv@divisor^0,7,c
  1076   00281E  EF13  F014         	goto	u851
  1077   002822  EF15  F014         	goto	u850
  1078   002826                     u851:
  1079   002826  EF0B  F014         	goto	l1334
  1080   00282A                     u850:
  1081   00282A                     l1340:
  1082   00282A  90D8               	bcf	status,0,c
  1083   00282C  3604               	rlcf	___lbdiv@quotient^0,f,c
  1084   00282E  5001               	movf	___lbdiv@divisor^0,w,c
  1085   002830  5C02               	subwf	___lbdiv@dividend^0,w,c
  1086   002832  A0D8               	btfss	status,0,c
  1087   002834  EF1E  F014         	goto	u861
  1088   002838  EF20  F014         	goto	u860
  1089   00283C                     u861:
  1090   00283C  EF23  F014         	goto	l1346
  1091   002840                     u860:
  1092   002840  5001               	movf	___lbdiv@divisor^0,w,c
  1093   002842  5E02               	subwf	___lbdiv@dividend^0,f,c
  1094   002844  8004               	bsf	___lbdiv@quotient^0,0,c
  1095   002846                     l1346:
  1096   002846  90D8               	bcf	status,0,c
  1097   002848  3201               	rrcf	___lbdiv@divisor^0,f,c
  1098   00284A  2E03               	decfsz	___lbdiv@counter^0,f,c
  1099   00284C  EF15  F014         	goto	l1340
  1100   002850                     l1350:
  1101   002850  5004               	movf	___lbdiv@quotient^0,w,c
  1102   002852  0012               	return		;funcret
  1103   002854                     __end_of___lbdiv:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _PORT_Output *****************
  1107 ;; Defined at:
  1108 ;;		line 147 in file "main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  answer          2    8[COMRAM] int 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  i               2   12[COMRAM] int 
  1113 ;;  first_dig       1   17[COMRAM] char 
  1114 ;;  second_dig      1   16[COMRAM] char 
  1115 ;;  display2        1   15[COMRAM] unsigned char 
  1116 ;;  display1        1   14[COMRAM] unsigned char 
  1117 ;;  enter           1   11[COMRAM] char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1131 ;;Total ram usage:       10 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 1
  1134 ;; This function calls:
  1135 ;;		___awdiv
  1136 ;;		___awmod
  1137 ;;		___wmul
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text5
  1144   002002                     __ptext5:
  1145                           	callstack 0
  1146   002002                     _PORT_Output:
  1147                           	callstack 29
  1148   002002                     
  1149                           ;main.c: 149:     signed char second_dig = 0;
  1150   002002  0E00               	movlw	0
  1151   002004  6E11               	movwf	PORT_Output@second_dig^0,c
  1152                           
  1153                           ;main.c: 150:     signed char enter = 0;
  1154   002006  0E00               	movlw	0
  1155   002008  6E0C               	movwf	PORT_Output@enter^0,c
  1156                           
  1157                           ;main.c: 151:     int i = 0;
  1158   00200A  0E00               	movlw	0
  1159   00200C  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1160   00200E  0E00               	movlw	0
  1161   002010  6E0D               	movwf	PORT_Output@i^0,c
  1162                           
  1163                           ;main.c: 152:     char display1 = 0;
  1164   002012  0E00               	movlw	0
  1165   002014  6E0F               	movwf	PORT_Output@display1^0,c
  1166                           
  1167                           ;main.c: 153:     char display2 = 0;
  1168   002016  0E00               	movlw	0
  1169   002018  6E10               	movwf	PORT_Output@display2^0,c
  1170   00201A                     
  1171                           ;main.c: 155:     if(answer<0){
  1172   00201A  BE0A               	btfsc	(PORT_Output@answer+1)^0,7,c
  1173   00201C  EF14  F010         	goto	u910
  1174   002020  EF12  F010         	goto	u911
  1175   002024                     u911:
  1176   002024  EF22  F010         	goto	l1380
  1177   002028                     u910:
  1178   002028                     
  1179                           ;main.c: 156:         answer*= -1;
  1180   002028  C009  F001         	movff	PORT_Output@answer,___wmul@multiplier
  1181   00202C  C00A  F002         	movff	PORT_Output@answer+1,___wmul@multiplier+1
  1182   002030  0EFF               	movlw	255
  1183   002032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1184   002034  6803               	setf	___wmul@multiplicand^0,c
  1185   002036  EC2A  F014         	call	___wmul	;wreg free
  1186   00203A  C001  F009         	movff	?___wmul,PORT_Output@answer
  1187   00203E  C002  F00A         	movff	?___wmul+1,PORT_Output@answer+1
  1188   002042                     
  1189                           ;main.c: 157:         PORTCbits.RC7 = 0;
  1190   002042  9ECC               	bcf	204,7,c	;volatile
  1191   002044                     l1380:
  1192                           
  1193                           ;main.c: 159:     first_dig = answer/10;
  1194   002044  C009  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1195   002048  C00A  F002         	movff	PORT_Output@answer+1,___awdiv@dividend+1
  1196   00204C  0E00               	movlw	0
  1197   00204E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1198   002050  0E0A               	movlw	10
  1199   002052  6E03               	movwf	___awdiv@divisor^0,c
  1200   002054  EC88  F012         	call	___awdiv	;wreg free
  1201   002058  5001               	movf	?___awdiv^0,w,c
  1202   00205A  6E12               	movwf	PORT_Output@first_dig^0,c
  1203   00205C                     
  1204                           ;main.c: 160:     second_dig = answer % 10;
  1205   00205C  C009  F001         	movff	PORT_Output@answer,___awmod@dividend
  1206   002060  C00A  F002         	movff	PORT_Output@answer+1,___awmod@dividend+1
  1207   002064  0E00               	movlw	0
  1208   002066  6E04               	movwf	(___awmod@divisor+1)^0,c
  1209   002068  0E0A               	movlw	10
  1210   00206A  6E03               	movwf	___awmod@divisor^0,c
  1211   00206C  ECEA  F012         	call	___awmod	;wreg free
  1212   002070  5001               	movf	?___awmod^0,w,c
  1213   002072  6E11               	movwf	PORT_Output@second_dig^0,c
  1214   002074                     
  1215                           ;main.c: 162:     if(first_dig == 0) display1 = 0xC0;
  1216   002074  5012               	movf	PORT_Output@first_dig^0,w,c
  1217   002076  A4D8               	btfss	status,2,c
  1218   002078  EF40  F010         	goto	u921
  1219   00207C  EF42  F010         	goto	u920
  1220   002080                     u921:
  1221   002080  EF46  F010         	goto	l1388
  1222   002084                     u920:
  1223   002084  0EC0               	movlw	192
  1224   002086  6E0F               	movwf	PORT_Output@display1^0,c
  1225   002088  EFC2  F010         	goto	l107
  1226   00208C                     l1388:
  1227   00208C  0412               	decf	PORT_Output@first_dig^0,w,c
  1228   00208E  B4D8               	btfsc	status,2,c
  1229   002090  EF4C  F010         	goto	u931
  1230   002094  EF4E  F010         	goto	u930
  1231   002098                     u931:
  1232   002098  EF56  F010         	goto	l1392
  1233   00209C                     u930:
  1234   00209C  2812               	incf	PORT_Output@first_dig^0,w,c
  1235   00209E  A4D8               	btfss	status,2,c
  1236   0020A0  EF54  F010         	goto	u941
  1237   0020A4  EF56  F010         	goto	u940
  1238   0020A8                     u941:
  1239   0020A8  EF5A  F010         	goto	l1394
  1240   0020AC                     u940:
  1241   0020AC                     l1392:
  1242   0020AC  0EF9               	movlw	249
  1243   0020AE  6E0F               	movwf	PORT_Output@display1^0,c
  1244   0020B0  EFC2  F010         	goto	l107
  1245   0020B4                     l1394:
  1246   0020B4  0E02               	movlw	2
  1247   0020B6  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1248   0020B8  A4D8               	btfss	status,2,c
  1249   0020BA  EF61  F010         	goto	u951
  1250   0020BE  EF63  F010         	goto	u950
  1251   0020C2                     u951:
  1252   0020C2  EF67  F010         	goto	l1398
  1253   0020C6                     u950:
  1254   0020C6  0EA4               	movlw	164
  1255   0020C8  6E0F               	movwf	PORT_Output@display1^0,c
  1256   0020CA  EFC2  F010         	goto	l107
  1257   0020CE                     l1398:
  1258   0020CE  0E03               	movlw	3
  1259   0020D0  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1260   0020D2  A4D8               	btfss	status,2,c
  1261   0020D4  EF6E  F010         	goto	u961
  1262   0020D8  EF70  F010         	goto	u960
  1263   0020DC                     u961:
  1264   0020DC  EF74  F010         	goto	l1402
  1265   0020E0                     u960:
  1266   0020E0  0EB0               	movlw	176
  1267   0020E2  6E0F               	movwf	PORT_Output@display1^0,c
  1268   0020E4  EFC2  F010         	goto	l107
  1269   0020E8                     l1402:
  1270   0020E8  0E04               	movlw	4
  1271   0020EA  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1272   0020EC  A4D8               	btfss	status,2,c
  1273   0020EE  EF7B  F010         	goto	u971
  1274   0020F2  EF7D  F010         	goto	u970
  1275   0020F6                     u971:
  1276   0020F6  EF81  F010         	goto	l1406
  1277   0020FA                     u970:
  1278   0020FA  0E99               	movlw	153
  1279   0020FC  6E0F               	movwf	PORT_Output@display1^0,c
  1280   0020FE  EFC2  F010         	goto	l107
  1281   002102                     l1406:
  1282   002102  0E05               	movlw	5
  1283   002104  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1284   002106  A4D8               	btfss	status,2,c
  1285   002108  EF88  F010         	goto	u981
  1286   00210C  EF8A  F010         	goto	u980
  1287   002110                     u981:
  1288   002110  EF8E  F010         	goto	l1410
  1289   002114                     u980:
  1290   002114  0E92               	movlw	146
  1291   002116  6E0F               	movwf	PORT_Output@display1^0,c
  1292   002118  EFC2  F010         	goto	l107
  1293   00211C                     l1410:
  1294   00211C  0E06               	movlw	6
  1295   00211E  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1296   002120  A4D8               	btfss	status,2,c
  1297   002122  EF95  F010         	goto	u991
  1298   002126  EF97  F010         	goto	u990
  1299   00212A                     u991:
  1300   00212A  EF9B  F010         	goto	l1414
  1301   00212E                     u990:
  1302   00212E  0E82               	movlw	130
  1303   002130  6E0F               	movwf	PORT_Output@display1^0,c
  1304   002132  EFC2  F010         	goto	l107
  1305   002136                     l1414:
  1306   002136  0E07               	movlw	7
  1307   002138  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1308   00213A  A4D8               	btfss	status,2,c
  1309   00213C  EFA2  F010         	goto	u1001
  1310   002140  EFA4  F010         	goto	u1000
  1311   002144                     u1001:
  1312   002144  EFA8  F010         	goto	l1418
  1313   002148                     u1000:
  1314   002148  0EF8               	movlw	248
  1315   00214A  6E0F               	movwf	PORT_Output@display1^0,c
  1316   00214C  EFC2  F010         	goto	l107
  1317   002150                     l1418:
  1318   002150  0E08               	movlw	8
  1319   002152  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1320   002154  A4D8               	btfss	status,2,c
  1321   002156  EFAF  F010         	goto	u1011
  1322   00215A  EFB1  F010         	goto	u1010
  1323   00215E                     u1011:
  1324   00215E  EFB5  F010         	goto	l1422
  1325   002162                     u1010:
  1326   002162  0E80               	movlw	128
  1327   002164  6E0F               	movwf	PORT_Output@display1^0,c
  1328   002166  EFC2  F010         	goto	l107
  1329   00216A                     l1422:
  1330   00216A  0E09               	movlw	9
  1331   00216C  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1332   00216E  A4D8               	btfss	status,2,c
  1333   002170  EFBC  F010         	goto	u1021
  1334   002174  EFBE  F010         	goto	u1020
  1335   002178                     u1021:
  1336   002178  EFC2  F010         	goto	l121
  1337   00217C                     u1020:
  1338   00217C  0E98               	movlw	152
  1339   00217E  6E0F               	movwf	PORT_Output@display1^0,c
  1340   002180  EFC2  F010         	goto	l107
  1341   002184                     l121:
  1342   002184                     l107:
  1343                           
  1344                           ;main.c: 173:     if(second_dig == 0) display2 = 0xC0;
  1345   002184  5011               	movf	PORT_Output@second_dig^0,w,c
  1346   002186  A4D8               	btfss	status,2,c
  1347   002188  EFC8  F010         	goto	u1031
  1348   00218C  EFCA  F010         	goto	u1030
  1349   002190                     u1031:
  1350   002190  EFCE  F010         	goto	l1428
  1351   002194                     u1030:
  1352   002194  0EC0               	movlw	192
  1353   002196  6E10               	movwf	PORT_Output@display2^0,c
  1354   002198  EF4E  F011         	goto	l146
  1355   00219C                     l1428:
  1356   00219C  0411               	decf	PORT_Output@second_dig^0,w,c
  1357   00219E  A4D8               	btfss	status,2,c
  1358   0021A0  EFD4  F010         	goto	u1041
  1359   0021A4  EFD6  F010         	goto	u1040
  1360   0021A8                     u1041:
  1361   0021A8  EFDA  F010         	goto	l1432
  1362   0021AC                     u1040:
  1363   0021AC  0EF9               	movlw	249
  1364   0021AE  6E10               	movwf	PORT_Output@display2^0,c
  1365   0021B0  EF4E  F011         	goto	l146
  1366   0021B4                     l1432:
  1367   0021B4  0E02               	movlw	2
  1368   0021B6  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1369   0021B8  A4D8               	btfss	status,2,c
  1370   0021BA  EFE1  F010         	goto	u1051
  1371   0021BE  EFE3  F010         	goto	u1050
  1372   0021C2                     u1051:
  1373   0021C2  EFE7  F010         	goto	l1436
  1374   0021C6                     u1050:
  1375   0021C6  0EA4               	movlw	164
  1376   0021C8  6E10               	movwf	PORT_Output@display2^0,c
  1377   0021CA  EF4E  F011         	goto	l146
  1378   0021CE                     l1436:
  1379   0021CE  0E03               	movlw	3
  1380   0021D0  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1381   0021D2  A4D8               	btfss	status,2,c
  1382   0021D4  EFEE  F010         	goto	u1061
  1383   0021D8  EFF0  F010         	goto	u1060
  1384   0021DC                     u1061:
  1385   0021DC  EFF4  F010         	goto	l1440
  1386   0021E0                     u1060:
  1387   0021E0  0EB0               	movlw	176
  1388   0021E2  6E10               	movwf	PORT_Output@display2^0,c
  1389   0021E4  EF4E  F011         	goto	l146
  1390   0021E8                     l1440:
  1391   0021E8  0E04               	movlw	4
  1392   0021EA  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1393   0021EC  A4D8               	btfss	status,2,c
  1394   0021EE  EFFB  F010         	goto	u1071
  1395   0021F2  EFFD  F010         	goto	u1070
  1396   0021F6                     u1071:
  1397   0021F6  EF01  F011         	goto	l1444
  1398   0021FA                     u1070:
  1399   0021FA  0E99               	movlw	153
  1400   0021FC  6E10               	movwf	PORT_Output@display2^0,c
  1401   0021FE  EF4E  F011         	goto	l146
  1402   002202                     l1444:
  1403   002202  0E05               	movlw	5
  1404   002204  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1405   002206  A4D8               	btfss	status,2,c
  1406   002208  EF08  F011         	goto	u1081
  1407   00220C  EF0A  F011         	goto	u1080
  1408   002210                     u1081:
  1409   002210  EF0E  F011         	goto	l1448
  1410   002214                     u1080:
  1411   002214  0E92               	movlw	146
  1412   002216  6E10               	movwf	PORT_Output@display2^0,c
  1413   002218  EF4E  F011         	goto	l146
  1414   00221C                     l1448:
  1415   00221C  0E06               	movlw	6
  1416   00221E  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1417   002220  A4D8               	btfss	status,2,c
  1418   002222  EF15  F011         	goto	u1091
  1419   002226  EF17  F011         	goto	u1090
  1420   00222A                     u1091:
  1421   00222A  EF1B  F011         	goto	l1452
  1422   00222E                     u1090:
  1423   00222E  0E82               	movlw	130
  1424   002230  6E10               	movwf	PORT_Output@display2^0,c
  1425   002232  EF4E  F011         	goto	l146
  1426   002236                     l1452:
  1427   002236  0E07               	movlw	7
  1428   002238  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1429   00223A  A4D8               	btfss	status,2,c
  1430   00223C  EF22  F011         	goto	u1101
  1431   002240  EF24  F011         	goto	u1100
  1432   002244                     u1101:
  1433   002244  EF28  F011         	goto	l1456
  1434   002248                     u1100:
  1435   002248  0EF8               	movlw	248
  1436   00224A  6E10               	movwf	PORT_Output@display2^0,c
  1437   00224C  EF4E  F011         	goto	l146
  1438   002250                     l1456:
  1439   002250  0E08               	movlw	8
  1440   002252  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1441   002254  A4D8               	btfss	status,2,c
  1442   002256  EF2F  F011         	goto	u1111
  1443   00225A  EF31  F011         	goto	u1110
  1444   00225E                     u1111:
  1445   00225E  EF35  F011         	goto	l1460
  1446   002262                     u1110:
  1447   002262  0E80               	movlw	128
  1448   002264  6E10               	movwf	PORT_Output@display2^0,c
  1449   002266  EF4E  F011         	goto	l146
  1450   00226A                     l1460:
  1451   00226A  0E09               	movlw	9
  1452   00226C  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1453   00226E  A4D8               	btfss	status,2,c
  1454   002270  EF3C  F011         	goto	u1121
  1455   002274  EF3E  F011         	goto	u1120
  1456   002278                     u1121:
  1457   002278  EF42  F011         	goto	l140
  1458   00227C                     u1120:
  1459   00227C  0E98               	movlw	152
  1460   00227E  6E10               	movwf	PORT_Output@display2^0,c
  1461   002280  EF4E  F011         	goto	l146
  1462   002284                     l140:
  1463   002284  EF4E  F011         	goto	l146
  1464   002288                     l147:
  1465                           
  1466                           ;main.c: 185:         PORTBbits.RB2 = 1;
  1467   002288  84CB               	bsf	203,2,c	;volatile
  1468                           
  1469                           ;main.c: 186:         if(PORTAbits.RA3 == 1) enter =1;
  1470   00228A  A6CA               	btfss	202,3,c	;volatile
  1471   00228C  EF4A  F011         	goto	u1131
  1472   002290  EF4C  F011         	goto	u1130
  1473   002294                     u1131:
  1474   002294  EF4E  F011         	goto	l146
  1475   002298                     u1130:
  1476   002298  0E01               	movlw	1
  1477   00229A  6E0C               	movwf	PORT_Output@enter^0,c
  1478   00229C                     l146:
  1479                           
  1480                           ;main.c: 184:     while(enter == 0){
  1481   00229C  500C               	movf	PORT_Output@enter^0,w,c
  1482   00229E  B4D8               	btfsc	status,2,c
  1483   0022A0  EF54  F011         	goto	u1141
  1484   0022A4  EF56  F011         	goto	u1140
  1485   0022A8                     u1141:
  1486   0022A8  EF44  F011         	goto	l147
  1487   0022AC                     u1140:
  1488   0022AC                     
  1489                           ;main.c: 190:     for(i = 1; i<1000; i++)
  1490   0022AC  0E00               	movlw	0
  1491   0022AE  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1492   0022B0  0E01               	movlw	1
  1493   0022B2  6E0D               	movwf	PORT_Output@i^0,c
  1494   0022B4                     l150:
  1495                           
  1496                           ;main.c: 191:     {;main.c: 192:         PORTBbits.RB5 = 1;
  1497   0022B4  8ACB               	bsf	203,5,c	;volatile
  1498                           
  1499                           ;main.c: 193:         PORTD = display1;
  1500   0022B6  0060  F03F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1501   0022BC                     
  1502                           ;main.c: 194:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1503   0022BC  0E03               	movlw	3
  1504   0022BE  6E0B               	movwf	??_PORT_Output^0,c
  1505   0022C0  0E98               	movlw	152
  1506   0022C2                     u1197:
  1507   0022C2  2EE8               	decfsz	wreg,f,c
  1508   0022C4  D7FE               	bra	u1197
  1509   0022C6  2E0B               	decfsz	??_PORT_Output^0,f,c
  1510   0022C8  D7FC               	bra	u1197
  1511   0022CA                     
  1512                           ;main.c: 195:         PORTBbits.RB5 = 0;
  1513   0022CA  9ACB               	bcf	203,5,c	;volatile
  1514   0022CC                     
  1515                           ;main.c: 196:         PORTBbits.RB6 = 1;
  1516   0022CC  8CCB               	bsf	203,6,c	;volatile
  1517   0022CE                     
  1518                           ;main.c: 197:         PORTD = display2;
  1519   0022CE  0060  F043  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1520                           
  1521                           ;main.c: 198:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1522   0022D4  0E03               	movlw	3
  1523   0022D6  6E0B               	movwf	??_PORT_Output^0,c
  1524   0022D8  0E98               	movlw	152
  1525   0022DA                     u1207:
  1526   0022DA  2EE8               	decfsz	wreg,f,c
  1527   0022DC  D7FE               	bra	u1207
  1528   0022DE  2E0B               	decfsz	??_PORT_Output^0,f,c
  1529   0022E0  D7FC               	bra	u1207
  1530   0022E2                     
  1531                           ;main.c: 199:         PORTBbits.RB6 = 0;
  1532   0022E2  9CCB               	bcf	203,6,c	;volatile
  1533   0022E4                     
  1534                           ;main.c: 201:     }
  1535   0022E4  4A0D               	infsnz	PORT_Output@i^0,f,c
  1536   0022E6  2A0E               	incf	(PORT_Output@i+1)^0,f,c
  1537   0022E8  BE0E               	btfsc	(PORT_Output@i+1)^0,7,c
  1538   0022EA  EF80  F011         	goto	u1151
  1539   0022EE  0EE8               	movlw	232
  1540   0022F0  5C0D               	subwf	PORT_Output@i^0,w,c
  1541   0022F2  0E03               	movlw	3
  1542   0022F4  580E               	subwfb	(PORT_Output@i+1)^0,w,c
  1543   0022F6  A0D8               	btfss	status,0,c
  1544   0022F8  EF80  F011         	goto	u1151
  1545   0022FC  EF82  F011         	goto	u1150
  1546   002300                     u1151:
  1547   002300  EF5A  F011         	goto	l150
  1548   002304                     u1150:
  1549   002304                     
  1550                           ;main.c: 202:     PORTD = 0xFF;
  1551   002304  68CD               	setf	205,c	;volatile
  1552   002306                     
  1553                           ;main.c: 203:     PORTB = 0;
  1554   002306  0E00               	movlw	0
  1555   002308  6ECB               	movwf	203,c	;volatile
  1556   00230A  0012               	return		;funcret
  1557   00230C                     __end_of_PORT_Output:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function ___wmul *****************
  1561 ;; Defined at:
  1562 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  multiplier      2    0[COMRAM] unsigned int 
  1565 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  product         2    4[COMRAM] unsigned int 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    0[COMRAM] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, prodl, prodh
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_PORT_Output
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text6
  1591   002854                     __ptext6:
  1592                           	callstack 0
  1593   002854                     ___wmul:
  1594                           	callstack 29
  1595   002854  5001               	movf	___wmul@multiplier^0,w,c
  1596   002856  0203               	mulwf	___wmul@multiplicand^0,c
  1597   002858  006F FFCC  F005    	movff	prodl,___wmul@product
  1598   00285E  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1599   002864  5001               	movf	___wmul@multiplier^0,w,c
  1600   002866  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1601   002868  50F3               	movf	243,w,c
  1602   00286A  2606               	addwf	(___wmul@product+1)^0,f,c
  1603   00286C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1604   00286E  0203               	mulwf	___wmul@multiplicand^0,c
  1605   002870  50F3               	movf	243,w,c
  1606   002872  2606               	addwf	(___wmul@product+1)^0,f,c
  1607   002874  C005  F001         	movff	___wmul@product,?___wmul
  1608   002878  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1609   00287C  0012               	return		;funcret
  1610   00287E                     __end_of___wmul:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function ___awmod *****************
  1614 ;; Defined at:
  1615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  dividend        2    0[COMRAM] int 
  1618 ;;  divisor         2    2[COMRAM] int 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  sign            1    5[COMRAM] unsigned char 
  1621 ;;  counter         1    4[COMRAM] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    0[COMRAM] int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1635 ;;Total ram usage:        6 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_PORT_Output
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text7
  1645   0025D4                     __ptext7:
  1646                           	callstack 0
  1647   0025D4                     ___awmod:
  1648                           	callstack 29
  1649   0025D4  0E00               	movlw	0
  1650   0025D6  6E06               	movwf	___awmod@sign^0,c
  1651   0025D8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1652   0025DA  EFF3  F012         	goto	u780
  1653   0025DE  EFF1  F012         	goto	u781
  1654   0025E2                     u781:
  1655   0025E2  EFF9  F012         	goto	l1300
  1656   0025E6                     u780:
  1657   0025E6  6C01               	negf	___awmod@dividend^0,c
  1658   0025E8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1659   0025EA  B0D8               	btfsc	status,0,c
  1660   0025EC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1661   0025EE  0E01               	movlw	1
  1662   0025F0  6E06               	movwf	___awmod@sign^0,c
  1663   0025F2                     l1300:
  1664   0025F2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1665   0025F4  EF00  F013         	goto	u790
  1666   0025F8  EFFE  F012         	goto	u791
  1667   0025FC                     u791:
  1668   0025FC  EF04  F013         	goto	l1304
  1669   002600                     u790:
  1670   002600  6C03               	negf	___awmod@divisor^0,c
  1671   002602  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1672   002604  B0D8               	btfsc	status,0,c
  1673   002606  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1674   002608                     l1304:
  1675   002608  5003               	movf	___awmod@divisor^0,w,c
  1676   00260A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1677   00260C  B4D8               	btfsc	status,2,c
  1678   00260E  EF0B  F013         	goto	u801
  1679   002612  EF0D  F013         	goto	u800
  1680   002616                     u801:
  1681   002616  EF31  F013         	goto	l1320
  1682   00261A                     u800:
  1683   00261A  0E01               	movlw	1
  1684   00261C  6E05               	movwf	___awmod@counter^0,c
  1685   00261E  EF15  F013         	goto	l1310
  1686   002622                     l1308:
  1687   002622  90D8               	bcf	status,0,c
  1688   002624  3603               	rlcf	___awmod@divisor^0,f,c
  1689   002626  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1690   002628  2A05               	incf	___awmod@counter^0,f,c
  1691   00262A                     l1310:
  1692   00262A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1693   00262C  EF1A  F013         	goto	u811
  1694   002630  EF1C  F013         	goto	u810
  1695   002634                     u811:
  1696   002634  EF11  F013         	goto	l1308
  1697   002638                     u810:
  1698   002638                     l1312:
  1699   002638  5003               	movf	___awmod@divisor^0,w,c
  1700   00263A  5C01               	subwf	___awmod@dividend^0,w,c
  1701   00263C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1702   00263E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1703   002640  A0D8               	btfss	status,0,c
  1704   002642  EF25  F013         	goto	u821
  1705   002646  EF27  F013         	goto	u820
  1706   00264A                     u821:
  1707   00264A  EF2B  F013         	goto	l1316
  1708   00264E                     u820:
  1709   00264E  5003               	movf	___awmod@divisor^0,w,c
  1710   002650  5E01               	subwf	___awmod@dividend^0,f,c
  1711   002652  5004               	movf	(___awmod@divisor+1)^0,w,c
  1712   002654  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1713   002656                     l1316:
  1714   002656  90D8               	bcf	status,0,c
  1715   002658  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1716   00265A  3203               	rrcf	___awmod@divisor^0,f,c
  1717   00265C  2E05               	decfsz	___awmod@counter^0,f,c
  1718   00265E  EF1C  F013         	goto	l1312
  1719   002662                     l1320:
  1720   002662  5006               	movf	___awmod@sign^0,w,c
  1721   002664  B4D8               	btfsc	status,2,c
  1722   002666  EF37  F013         	goto	u831
  1723   00266A  EF39  F013         	goto	u830
  1724   00266E                     u831:
  1725   00266E  EF3D  F013         	goto	l1324
  1726   002672                     u830:
  1727   002672  6C01               	negf	___awmod@dividend^0,c
  1728   002674  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1729   002676  B0D8               	btfsc	status,0,c
  1730   002678  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1731   00267A                     l1324:
  1732   00267A  C001  F001         	movff	___awmod@dividend,?___awmod
  1733   00267E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1734   002682  0012               	return		;funcret
  1735   002684                     __end_of___awmod:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function ___awdiv *****************
  1739 ;; Defined at:
  1740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  dividend        2    0[COMRAM] int 
  1743 ;;  divisor         2    2[COMRAM] int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  quotient        2    6[COMRAM] int 
  1746 ;;  sign            1    5[COMRAM] unsigned char 
  1747 ;;  counter         1    4[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    0[COMRAM] int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1758 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_PORT_Output
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text8
  1771   002510                     __ptext8:
  1772                           	callstack 0
  1773   002510                     ___awdiv:
  1774                           	callstack 29
  1775   002510  0E00               	movlw	0
  1776   002512  6E06               	movwf	___awdiv@sign^0,c
  1777   002514  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1778   002516  EF91  F012         	goto	u720
  1779   00251A  EF8F  F012         	goto	u721
  1780   00251E                     u721:
  1781   00251E  EF97  F012         	goto	l1256
  1782   002522                     u720:
  1783   002522  6C03               	negf	___awdiv@divisor^0,c
  1784   002524  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1785   002526  B0D8               	btfsc	status,0,c
  1786   002528  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1787   00252A  0E01               	movlw	1
  1788   00252C  6E06               	movwf	___awdiv@sign^0,c
  1789   00252E                     l1256:
  1790   00252E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1791   002530  EF9E  F012         	goto	u730
  1792   002534  EF9C  F012         	goto	u731
  1793   002538                     u731:
  1794   002538  EFA4  F012         	goto	l1262
  1795   00253C                     u730:
  1796   00253C  6C01               	negf	___awdiv@dividend^0,c
  1797   00253E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1798   002540  B0D8               	btfsc	status,0,c
  1799   002542  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1800   002544  0E01               	movlw	1
  1801   002546  1A06               	xorwf	___awdiv@sign^0,f,c
  1802   002548                     l1262:
  1803   002548  0E00               	movlw	0
  1804   00254A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1805   00254C  0E00               	movlw	0
  1806   00254E  6E07               	movwf	___awdiv@quotient^0,c
  1807   002550  5003               	movf	___awdiv@divisor^0,w,c
  1808   002552  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1809   002554  B4D8               	btfsc	status,2,c
  1810   002556  EFAF  F012         	goto	u741
  1811   00255A  EFB1  F012         	goto	u740
  1812   00255E                     u741:
  1813   00255E  EFD9  F012         	goto	l1284
  1814   002562                     u740:
  1815   002562  0E01               	movlw	1
  1816   002564  6E05               	movwf	___awdiv@counter^0,c
  1817   002566  EFB9  F012         	goto	l1270
  1818   00256A                     l1268:
  1819   00256A  90D8               	bcf	status,0,c
  1820   00256C  3603               	rlcf	___awdiv@divisor^0,f,c
  1821   00256E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1822   002570  2A05               	incf	___awdiv@counter^0,f,c
  1823   002572                     l1270:
  1824   002572  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1825   002574  EFBE  F012         	goto	u751
  1826   002578  EFC0  F012         	goto	u750
  1827   00257C                     u751:
  1828   00257C  EFB5  F012         	goto	l1268
  1829   002580                     u750:
  1830   002580                     l1272:
  1831   002580  90D8               	bcf	status,0,c
  1832   002582  3607               	rlcf	___awdiv@quotient^0,f,c
  1833   002584  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1834   002586  5003               	movf	___awdiv@divisor^0,w,c
  1835   002588  5C01               	subwf	___awdiv@dividend^0,w,c
  1836   00258A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1837   00258C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1838   00258E  A0D8               	btfss	status,0,c
  1839   002590  EFCC  F012         	goto	u761
  1840   002594  EFCE  F012         	goto	u760
  1841   002598                     u761:
  1842   002598  EFD3  F012         	goto	l1280
  1843   00259C                     u760:
  1844   00259C  5003               	movf	___awdiv@divisor^0,w,c
  1845   00259E  5E01               	subwf	___awdiv@dividend^0,f,c
  1846   0025A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1847   0025A2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1848   0025A4  8007               	bsf	___awdiv@quotient^0,0,c
  1849   0025A6                     l1280:
  1850   0025A6  90D8               	bcf	status,0,c
  1851   0025A8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1852   0025AA  3203               	rrcf	___awdiv@divisor^0,f,c
  1853   0025AC  2E05               	decfsz	___awdiv@counter^0,f,c
  1854   0025AE  EFC0  F012         	goto	l1272
  1855   0025B2                     l1284:
  1856   0025B2  5006               	movf	___awdiv@sign^0,w,c
  1857   0025B4  B4D8               	btfsc	status,2,c
  1858   0025B6  EFDF  F012         	goto	u771
  1859   0025BA  EFE1  F012         	goto	u770
  1860   0025BE                     u771:
  1861   0025BE  EFE5  F012         	goto	l1288
  1862   0025C2                     u770:
  1863   0025C2  6C07               	negf	___awdiv@quotient^0,c
  1864   0025C4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1865   0025C6  B0D8               	btfsc	status,0,c
  1866   0025C8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1867   0025CA                     l1288:
  1868   0025CA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1869   0025CE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1870   0025D2  0012               	return		;funcret
  1871   0025D4                     __end_of___awdiv:
  1872                           	callstack 0
  1873                           
  1874                           	psect	smallconst
  1875   002000                     __psmallconst:
  1876                           	callstack 0
  1877   002000  00                 	db	0
  1878   002001  00                 	db	0	; dummy byte at the end
  1879   000000                     
  1880                           	psect	rparam
  1881   000000                     
  1882                           	psect	config
  1883                           
  1884                           ;Config register CONFIG1L @ 0x300000
  1885                           ;	External Oscillator Selection
  1886                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1887                           ;	Reset Oscillator Selection
  1888                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1889   300000                     	org	3145728
  1890   300000  F8                 	db	248
  1891                           
  1892                           ;Config register CONFIG1H @ 0x300001
  1893                           ;	Clock out Enable bit
  1894                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1895                           ;	PRLOCKED One-Way Set Enable bit
  1896                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1897                           ;	Clock Switch Enable bit
  1898                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1899                           ;	Fail-Safe Clock Monitor Enable bit
  1900                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1901   300001                     	org	3145729
  1902   300001  FF                 	db	255
  1903                           
  1904                           ;Config register CONFIG2L @ 0x300002
  1905                           ;	MCLR Enable bit
  1906                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1907                           ;	Power-up timer selection bits
  1908                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1909                           ;	Multi-vector enable bit
  1910                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1911                           ;	IVTLOCK bit One-way set enable bit
  1912                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1913                           ;	Low Power BOR Enable bit
  1914                           ;	LPBOREN = OFF, ULPBOR disabled
  1915                           ;	Brown-out Reset Enable bits
  1916                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1917   300002                     	org	3145730
  1918   300002  FF                 	db	255
  1919                           
  1920                           ;Config register CONFIG2H @ 0x300003
  1921                           ;	Brown-out Reset Voltage Selection bits
  1922                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1923                           ;	ZCD Disable bit
  1924                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1925                           ;	PPSLOCK bit One-Way Set Enable bit
  1926                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1927                           ;	Stack Full/Underflow Reset Enable bit
  1928                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1929                           ;	Debugger Enable bit
  1930                           ;	DEBUG = OFF, Background debugger disabled
  1931                           ;	Extended Instruction Set Enable bit
  1932                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1933   300003                     	org	3145731
  1934   300003  FF                 	db	255
  1935                           
  1936                           ;Config register CONFIG3L @ 0x300004
  1937                           ;	WDT Period selection bits
  1938                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1939                           ;	WDT operating mode
  1940                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1941   300004                     	org	3145732
  1942   300004  9F                 	db	159
  1943                           
  1944                           ;Config register CONFIG3H @ 0x300005
  1945                           ;	WDT Window Select bits
  1946                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1947                           ;	WDT input clock selector
  1948                           ;	WDTCCS = SC, Software Control
  1949   300005                     	org	3145733
  1950   300005  FF                 	db	255
  1951                           
  1952                           ;Config register CONFIG4L @ 0x300006
  1953                           ;	Boot Block Size selection bits
  1954                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1955                           ;	Boot Block enable bit
  1956                           ;	BBEN = OFF, Boot block disabled
  1957                           ;	Storage Area Flash enable bit
  1958                           ;	SAFEN = OFF, SAF disabled
  1959                           ;	Application Block write protection bit
  1960                           ;	WRTAPP = OFF, Application Block not write protected
  1961   300006                     	org	3145734
  1962   300006  FF                 	db	255
  1963                           
  1964                           ;Config register CONFIG4H @ 0x300007
  1965                           ;	Boot Block Write Protection bit
  1966                           ;	WRTB = OFF, Boot Block not write-protected
  1967                           ;	Configuration Register Write Protection bit
  1968                           ;	WRTC = OFF, Configuration registers not write-protected
  1969                           ;	Data EEPROM Write Protection bit
  1970                           ;	WRTD = OFF, Data EEPROM not write-protected
  1971                           ;	SAF Write protection bit
  1972                           ;	WRTSAF = OFF, SAF not Write Protected
  1973                           ;	Low Voltage Programming Enable bit
  1974                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1975   300007                     	org	3145735
  1976   300007  FF                 	db	255
  1977                           
  1978                           ;Config register CONFIG5L @ 0x300008
  1979                           ;	PFM and Data EEPROM Code Protection bit
  1980                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1981   300008                     	org	3145736
  1982   300008  FF                 	db	255
  1983                           
  1984                           ;Config register CONFIG5H @ 0x300009
  1985                           ;	unspecified, using default values
  1986   300009                     	org	3145737
  1987   300009  FF                 	db	255
  1988                           tosu	equ	0x3FFF
  1989                           tosh	equ	0x3FFE
  1990                           tosl	equ	0x3FFD
  1991                           stkptr	equ	0x3FFC
  1992                           pclatu	equ	0x3FFB
  1993                           pclath	equ	0x3FFA
  1994                           pcl	equ	0x3FF9
  1995                           tblptru	equ	0x3FF8
  1996                           tblptrh	equ	0x3FF7
  1997                           tblptrl	equ	0x3FF6
  1998                           tablat	equ	0x3FF5
  1999                           prodh	equ	0x3FF4
  2000                           prodl	equ	0x3FF3
  2001                           indf0	equ	0x3FEF
  2002                           postinc0	equ	0x3FEE
  2003                           postdec0	equ	0x3FED
  2004                           preinc0	equ	0x3FEC
  2005                           plusw0	equ	0x3FEB
  2006                           fsr0h	equ	0x3FEA
  2007                           fsr0l	equ	0x3FE9
  2008                           wreg	equ	0x3FE8
  2009                           indf1	equ	0x3FE7
  2010                           postinc1	equ	0x3FE6
  2011                           postdec1	equ	0x3FE5
  2012                           preinc1	equ	0x3FE4
  2013                           plusw1	equ	0x3FE3
  2014                           fsr1h	equ	0x3FE2
  2015                           fsr1l	equ	0x3FE1
  2016                           bsr	equ	0x3FE0
  2017                           indf2	equ	0x3FDF
  2018                           postinc2	equ	0x3FDE
  2019                           postdec2	equ	0x3FDD
  2020                           preinc2	equ	0x3FDC
  2021                           plusw2	equ	0x3FDB
  2022                           fsr2h	equ	0x3FDA
  2023                           fsr2l	equ	0x3FD9
  2024                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2765
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                         10     8      2    1979
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
     ___wmul
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      17       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      17      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 23:09:12 2024

           PORT_Output@i 000D                       l60 231C                       l53 2726  
                     l73 241A                       l85 250E                       l95 2700  
                     l88 26D6                       l89 268C                       l98 279A  
                     l99 27B2          ?_scan_operation 0001             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l102 27F6                      l121 2184  
                    l107 2184                      l140 2284                      l150 22B4  
                    l151 2304                      l152 230A                      l146 229C  
                    l155 287C                      l147 2288                      l561 2852  
                    l386 25D2                      l399 2682                      l940 230C  
                    l950 2350                      l942 232C                      l960 236A  
                    l952 2354                      l944 2330                      l970 239C  
                    l962 2378                      l954 2356                      l946 233E  
                    l980 23B6                      l972 23A0                      l964 237C  
                    l956 2358                      l948 2342                      l982 23C4  
                    l974 23A2                      l966 238A                      l958 2366  
                    l990 23DC                      l992 23EE                      l984 23C8  
                    l976 23A4                      l968 238E                      l994 2406  
                    l986 23D6                      l978 23B2                      l996 240E  
                    l988 23DA                      l998 2412                      u200 2378  
                    u201 2374                      u210 238A                      u211 2386  
                    u300 2464                      u220 239C                      u301 2460  
                    u221 2398                      u310 2476                      u230 23B2  
                    u311 2472                      u231 23AE                      u320 2488  
                    u240 23C4                      u160 232C                      u400 26C0  
                    u321 2484                      u241 23C0                      u161 2328  
                    u401 26BC                      u330 249A                      u250 23D6  
                    u170 233E                      u410 26D2                      u331 2496  
                    u251 23D2                      u171 233A                      u411 26CE  
                    u340 24B0                      u260 23EE                      u180 2350  
                    u420 26E6                      u341 24AC                      u261 23EA  
                    u181 234C                      u421 26E2                      u350 24C2  
                    u270 242A                      u190 2366                      u351 24BE  
                    u271 2426                      u191 2362                      u360 24D4  
                    u280 243C                      u361 24D0                      u281 2438  
                    u370 24F0                      u290 244E                      u371 24EC  
                    u291 244A                      u380 269C                      u381 2698  
                    u390 26AE                      u391 26AA                      u720 2522  
                    u800 261A                      u721 251E                      u801 2616  
                    u730 253C                      u810 2638                      u731 2538  
                    u811 2634                      u740 2562                      u820 264E  
                    u900 27E0                      u741 255E                      u821 264A  
                    u901 27DC                      u750 2580                      u830 2672  
                    u910 2028                      u751 257C                      u831 266E  
                    u911 2024                      u760 259C                      u920 2084  
                    u840 280E                      u761 2598                      u921 2080  
                    u841 280A                      u770 25C2                      u930 209C  
                    u850 282A                      u771 25BE                      u931 2098  
                    u851 2826                      u780 25E6                      u940 20AC  
                    u860 2840                      u781 25E2                      u941 20A8  
                    u861 283C                      u790 2600                      u950 20C6  
                    u870 2794                      u791 25FC                      u951 20C2  
                    u871 2790                      u960 20E0                      u880 27AC  
                    u961 20DC                      u881 27A8                      u970 20FA  
                    u890 27C4                      u971 20F6                      u891 27C0  
                    u980 2114                      u981 2110                      u990 212E  
                    u991 212A             ___awmod@sign 0006                      wreg 3FE8  
                   l1000 242A                     l1010 2452                     l1002 242E  
                   l1020 2476                     l1012 2454                     l1004 243C  
                   l1030 249E                     l1022 247A                     l1014 2456  
                   l1006 2440                     l1040 24C2                     l1032 24A0  
                   l1024 2488                     l1016 2464                     l1008 244E  
                   l1050 24F0                     l1042 24C6                     l1034 24A2  
                   l1026 248C                     l1018 2468                     l1300 25F2  
                   l1052 24F4                     l1044 24D4                     l1036 24B0  
                   l1028 249A                     l1060 269C                     l1310 262A  
                   l1302 2600                     l1054 250C                     l1046 24D8  
                   l1038 24B4                     l1070 26C4                     l1062 26A0  
                   l1312 2638                     l1320 2662                     l1304 2608  
                   l1400 20E0                     l1048 24DE                     l1072 26D2  
                   l1064 26AE                     l1250 2514                     l1322 2672  
                   l1314 264E                     l1306 261A                     l1242 2854  
                   l1410 211C                     l1402 20E8                     l1330 27FE  
                   l1074 26E6                     l1066 26B2                     l1058 2684  
                   l1260 2544                     l1252 2522                     l1324 267A  
                   l1316 2656                     l1308 2622                     l1244 2874  
                   l1420 2162                     l1412 212E                     l1404 20FA  
                   l1340 282A                     l1332 280E                     l1076 26FE  
                   l1068 26C0                     l1500 2742                     l1270 2572  
                   l1262 2548                     l1254 252A                     l1318 265C  
                   l1430 21AC                     l1422 216A                     l1414 2136  
                   l1406 2102                     l1342 2840                     l1334 2816  
                   l1350 2850                     l1510 2754                     l1502 2744  
                   l1280 25A6                     l1272 2580                     l1264 2550  
                   l1256 252E                     l1248 2510                     l1440 21E8  
                   l1432 21B4                     l1424 217C                     l1416 2148  
                   l1408 2114                     l1344 2844                     l1336 281A  
                   l1328 27FA                     l1360 27AC                     l1512 2756  
                   l1504 274A                     l1282 25AC                     l1274 2586  
                   l1266 2562                     l1258 253C                     l1450 222E  
                   l1442 21FA                     l1434 21C6                     l1426 2194  
                   l1418 2150                     l1346 2846                     l1338 281C  
                   l1362 27C4                     l1354 2780                     l1514 2768  
                   l1506 2750                     l1276 259C                     l1268 256A  
                   l1284 25B2                     l1292 25D4                     l1460 226A  
                   l1452 2236                     l1444 2202                     l1436 21CE  
                   l1428 219C                     l1380 2044                     l1372 2002  
                   l1348 284A                     l1364 27CE                     l1356 2784  
                   l1508 2752                     l1286 25C2                     l1278 25A4  
                   l1294 25D8                     l1462 227C                     l1454 2248  
                   l1446 2214                     l1438 21E0                     l1390 209C  
                   l1382 205C                     l1374 201A                     l1366 27E0  
                   l1358 2794                     l1288 25CA                     l1296 25E6  
                   l1480 22E2                     l1472 22BC                     l1464 2298  
                   l1456 2250                     l1448 221C                     l1392 20AC  
                   l1384 2074                     l1376 2028                     l1368 27EC  
                   l1298 25EE                     l1482 22E4                     l1474 22CA  
                   l1466 22AC                     l1458 2262                     l1394 20B4  
                   l1386 2084                     l1378 2042                     l1490 2704  
                   l1484 2306                     l1476 22CC                     l1396 20C6  
                   l1388 208C                     l1492 2722                     l1478 22CE  
                   l1398 20CE                     l1494 2724                     l1496 273A  
                   l1488 2702                     l1498 2740                     u1000 2148  
                   u1001 2144                     u1010 2162                     u1011 215E  
                   u1100 2248                     u1020 217C                     u1101 2244  
                   u1021 2178                     u1110 2262                     u1030 2194  
                   u1111 225E                     u1031 2190                     u1120 227C  
                   u1040 21AC                     u1121 2278                     u1041 21A8  
                   u1130 2298                     u1050 21C6                     u1131 2294  
                   u1051 21C2                     u1140 22AC                     u1060 21E0  
                   u1141 22A8                     u1061 21DC                     u1150 2304  
                   u1070 21FA                     u1151 2300                     u1207 22DA  
                   u1071 21F6                     u1080 2214                     u1081 2210  
                   u1090 222E                     u1091 222A                     u1167 26F0  
                   u1177 23F8                     u1187 24FE                     u1197 22C2  
       PORT_Output@enter 000C                     _main 2702                     prodh 3FF4  
                   prodl 3FF3                     start FFFC             ___param_bank 0000  
                  ?_main 0001          __end_of___awdiv 25D4          __end_of___lbdiv 2854  
        __end_of___awmod 2684          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTB 3FCB                    _PORTC 3FCC                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISC 3FC4  
                  _TRISD 3FC5        PORT_Output@answer 0009                    status 3FD8  
        ___lbdiv@divisor 0001          ___lbdiv@counter 0003             ?_scan_number 0001  
        __initialization 287E             __end_of_main 277E                   ??_main 0013  
          __activetblptr 0000         ___awdiv@dividend 0001                   _ANSELA 3A40  
                 _ANSELB 3A50                   _ANSELC 3A60                   _ANSELD 3A70  
                 ___wmul 2854                ??___awdiv 0005                ??___lbdiv 0002  
              ??___awmod 0005         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005             __mediumconst 0000  
           ?_PORT_Output 0009         ___lbdiv@dividend 0002               __accesstop 0060  
__end_of__initialization 287E            ___rparam_used 0001         ??_scan_operation 0001  
         __pcstackCOMRAM 0001         scan_number@count 0004         scan_number@input 0006  
       ___lbdiv@quotient 0004              _X_Input_REG 0017              _Y_Input_REG 0016  
             __pnvCOMRAM 0013                  ?___wmul 0001        __end_of_calculate 27F8  
    PORT_Output@display1 000F      PORT_Output@display2 0010                  __Hparam 0000  
             calculate@x 0008               calculate@y 0005                  __Lparam 0000  
                ___awdiv 2510                  ___lbdiv 27F8                  ___awmod 25D4  
           __psmallconst 2000                  __pcinit 287E                  __ramtop 2000  
                __ptext0 2702                  __ptext1 2684                  __ptext2 230C  
                __ptext3 277E                  __ptext4 27F8                  __ptext5 2002  
                __ptext6 2854                  __ptext7 25D4                  __ptext8 2510  
       ___awmod@dividend 0001     end_of_initialization 287E                _PORTAbits 3FCA  
              _PORTBbits 3FCB                _PORTCbits 3FCC           __end_of___wmul 287E  
          _Operation_REG 0015        scan_number@button 0003      start_initialization 287E  
      scan_number@output 0005                 ??___wmul 0005              _calculation 0014  
  PORT_Output@second_dig 0011                _calculate 277E            ??_scan_number 0001  
               ?___awdiv 0001                 ?___lbdiv 0001                 ?___awmod 0001  
            __smallconst 2000           ___wmul@product 0005               ?_calculate 0005  
        calculate@output 0007      __end_of_scan_number 2510        ___wmul@multiplier 0001  
          ??_PORT_Output 000B     PORT_Output@first_dig 0012              calculate@op 0006  
               __Hrparam 0000                 __Lrparam 0000      __end_of_PORT_Output 230C  
            ??_calculate 0007              _scan_number 230C                 isa$xinst 0000  
         _scan_operation 2684       _Display_Result_REG 0013     scan_operation@op_key 0003  
 __end_of_scan_operation 2702              _PORT_Output 2002  
