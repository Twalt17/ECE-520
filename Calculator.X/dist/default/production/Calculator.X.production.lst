

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 16:48:01 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _PORTC	set	16332
    56   000000                     _TRISC	set	16324
    57   000000                     _TRISD	set	16325
    58   000000                     _TRISB	set	16323
    59                           
    60                           	psect	nvCOMRAM
    61   000011                     __pnvCOMRAM:
    62                           	callstack 0
    63   000011                     _Display_Result_REG:
    64                           	callstack 0
    65   000011                     	ds	1
    66   000012                     _calculation:
    67                           	callstack 0
    68   000012                     	ds	1
    69   000013                     _Operation_REG:
    70                           	callstack 0
    71   000013                     	ds	1
    72   000014                     _Y_Input_REG:
    73                           	callstack 0
    74   000014                     	ds	1
    75   000015                     _X_Input_REG:
    76                           	callstack 0
    77   000015                     	ds	1
    78   000000                     _PORTB	set	16331
    79   000000                     _PORTCbits	set	16332
    80   000000                     _ANSELA	set	14912
    81   000000                     _TRISA	set	16322
    82   000000                     _ANSELB	set	14928
    83   000000                     _ANSELC	set	14944
    84   000000                     _ANSELD	set	14960
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _PORTD	set	16333
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   002784                     __pcinit:
    93                           	callstack 0
    94   002784                     start_initialization:
    95                           	callstack 0
    96   002784                     __initialization:
    97                           	callstack 0
    98   002784                     end_of_initialization:
    99                           	callstack 0
   100   002784                     __end_of__initialization:
   101                           	callstack 0
   102   002784  0100               	movlb	0
   103   002786  EF5D  F013         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	cstackCOMRAM
   106   000001                     __pcstackCOMRAM:
   107                           	callstack 0
   108   000001                     ??_scan_number:
   109   000001                     ??_scan_operation:
   110   000001                     ?___awdiv:
   111                           	callstack 0
   112   000001                     ?___awmod:
   113                           	callstack 0
   114   000001                     ___lbdiv@divisor:
   115                           	callstack 0
   116   000001                     ___awdiv@dividend:
   117                           	callstack 0
   118   000001                     ___awmod@dividend:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x0
   122   000001                     	ds	1
   123   000002                     ___lbdiv@dividend:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x1
   127   000002                     	ds	1
   128   000003                     scan_number@button:
   129                           	callstack 0
   130   000003                     scan_operation@op_key:
   131                           	callstack 0
   132   000003                     ___lbdiv@counter:
   133                           	callstack 0
   134   000003                     ___awdiv@divisor:
   135                           	callstack 0
   136   000003                     ___awmod@divisor:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140   000003                     	ds	1
   141   000004                     scan_number@count:
   142                           	callstack 0
   143   000004                     ___lbdiv@quotient:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x3
   147   000004                     	ds	1
   148   000005                     scan_number@output:
   149                           	callstack 0
   150   000005                     calculate@y:
   151                           	callstack 0
   152   000005                     ___awdiv@counter:
   153                           	callstack 0
   154   000005                     ___awmod@counter:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x4
   158   000005                     	ds	1
   159   000006                     scan_number@input:
   160                           	callstack 0
   161   000006                     calculate@op:
   162                           	callstack 0
   163   000006                     ___awdiv@sign:
   164                           	callstack 0
   165   000006                     ___awmod@sign:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x5
   169   000006                     	ds	1
   170   000007                     calculate@output:
   171                           	callstack 0
   172   000007                     ___awdiv@quotient:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x6
   176   000007                     	ds	1
   177   000008                     calculate@x:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x7
   181   000008                     	ds	1
   182   000009                     ??_PORT_Output:
   183                           
   184                           ; 1 bytes @ 0x8
   185   000009                     	ds	2
   186   00000B                     PORT_Output@i:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0xA
   190   00000B                     	ds	1
   191   00000C                     PORT_Output@answer:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xB
   195   00000C                     	ds	1
   196   00000D                     PORT_Output@display1:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0xC
   200   00000D                     	ds	1
   201   00000E                     PORT_Output@display2:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0xD
   205   00000E                     	ds	1
   206   00000F                     PORT_Output@first_dig:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0xE
   210   00000F                     	ds	1
   211   000010                     PORT_Output@second_dig:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0xF
   215   000010                     	ds	1
   216   000011                     
   217                           ; 1 bytes @ 0x10
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 26 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 2
   243 ;; This function calls:
   244 ;;		_PORT_Output
   245 ;;		_calculate
   246 ;;		_scan_number
   247 ;;		_scan_operation
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text0
   254   0026BA                     __ptext0:
   255                           	callstack 0
   256   0026BA                     _main:
   257                           	callstack 29
   258   0026BA                     
   259                           ;main.c: 27:     TRISA = 0xFF;
   260   0026BA  68C2               	setf	194,c	;volatile
   261   0026BC                     
   262                           ;main.c: 28:     ANSELA = 0;
   263   0026BC  0E00               	movlw	0
   264   0026BE  013A               	movlb	58	; () banked
   265   0026C0  6F40               	movwf	64,b	;volatile
   266                           
   267                           ;main.c: 29:     TRISB = 0;
   268   0026C2  0E00               	movlw	0
   269   0026C4  6EC3               	movwf	195,c	;volatile
   270                           
   271                           ;main.c: 30:     ANSELB = 0;
   272   0026C6  0E00               	movlw	0
   273   0026C8  6F50               	movwf	80,b	;volatile
   274                           
   275                           ;main.c: 31:     ANSELD = 0;
   276   0026CA  0E00               	movlw	0
   277   0026CC  6F70               	movwf	112,b	;volatile
   278                           
   279                           ;main.c: 32:     TRISD = 0;
   280   0026CE  0E00               	movlw	0
   281   0026D0  6EC5               	movwf	197,c	;volatile
   282                           
   283                           ;main.c: 33:     TRISC = 0;
   284   0026D2  0E00               	movlw	0
   285   0026D4  6EC4               	movwf	196,c	;volatile
   286                           
   287                           ;main.c: 34:     ANSELC = 0;
   288   0026D6  0E00               	movlw	0
   289   0026D8  6F60               	movwf	96,b	;volatile
   290   0026DA                     
   291                           ; BSR set to: 58
   292                           ;main.c: 35:     PORTD = 0xFF;
   293   0026DA  68CD               	setf	205,c	;volatile
   294                           
   295                           ;main.c: 36:     PORTD = 0;
   296   0026DC  0E00               	movlw	0
   297   0026DE  6ECD               	movwf	205,c	;volatile
   298   0026E0                     
   299                           ; BSR set to: 58
   300                           ;main.c: 37:     PORTBbits.RB5 = 1;
   301   0026E0  8ACB               	bsf	203,5,c	;volatile
   302   0026E2                     
   303                           ; BSR set to: 58
   304                           ;main.c: 38:     PORTC = 0xFF;
   305   0026E2  68CC               	setf	204,c	;volatile
   306   0026E4                     l53:
   307                           
   308                           ;main.c: 40:     X_Input_REG = 0;
   309   0026E4  0E00               	movlw	0
   310   0026E6  6E15               	movwf	_X_Input_REG^0,c
   311                           
   312                           ;main.c: 41:     Y_Input_REG = 0;
   313   0026E8  0E00               	movlw	0
   314   0026EA  6E14               	movwf	_Y_Input_REG^0,c
   315                           
   316                           ;main.c: 42:     Operation_REG = 0;
   317   0026EC  0E00               	movlw	0
   318   0026EE  6E13               	movwf	_Operation_REG^0,c
   319                           
   320                           ;main.c: 43:     calculation = 0;
   321   0026F0  0E00               	movlw	0
   322   0026F2  6E12               	movwf	_calculation^0,c
   323                           
   324                           ;main.c: 44:     Display_Result_REG = 0;
   325   0026F4  0E00               	movlw	0
   326   0026F6  6E11               	movwf	_Display_Result_REG^0,c
   327   0026F8                     
   328                           ;main.c: 46:     X_Input_REG = scan_number();
   329   0026F8  EC2B  F011         	call	_scan_number	;wreg free
   330   0026FC  6E15               	movwf	_X_Input_REG^0,c
   331   0026FE                     
   332                           ;main.c: 47:     Operation_REG = scan_operation();
   333   0026FE  ECE5  F012         	call	_scan_operation	;wreg free
   334   002702  6E13               	movwf	_Operation_REG^0,c
   335   002704                     
   336                           ;main.c: 48:     Y_Input_REG = scan_number();
   337   002704  EC2B  F011         	call	_scan_number	;wreg free
   338   002708  6E14               	movwf	_Y_Input_REG^0,c
   339   00270A                     
   340                           ;main.c: 49:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   341   00270A  C014  F005         	movff	_Y_Input_REG,calculate@y
   342   00270E  C013  F006         	movff	_Operation_REG,calculate@op
   343   002712  5015               	movf	_X_Input_REG^0,w,c
   344   002714  EC24  F013         	call	_calculate
   345   002718  6E12               	movwf	_calculation^0,c
   346   00271A                     
   347                           ;main.c: 50:     PORT_Output(calculation);
   348   00271A  5012               	movf	_calculation^0,w,c
   349   00271C  EC01  F010         	call	_PORT_Output
   350   002720  EF72  F013         	goto	l53
   351   002724  EFFE  F0FF         	goto	start
   352   002728                     __end_of_main:
   353                           	callstack 0
   354                           
   355 ;; *************** function _scan_operation *****************
   356 ;; Defined at:
   357 ;;		line 115 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  op_key          1    2[COMRAM] unsigned char 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      unsigned char 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   374 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   375 ;;Total ram usage:        3 bytes
   376 ;; Hardware stack levels used: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text1
   385   0025CA                     __ptext1:
   386                           	callstack 0
   387   0025CA                     _scan_operation:
   388                           	callstack 30
   389   0025CA                     
   390                           ;main.c: 116:     unsigned char op_key = 0;
   391   0025CA  0E00               	movlw	0
   392   0025CC  6E03               	movwf	scan_operation@op_key^0,c
   393                           
   394                           ;main.c: 117:     while (op_key ==0) {
   395   0025CE  EF0E  F013         	goto	l88
   396   0025D2                     l89:
   397                           
   398                           ;main.c: 118:      PORTBbits.RB0 = 1;
   399   0025D2  80CB               	bsf	203,0,c	;volatile
   400                           
   401                           ;main.c: 119:         if(PORTAbits.RA0 == 1) op_key = 1;
   402   0025D4  A0CA               	btfss	202,0,c	;volatile
   403   0025D6  EFEF  F012         	goto	u381
   404   0025DA  EFF1  F012         	goto	u380
   405   0025DE                     u381:
   406   0025DE  EFF3  F012         	goto	l1035
   407   0025E2                     u380:
   408   0025E2  0E01               	movlw	1
   409   0025E4  6E03               	movwf	scan_operation@op_key^0,c
   410   0025E6                     l1035:
   411                           
   412                           ;main.c: 120:         if(PORTAbits.RA1 == 1) op_key = 2;
   413   0025E6  A2CA               	btfss	202,1,c	;volatile
   414   0025E8  EFF8  F012         	goto	u391
   415   0025EC  EFFA  F012         	goto	u390
   416   0025F0                     u391:
   417   0025F0  EFFC  F012         	goto	l1039
   418   0025F4                     u390:
   419   0025F4  0E02               	movlw	2
   420   0025F6  6E03               	movwf	scan_operation@op_key^0,c
   421   0025F8                     l1039:
   422                           
   423                           ;main.c: 121:         if(PORTAbits.RA2 == 1) op_key = 3;
   424   0025F8  A4CA               	btfss	202,2,c	;volatile
   425   0025FA  EF01  F013         	goto	u401
   426   0025FE  EF03  F013         	goto	u400
   427   002602                     u401:
   428   002602  EF05  F013         	goto	l1043
   429   002606                     u400:
   430   002606  0E03               	movlw	3
   431   002608  6E03               	movwf	scan_operation@op_key^0,c
   432   00260A                     l1043:
   433                           
   434                           ;main.c: 122:         if(PORTAbits.RA3 == 1) op_key = 4;
   435   00260A  A6CA               	btfss	202,3,c	;volatile
   436   00260C  EF0A  F013         	goto	u411
   437   002610  EF0C  F013         	goto	u410
   438   002614                     u411:
   439   002614  EF0E  F013         	goto	l88
   440   002618                     u410:
   441   002618  0E04               	movlw	4
   442   00261A  6E03               	movwf	scan_operation@op_key^0,c
   443   00261C                     l88:
   444                           
   445                           ;main.c: 117:     while (op_key ==0) {
   446   00261C  5003               	movf	scan_operation@op_key^0,w,c
   447   00261E  B4D8               	btfsc	status,2,c
   448   002620  EF14  F013         	goto	u421
   449   002624  EF16  F013         	goto	u420
   450   002628                     u421:
   451   002628  EFE9  F012         	goto	l89
   452   00262C                     u420:
   453   00262C                     
   454                           ;main.c: 124:         _delay((unsigned long)((200)*(8000000/4000.0)));
   455   00262C  0E03               	movlw	3
   456   00262E  6E02               	movwf	(??_scan_operation+1)^0,c
   457   002630  0E08               	movlw	8
   458   002632  6E01               	movwf	??_scan_operation^0,c
   459   002634  0E77               	movlw	119
   460   002636                     u1087:
   461   002636  2EE8               	decfsz	wreg,f,c
   462   002638  D7FE               	bra	u1087
   463   00263A  2E01               	decfsz	??_scan_operation^0,f,c
   464   00263C  D7FC               	bra	u1087
   465   00263E  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   466   002640  D7FA               	bra	u1087
   467   002642  0000               	nop	
   468   002644                     
   469                           ;main.c: 125:         return op_key;
   470   002644  5003               	movf	scan_operation@op_key^0,w,c
   471   002646  0012               	return		;funcret
   472   002648                     __end_of_scan_operation:
   473                           	callstack 0
   474                           
   475 ;; *************** function _scan_number *****************
   476 ;; Defined at:
   477 ;;		line 55 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  input           1    5[COMRAM] unsigned char 
   482 ;;  output          1    4[COMRAM] unsigned char 
   483 ;;  count           1    3[COMRAM] unsigned char 
   484 ;;  button          1    2[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      unsigned char 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, prodl, prodh
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   498 ;;Total ram usage:        6 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508   002256                     __ptext2:
   509                           	callstack 0
   510   002256                     _scan_number:
   511                           	callstack 30
   512   002256                     
   513                           ;main.c: 56:     unsigned char input = 10;
   514   002256  0E0A               	movlw	10
   515   002258  6E06               	movwf	scan_number@input^0,c
   516                           
   517                           ;main.c: 58:     unsigned char button = 0;
   518   00225A  0E00               	movlw	0
   519   00225C  6E03               	movwf	scan_number@button^0,c
   520                           
   521                           ;main.c: 59:     unsigned char count = 2;
   522   00225E  0E02               	movlw	2
   523   002260  6E04               	movwf	scan_number@count^0,c
   524                           
   525                           ;main.c: 61:     while (input == 10)
   526   002262  EF93  F011         	goto	l963
   527   002266                     l60:
   528                           
   529                           ;main.c: 62:     {;main.c: 63:         PORTBbits.RB0 = 1;
   530   002266  80CB               	bsf	203,0,c	;volatile
   531                           
   532                           ;main.c: 64:         if (PORTAbits.RA0 == 1)input = 1;
   533   002268  A0CA               	btfss	202,0,c	;volatile
   534   00226A  EF39  F011         	goto	u161
   535   00226E  EF3B  F011         	goto	u160
   536   002272                     u161:
   537   002272  EF3D  F011         	goto	l917
   538   002276                     u160:
   539   002276  0E01               	movlw	1
   540   002278  6E06               	movwf	scan_number@input^0,c
   541   00227A                     l917:
   542                           
   543                           ;main.c: 65:         if(PORTAbits.RA1 == 1) input = 4;
   544   00227A  A2CA               	btfss	202,1,c	;volatile
   545   00227C  EF42  F011         	goto	u171
   546   002280  EF44  F011         	goto	u170
   547   002284                     u171:
   548   002284  EF46  F011         	goto	l921
   549   002288                     u170:
   550   002288  0E04               	movlw	4
   551   00228A  6E06               	movwf	scan_number@input^0,c
   552   00228C                     l921:
   553                           
   554                           ;main.c: 66:         if(PORTAbits.RA2 == 1) input = 7;
   555   00228C  A4CA               	btfss	202,2,c	;volatile
   556   00228E  EF4B  F011         	goto	u181
   557   002292  EF4D  F011         	goto	u180
   558   002296                     u181:
   559   002296  EF4F  F011         	goto	l925
   560   00229A                     u180:
   561   00229A  0E07               	movlw	7
   562   00229C  6E06               	movwf	scan_number@input^0,c
   563   00229E                     l925:
   564                           
   565                           ;main.c: 67:         PORTBbits.RB0 = 0;
   566   00229E  90CB               	bcf	203,0,c	;volatile
   567   0022A0                     
   568                           ;main.c: 69:          PORTBbits.RB1 = 1;
   569   0022A0  82CB               	bsf	203,1,c	;volatile
   570   0022A2                     
   571                           ;main.c: 70:         if (PORTAbits.RA0 == 1)input = 2;
   572   0022A2  A0CA               	btfss	202,0,c	;volatile
   573   0022A4  EF56  F011         	goto	u191
   574   0022A8  EF58  F011         	goto	u190
   575   0022AC                     u191:
   576   0022AC  EF5A  F011         	goto	l933
   577   0022B0                     u190:
   578   0022B0  0E02               	movlw	2
   579   0022B2  6E06               	movwf	scan_number@input^0,c
   580   0022B4                     l933:
   581                           
   582                           ;main.c: 71:         if(PORTAbits.RA1 == 1) input = 5;
   583   0022B4  A2CA               	btfss	202,1,c	;volatile
   584   0022B6  EF5F  F011         	goto	u201
   585   0022BA  EF61  F011         	goto	u200
   586   0022BE                     u201:
   587   0022BE  EF63  F011         	goto	l937
   588   0022C2                     u200:
   589   0022C2  0E05               	movlw	5
   590   0022C4  6E06               	movwf	scan_number@input^0,c
   591   0022C6                     l937:
   592                           
   593                           ;main.c: 72:         if(PORTAbits.RA2 == 1) input = 8;
   594   0022C6  A4CA               	btfss	202,2,c	;volatile
   595   0022C8  EF68  F011         	goto	u211
   596   0022CC  EF6A  F011         	goto	u210
   597   0022D0                     u211:
   598   0022D0  EF6C  F011         	goto	l941
   599   0022D4                     u210:
   600   0022D4  0E08               	movlw	8
   601   0022D6  6E06               	movwf	scan_number@input^0,c
   602   0022D8                     l941:
   603                           
   604                           ;main.c: 73:         if(PORTAbits.RA3 == 1) input = 0;
   605   0022D8  A6CA               	btfss	202,3,c	;volatile
   606   0022DA  EF71  F011         	goto	u221
   607   0022DE  EF73  F011         	goto	u220
   608   0022E2                     u221:
   609   0022E2  EF75  F011         	goto	l945
   610   0022E6                     u220:
   611   0022E6  0E00               	movlw	0
   612   0022E8  6E06               	movwf	scan_number@input^0,c
   613   0022EA                     l945:
   614                           
   615                           ;main.c: 74:         PORTBbits.RB1 = 0;
   616   0022EA  92CB               	bcf	203,1,c	;volatile
   617   0022EC                     
   618                           ;main.c: 76:          PORTBbits.RB2 = 1;
   619   0022EC  84CB               	bsf	203,2,c	;volatile
   620   0022EE                     
   621                           ;main.c: 77:         if (PORTAbits.RA0 == 1)input = 3;
   622   0022EE  A0CA               	btfss	202,0,c	;volatile
   623   0022F0  EF7C  F011         	goto	u231
   624   0022F4  EF7E  F011         	goto	u230
   625   0022F8                     u231:
   626   0022F8  EF80  F011         	goto	l953
   627   0022FC                     u230:
   628   0022FC  0E03               	movlw	3
   629   0022FE  6E06               	movwf	scan_number@input^0,c
   630   002300                     l953:
   631                           
   632                           ;main.c: 78:         if(PORTAbits.RA1 == 1) input = 6;
   633   002300  A2CA               	btfss	202,1,c	;volatile
   634   002302  EF85  F011         	goto	u241
   635   002306  EF87  F011         	goto	u240
   636   00230A                     u241:
   637   00230A  EF89  F011         	goto	l957
   638   00230E                     u240:
   639   00230E  0E06               	movlw	6
   640   002310  6E06               	movwf	scan_number@input^0,c
   641   002312                     l957:
   642                           
   643                           ;main.c: 79:         if(PORTAbits.RA2 == 1) input = 9;
   644   002312  A4CA               	btfss	202,2,c	;volatile
   645   002314  EF8E  F011         	goto	u251
   646   002318  EF90  F011         	goto	u250
   647   00231C                     u251:
   648   00231C  EF92  F011         	goto	l961
   649   002320                     u250:
   650   002320  0E09               	movlw	9
   651   002322  6E06               	movwf	scan_number@input^0,c
   652   002324                     l961:
   653                           
   654                           ;main.c: 80:         PORTBbits.RB2 = 0;
   655   002324  94CB               	bcf	203,2,c	;volatile
   656   002326                     l963:
   657                           
   658                           ;main.c: 61:     while (input == 10)
   659   002326  0E0A               	movlw	10
   660   002328  1806               	xorwf	scan_number@input^0,w,c
   661   00232A  B4D8               	btfsc	status,2,c
   662   00232C  EF9A  F011         	goto	u261
   663   002330  EF9C  F011         	goto	u260
   664   002334                     u261:
   665   002334  EF33  F011         	goto	l60
   666   002338                     u260:
   667   002338                     
   668                           ;main.c: 83:     _delay((unsigned long)((200)*(8000000/4000.0)));
   669   002338  0E03               	movlw	3
   670   00233A  6E02               	movwf	(??_scan_number+1)^0,c
   671   00233C  0E08               	movlw	8
   672   00233E  6E01               	movwf	??_scan_number^0,c
   673   002340  0E77               	movlw	119
   674   002342                     u1097:
   675   002342  2EE8               	decfsz	wreg,f,c
   676   002344  D7FE               	bra	u1097
   677   002346  2E01               	decfsz	??_scan_number^0,f,c
   678   002348  D7FC               	bra	u1097
   679   00234A  2E02               	decfsz	(??_scan_number+1)^0,f,c
   680   00234C  D7FA               	bra	u1097
   681   00234E  0000               	nop	
   682   002350                     
   683                           ;main.c: 85:     input *=10;
   684   002350  0E0A               	movlw	10
   685   002352  0206               	mulwf	scan_number@input^0,c
   686   002354  50F3               	movf	prodl,w,c
   687   002356  6E06               	movwf	scan_number@input^0,c
   688   002358                     
   689                           ;main.c: 86:     output = input;
   690   002358  C006  F005         	movff	scan_number@input,scan_number@output
   691   00235C                     
   692                           ;main.c: 88:     input = 10;
   693   00235C  0E0A               	movlw	10
   694   00235E  6E06               	movwf	scan_number@input^0,c
   695                           
   696                           ;main.c: 89:     while (input == 10)
   697   002360  EF12  F012         	goto	l1021
   698   002364                     l73:
   699                           
   700                           ;main.c: 90:     {;main.c: 91:         PORTBbits.RB0 = 1;
   701   002364  80CB               	bsf	203,0,c	;volatile
   702                           
   703                           ;main.c: 92:         if (PORTAbits.RA0 == 1)input = 1;
   704   002366  A0CA               	btfss	202,0,c	;volatile
   705   002368  EFB8  F011         	goto	u271
   706   00236C  EFBA  F011         	goto	u270
   707   002370                     u271:
   708   002370  EFBC  F011         	goto	l975
   709   002374                     u270:
   710   002374  0E01               	movlw	1
   711   002376  6E06               	movwf	scan_number@input^0,c
   712   002378                     l975:
   713                           
   714                           ;main.c: 93:         if(PORTAbits.RA1 == 1) input = 4;
   715   002378  A2CA               	btfss	202,1,c	;volatile
   716   00237A  EFC1  F011         	goto	u281
   717   00237E  EFC3  F011         	goto	u280
   718   002382                     u281:
   719   002382  EFC5  F011         	goto	l979
   720   002386                     u280:
   721   002386  0E04               	movlw	4
   722   002388  6E06               	movwf	scan_number@input^0,c
   723   00238A                     l979:
   724                           
   725                           ;main.c: 94:         if(PORTAbits.RA2 == 1) input = 7;
   726   00238A  A4CA               	btfss	202,2,c	;volatile
   727   00238C  EFCA  F011         	goto	u291
   728   002390  EFCC  F011         	goto	u290
   729   002394                     u291:
   730   002394  EFCE  F011         	goto	l983
   731   002398                     u290:
   732   002398  0E07               	movlw	7
   733   00239A  6E06               	movwf	scan_number@input^0,c
   734   00239C                     l983:
   735                           
   736                           ;main.c: 95:         PORTBbits.RB0 = 0;
   737   00239C  90CB               	bcf	203,0,c	;volatile
   738   00239E                     
   739                           ;main.c: 97:          PORTBbits.RB1 = 1;
   740   00239E  82CB               	bsf	203,1,c	;volatile
   741   0023A0                     
   742                           ;main.c: 98:         if(PORTAbits.RA0 == 1) input = 2;
   743   0023A0  A0CA               	btfss	202,0,c	;volatile
   744   0023A2  EFD5  F011         	goto	u301
   745   0023A6  EFD7  F011         	goto	u300
   746   0023AA                     u301:
   747   0023AA  EFD9  F011         	goto	l991
   748   0023AE                     u300:
   749   0023AE  0E02               	movlw	2
   750   0023B0  6E06               	movwf	scan_number@input^0,c
   751   0023B2                     l991:
   752                           
   753                           ;main.c: 99:         if(PORTAbits.RA1 == 1) input = 5;
   754   0023B2  A2CA               	btfss	202,1,c	;volatile
   755   0023B4  EFDE  F011         	goto	u311
   756   0023B8  EFE0  F011         	goto	u310
   757   0023BC                     u311:
   758   0023BC  EFE2  F011         	goto	l995
   759   0023C0                     u310:
   760   0023C0  0E05               	movlw	5
   761   0023C2  6E06               	movwf	scan_number@input^0,c
   762   0023C4                     l995:
   763                           
   764                           ;main.c: 100:         if(PORTAbits.RA2 == 1) input = 8;
   765   0023C4  A4CA               	btfss	202,2,c	;volatile
   766   0023C6  EFE7  F011         	goto	u321
   767   0023CA  EFE9  F011         	goto	u320
   768   0023CE                     u321:
   769   0023CE  EFEB  F011         	goto	l999
   770   0023D2                     u320:
   771   0023D2  0E08               	movlw	8
   772   0023D4  6E06               	movwf	scan_number@input^0,c
   773   0023D6                     l999:
   774                           
   775                           ;main.c: 101:         if(PORTAbits.RA3 == 1) input = 0;
   776   0023D6  A6CA               	btfss	202,3,c	;volatile
   777   0023D8  EFF0  F011         	goto	u331
   778   0023DC  EFF2  F011         	goto	u330
   779   0023E0                     u331:
   780   0023E0  EFF4  F011         	goto	l1003
   781   0023E4                     u330:
   782   0023E4  0E00               	movlw	0
   783   0023E6  6E06               	movwf	scan_number@input^0,c
   784   0023E8                     l1003:
   785                           
   786                           ;main.c: 102:         PORTBbits.RB1 = 0;
   787   0023E8  92CB               	bcf	203,1,c	;volatile
   788   0023EA                     
   789                           ;main.c: 104:          PORTBbits.RB2 = 1;
   790   0023EA  84CB               	bsf	203,2,c	;volatile
   791   0023EC                     
   792                           ;main.c: 105:         if (PORTAbits.RA0 == 1)input = 3;
   793   0023EC  A0CA               	btfss	202,0,c	;volatile
   794   0023EE  EFFB  F011         	goto	u341
   795   0023F2  EFFD  F011         	goto	u340
   796   0023F6                     u341:
   797   0023F6  EFFF  F011         	goto	l1011
   798   0023FA                     u340:
   799   0023FA  0E03               	movlw	3
   800   0023FC  6E06               	movwf	scan_number@input^0,c
   801   0023FE                     l1011:
   802                           
   803                           ;main.c: 106:         if(PORTAbits.RA1 == 1) input = 6;
   804   0023FE  A2CA               	btfss	202,1,c	;volatile
   805   002400  EF04  F012         	goto	u351
   806   002404  EF06  F012         	goto	u350
   807   002408                     u351:
   808   002408  EF08  F012         	goto	l1015
   809   00240C                     u350:
   810   00240C  0E06               	movlw	6
   811   00240E  6E06               	movwf	scan_number@input^0,c
   812   002410                     l1015:
   813                           
   814                           ;main.c: 107:         if(PORTAbits.RA2 == 1) input = 9;
   815   002410  A4CA               	btfss	202,2,c	;volatile
   816   002412  EF0D  F012         	goto	u361
   817   002416  EF0F  F012         	goto	u360
   818   00241A                     u361:
   819   00241A  EF11  F012         	goto	l1019
   820   00241E                     u360:
   821   00241E  0E09               	movlw	9
   822   002420  6E06               	movwf	scan_number@input^0,c
   823   002422                     l1019:
   824                           
   825                           ;main.c: 108:         PORTBbits.RB2 = 0;
   826   002422  94CB               	bcf	203,2,c	;volatile
   827   002424                     l1021:
   828                           
   829                           ;main.c: 89:     while (input == 10)
   830   002424  0E0A               	movlw	10
   831   002426  1806               	xorwf	scan_number@input^0,w,c
   832   002428  B4D8               	btfsc	status,2,c
   833   00242A  EF19  F012         	goto	u371
   834   00242E  EF1B  F012         	goto	u370
   835   002432                     u371:
   836   002432  EFB2  F011         	goto	l73
   837   002436                     u370:
   838   002436                     
   839                           ;main.c: 110:     output += input;
   840   002436  5006               	movf	scan_number@input^0,w,c
   841   002438  2605               	addwf	scan_number@output^0,f,c
   842   00243A                     
   843                           ;main.c: 111:     _delay((unsigned long)((200)*(8000000/4000.0)));
   844   00243A  0E03               	movlw	3
   845   00243C  6E02               	movwf	(??_scan_number+1)^0,c
   846   00243E  0E08               	movlw	8
   847   002440  6E01               	movwf	??_scan_number^0,c
   848   002442  0E77               	movlw	119
   849   002444                     u1107:
   850   002444  2EE8               	decfsz	wreg,f,c
   851   002446  D7FE               	bra	u1107
   852   002448  2E01               	decfsz	??_scan_number^0,f,c
   853   00244A  D7FC               	bra	u1107
   854   00244C  2E02               	decfsz	(??_scan_number+1)^0,f,c
   855   00244E  D7FA               	bra	u1107
   856   002450  0000               	nop	
   857   002452                     
   858                           ;main.c: 112:     return output;
   859   002452  5005               	movf	scan_number@output^0,w,c
   860   002454  0012               	return		;funcret
   861   002456                     __end_of_scan_number:
   862                           	callstack 0
   863                           
   864 ;; *************** function _calculate *****************
   865 ;; Defined at:
   866 ;;		line 128 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  x               1    wreg     unsigned char 
   869 ;;  y               1    4[COMRAM] unsigned char 
   870 ;;  op              1    5[COMRAM] unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  x               1    7[COMRAM] unsigned char 
   873 ;;  output          1    6[COMRAM] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      unsigned char 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;Total ram usage:        4 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 1
   890 ;; This function calls:
   891 ;;		___lbdiv
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text3
   898   002648                     __ptext3:
   899                           	callstack 0
   900   002648                     _calculate:
   901                           	callstack 29
   902                           
   903                           ;incstack = 0
   904                           ;calculate@x stored from wreg
   905   002648  6E08               	movwf	calculate@x^0,c
   906   00264A                     
   907                           ;main.c: 129:     unsigned char output = 0;
   908   00264A  0E00               	movlw	0
   909   00264C  6E07               	movwf	calculate@output^0,c
   910   00264E                     
   911                           ;main.c: 130:     if(op == 1)
   912   00264E  0406               	decf	calculate@op^0,w,c
   913   002650  A4D8               	btfss	status,2,c
   914   002652  EF2D  F013         	goto	u831
   915   002656  EF2F  F013         	goto	u830
   916   00265A                     u831:
   917   00265A  EF32  F013         	goto	l98
   918   00265E                     u830:
   919   00265E                     
   920                           ;main.c: 131:         output = x + y;
   921   00265E  5008               	movf	calculate@x^0,w,c
   922   002660  2405               	addwf	calculate@y^0,w,c
   923   002662  6E07               	movwf	calculate@output^0,c
   924   002664                     l98:
   925                           
   926                           ;main.c: 132:     if(op ==2)
   927   002664  0E02               	movlw	2
   928   002666  1806               	xorwf	calculate@op^0,w,c
   929   002668  A4D8               	btfss	status,2,c
   930   00266A  EF39  F013         	goto	u841
   931   00266E  EF3B  F013         	goto	u840
   932   002672                     u841:
   933   002672  EF3E  F013         	goto	l99
   934   002676                     u840:
   935   002676                     
   936                           ;main.c: 133:         output = x-y;
   937   002676  5005               	movf	calculate@y^0,w,c
   938   002678  5C08               	subwf	calculate@x^0,w,c
   939   00267A  6E07               	movwf	calculate@output^0,c
   940   00267C                     l99:
   941                           
   942                           ;main.c: 134:     if(op == 3)
   943   00267C  0E03               	movlw	3
   944   00267E  1806               	xorwf	calculate@op^0,w,c
   945   002680  A4D8               	btfss	status,2,c
   946   002682  EF45  F013         	goto	u851
   947   002686  EF47  F013         	goto	u850
   948   00268A                     u851:
   949   00268A  EF4C  F013         	goto	l1311
   950   00268E                     u850:
   951   00268E                     
   952                           ;main.c: 135:         output = x*y;
   953   00268E  5008               	movf	calculate@x^0,w,c
   954   002690  0205               	mulwf	calculate@y^0,c
   955   002692  006F FFCC  F007    	movff	prodl,calculate@output
   956   002698                     l1311:
   957                           
   958                           ;main.c: 136:     if(op == 4)
   959   002698  0E04               	movlw	4
   960   00269A  1806               	xorwf	calculate@op^0,w,c
   961   00269C  A4D8               	btfss	status,2,c
   962   00269E  EF53  F013         	goto	u861
   963   0026A2  EF55  F013         	goto	u860
   964   0026A6                     u861:
   965   0026A6  EF5B  F013         	goto	l1315
   966   0026AA                     u860:
   967   0026AA                     
   968                           ;main.c: 137:         output = x/y;
   969   0026AA  C005  F001         	movff	calculate@y,___lbdiv@divisor
   970   0026AE  5008               	movf	calculate@x^0,w,c
   971   0026B0  EC94  F013         	call	___lbdiv
   972   0026B4  6E07               	movwf	calculate@output^0,c
   973   0026B6                     l1315:
   974                           
   975                           ;main.c: 138:     return output;
   976   0026B6  5007               	movf	calculate@output^0,w,c
   977   0026B8  0012               	return		;funcret
   978   0026BA                     __end_of_calculate:
   979                           	callstack 0
   980                           
   981 ;; *************** function ___lbdiv *****************
   982 ;; Defined at:
   983 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  dividend        1    wreg     unsigned char 
   986 ;;  divisor         1    0[COMRAM] unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  dividend        1    1[COMRAM] unsigned char 
   989 ;;  quotient        1    3[COMRAM] unsigned char 
   990 ;;  counter         1    2[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1000 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1001 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1004 ;;Total ram usage:        4 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_calculate
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text4
  1014   002728                     __ptext4:
  1015                           	callstack 0
  1016   002728                     ___lbdiv:
  1017                           	callstack 29
  1018                           
  1019                           ;incstack = 0
  1020                           ;___lbdiv@dividend stored from wreg
  1021   002728  6E02               	movwf	___lbdiv@dividend^0,c
  1022   00272A  0E00               	movlw	0
  1023   00272C  6E04               	movwf	___lbdiv@quotient^0,c
  1024   00272E  5001               	movf	___lbdiv@divisor^0,w,c
  1025   002730  B4D8               	btfsc	status,2,c
  1026   002732  EF9D  F013         	goto	u801
  1027   002736  EF9F  F013         	goto	u800
  1028   00273A                     u801:
  1029   00273A  EFC0  F013         	goto	l1297
  1030   00273E                     u800:
  1031   00273E  0E01               	movlw	1
  1032   002740  6E03               	movwf	___lbdiv@counter^0,c
  1033   002742  EFA6  F013         	goto	l1285
  1034   002746                     l1281:
  1035   002746  90D8               	bcf	status,0,c
  1036   002748  3601               	rlcf	___lbdiv@divisor^0,f,c
  1037   00274A  2A03               	incf	___lbdiv@counter^0,f,c
  1038   00274C                     l1285:
  1039   00274C  AE01               	btfss	___lbdiv@divisor^0,7,c
  1040   00274E  EFAB  F013         	goto	u811
  1041   002752  EFAD  F013         	goto	u810
  1042   002756                     u811:
  1043   002756  EFA3  F013         	goto	l1281
  1044   00275A                     u810:
  1045   00275A                     l1287:
  1046   00275A  90D8               	bcf	status,0,c
  1047   00275C  3604               	rlcf	___lbdiv@quotient^0,f,c
  1048   00275E  5001               	movf	___lbdiv@divisor^0,w,c
  1049   002760  5C02               	subwf	___lbdiv@dividend^0,w,c
  1050   002762  A0D8               	btfss	status,0,c
  1051   002764  EFB6  F013         	goto	u821
  1052   002768  EFB8  F013         	goto	u820
  1053   00276C                     u821:
  1054   00276C  EFBB  F013         	goto	l1293
  1055   002770                     u820:
  1056   002770  5001               	movf	___lbdiv@divisor^0,w,c
  1057   002772  5E02               	subwf	___lbdiv@dividend^0,f,c
  1058   002774  8004               	bsf	___lbdiv@quotient^0,0,c
  1059   002776                     l1293:
  1060   002776  90D8               	bcf	status,0,c
  1061   002778  3201               	rrcf	___lbdiv@divisor^0,f,c
  1062   00277A  2E03               	decfsz	___lbdiv@counter^0,f,c
  1063   00277C  EFAD  F013         	goto	l1287
  1064   002780                     l1297:
  1065   002780  5004               	movf	___lbdiv@quotient^0,w,c
  1066   002782  0012               	return		;funcret
  1067   002784                     __end_of___lbdiv:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _PORT_Output *****************
  1071 ;; Defined at:
  1072 ;;		line 141 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  answer          1    wreg     unsigned char 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  answer          1   11[COMRAM] unsigned char 
  1077 ;;  second_dig      1   15[COMRAM] unsigned char 
  1078 ;;  first_dig       1   14[COMRAM] unsigned char 
  1079 ;;  display2        1   13[COMRAM] unsigned char 
  1080 ;;  display1        1   12[COMRAM] unsigned char 
  1081 ;;  i               1   10[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1094 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1095 ;;Total ram usage:        8 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 1
  1098 ;; This function calls:
  1099 ;;		___awdiv
  1100 ;;		___awmod
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text5
  1107   002002                     __ptext5:
  1108                           	callstack 0
  1109   002002                     _PORT_Output:
  1110                           	callstack 29
  1111                           
  1112                           ;incstack = 0
  1113                           ;PORT_Output@answer stored from wreg
  1114   002002  6E0C               	movwf	PORT_Output@answer^0,c
  1115   002004                     
  1116                           ;main.c: 143:     unsigned char second_dig = 0;
  1117   002004  0E00               	movlw	0
  1118   002006  6E10               	movwf	PORT_Output@second_dig^0,c
  1119                           
  1120                           ;main.c: 144:     unsigned char i = 0;
  1121   002008  0E00               	movlw	0
  1122   00200A  6E0B               	movwf	PORT_Output@i^0,c
  1123                           
  1124                           ;main.c: 145:     unsigned char display1 = 0;
  1125   00200C  0E00               	movlw	0
  1126   00200E  6E0D               	movwf	PORT_Output@display1^0,c
  1127                           
  1128                           ;main.c: 146:     unsigned char display2 = 0;
  1129   002010  0E00               	movlw	0
  1130   002012  6E0E               	movwf	PORT_Output@display2^0,c
  1131   002014                     
  1132                           ;main.c: 150:     first_dig = answer/10;
  1133   002014  C00C  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1134   002018  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1135   00201A  0E00               	movlw	0
  1136   00201C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1137   00201E  0E0A               	movlw	10
  1138   002020  6E03               	movwf	___awdiv@divisor^0,c
  1139   002022  EC2B  F012         	call	___awdiv	;wreg free
  1140   002026  5001               	movf	?___awdiv^0,w,c
  1141   002028  6E0F               	movwf	PORT_Output@first_dig^0,c
  1142                           
  1143                           ;main.c: 151:     second_dig = answer % 10;
  1144   00202A  C00C  F001         	movff	PORT_Output@answer,___awmod@dividend
  1145   00202E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1146   002030  0E00               	movlw	0
  1147   002032  6E04               	movwf	(___awmod@divisor+1)^0,c
  1148   002034  0E0A               	movlw	10
  1149   002036  6E03               	movwf	___awmod@divisor^0,c
  1150   002038  EC8D  F012         	call	___awmod	;wreg free
  1151   00203C  5001               	movf	?___awmod^0,w,c
  1152   00203E  6E10               	movwf	PORT_Output@second_dig^0,c
  1153   002040                     
  1154                           ;main.c: 153:     if(first_dig == 0) display1 = 0xC0;
  1155   002040  500F               	movf	PORT_Output@first_dig^0,w,c
  1156   002042  A4D8               	btfss	status,2,c
  1157   002044  EF26  F010         	goto	u871
  1158   002048  EF28  F010         	goto	u870
  1159   00204C                     u871:
  1160   00204C  EF2A  F010         	goto	l1329
  1161   002050                     u870:
  1162   002050  0EC0               	movlw	192
  1163   002052  6E0D               	movwf	PORT_Output@display1^0,c
  1164   002054                     l1329:
  1165                           
  1166                           ;main.c: 154:     if(first_dig == 1) display1 = 0xF9;
  1167   002054  040F               	decf	PORT_Output@first_dig^0,w,c
  1168   002056  A4D8               	btfss	status,2,c
  1169   002058  EF30  F010         	goto	u881
  1170   00205C  EF32  F010         	goto	u880
  1171   002060                     u881:
  1172   002060  EF34  F010         	goto	l1333
  1173   002064                     u880:
  1174   002064  0EF9               	movlw	249
  1175   002066  6E0D               	movwf	PORT_Output@display1^0,c
  1176   002068                     l1333:
  1177                           
  1178                           ;main.c: 155:     if(first_dig == 2) display1 = 0xA4;
  1179   002068  0E02               	movlw	2
  1180   00206A  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1181   00206C  A4D8               	btfss	status,2,c
  1182   00206E  EF3B  F010         	goto	u891
  1183   002072  EF3D  F010         	goto	u890
  1184   002076                     u891:
  1185   002076  EF3F  F010         	goto	l1337
  1186   00207A                     u890:
  1187   00207A  0EA4               	movlw	164
  1188   00207C  6E0D               	movwf	PORT_Output@display1^0,c
  1189   00207E                     l1337:
  1190                           
  1191                           ;main.c: 156:     if(first_dig == 3) display1 = 0xB0;
  1192   00207E  0E03               	movlw	3
  1193   002080  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1194   002082  A4D8               	btfss	status,2,c
  1195   002084  EF46  F010         	goto	u901
  1196   002088  EF48  F010         	goto	u900
  1197   00208C                     u901:
  1198   00208C  EF4A  F010         	goto	l1341
  1199   002090                     u900:
  1200   002090  0EB0               	movlw	176
  1201   002092  6E0D               	movwf	PORT_Output@display1^0,c
  1202   002094                     l1341:
  1203                           
  1204                           ;main.c: 157:     if(first_dig == 4) display1 = 0x99;
  1205   002094  0E04               	movlw	4
  1206   002096  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1207   002098  A4D8               	btfss	status,2,c
  1208   00209A  EF51  F010         	goto	u911
  1209   00209E  EF53  F010         	goto	u910
  1210   0020A2                     u911:
  1211   0020A2  EF55  F010         	goto	l1345
  1212   0020A6                     u910:
  1213   0020A6  0E99               	movlw	153
  1214   0020A8  6E0D               	movwf	PORT_Output@display1^0,c
  1215   0020AA                     l1345:
  1216                           
  1217                           ;main.c: 158:     if(first_dig == 5) display1 = 0x92;
  1218   0020AA  0E05               	movlw	5
  1219   0020AC  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1220   0020AE  A4D8               	btfss	status,2,c
  1221   0020B0  EF5C  F010         	goto	u921
  1222   0020B4  EF5E  F010         	goto	u920
  1223   0020B8                     u921:
  1224   0020B8  EF60  F010         	goto	l1349
  1225   0020BC                     u920:
  1226   0020BC  0E92               	movlw	146
  1227   0020BE  6E0D               	movwf	PORT_Output@display1^0,c
  1228   0020C0                     l1349:
  1229                           
  1230                           ;main.c: 159:     if(first_dig == 6) display1 = 0x82;
  1231   0020C0  0E06               	movlw	6
  1232   0020C2  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1233   0020C4  A4D8               	btfss	status,2,c
  1234   0020C6  EF67  F010         	goto	u931
  1235   0020CA  EF69  F010         	goto	u930
  1236   0020CE                     u931:
  1237   0020CE  EF6B  F010         	goto	l1353
  1238   0020D2                     u930:
  1239   0020D2  0E82               	movlw	130
  1240   0020D4  6E0D               	movwf	PORT_Output@display1^0,c
  1241   0020D6                     l1353:
  1242                           
  1243                           ;main.c: 160:     if(first_dig == 7) display1 = 0xF8;
  1244   0020D6  0E07               	movlw	7
  1245   0020D8  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1246   0020DA  A4D8               	btfss	status,2,c
  1247   0020DC  EF72  F010         	goto	u941
  1248   0020E0  EF74  F010         	goto	u940
  1249   0020E4                     u941:
  1250   0020E4  EF76  F010         	goto	l1357
  1251   0020E8                     u940:
  1252   0020E8  0EF8               	movlw	248
  1253   0020EA  6E0D               	movwf	PORT_Output@display1^0,c
  1254   0020EC                     l1357:
  1255                           
  1256                           ;main.c: 161:     if(first_dig == 8) display1 = 0x80;
  1257   0020EC  0E08               	movlw	8
  1258   0020EE  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1259   0020F0  A4D8               	btfss	status,2,c
  1260   0020F2  EF7D  F010         	goto	u951
  1261   0020F6  EF7F  F010         	goto	u950
  1262   0020FA                     u951:
  1263   0020FA  EF81  F010         	goto	l1361
  1264   0020FE                     u950:
  1265   0020FE  0E80               	movlw	128
  1266   002100  6E0D               	movwf	PORT_Output@display1^0,c
  1267   002102                     l1361:
  1268                           
  1269                           ;main.c: 162:     if(first_dig == 9) display1 = 0x98;
  1270   002102  0E09               	movlw	9
  1271   002104  180F               	xorwf	PORT_Output@first_dig^0,w,c
  1272   002106  A4D8               	btfss	status,2,c
  1273   002108  EF88  F010         	goto	u961
  1274   00210C  EF8A  F010         	goto	u960
  1275   002110                     u961:
  1276   002110  EF8C  F010         	goto	l115
  1277   002114                     u960:
  1278   002114  0E98               	movlw	152
  1279   002116  6E0D               	movwf	PORT_Output@display1^0,c
  1280   002118                     l115:
  1281                           
  1282                           ;main.c: 164:     if(second_dig == 0) display2 = 0xC0;
  1283   002118  5010               	movf	PORT_Output@second_dig^0,w,c
  1284   00211A  A4D8               	btfss	status,2,c
  1285   00211C  EF92  F010         	goto	u971
  1286   002120  EF94  F010         	goto	u970
  1287   002124                     u971:
  1288   002124  EF96  F010         	goto	l1367
  1289   002128                     u970:
  1290   002128  0EC0               	movlw	192
  1291   00212A  6E0E               	movwf	PORT_Output@display2^0,c
  1292   00212C                     l1367:
  1293                           
  1294                           ;main.c: 165:     if(second_dig == 1) display2 = 0xF9;
  1295   00212C  0410               	decf	PORT_Output@second_dig^0,w,c
  1296   00212E  A4D8               	btfss	status,2,c
  1297   002130  EF9C  F010         	goto	u981
  1298   002134  EF9E  F010         	goto	u980
  1299   002138                     u981:
  1300   002138  EFA0  F010         	goto	l1371
  1301   00213C                     u980:
  1302   00213C  0EF9               	movlw	249
  1303   00213E  6E0E               	movwf	PORT_Output@display2^0,c
  1304   002140                     l1371:
  1305                           
  1306                           ;main.c: 166:     if(second_dig == 2) display2 = 0xA4;
  1307   002140  0E02               	movlw	2
  1308   002142  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1309   002144  A4D8               	btfss	status,2,c
  1310   002146  EFA7  F010         	goto	u991
  1311   00214A  EFA9  F010         	goto	u990
  1312   00214E                     u991:
  1313   00214E  EFAB  F010         	goto	l1375
  1314   002152                     u990:
  1315   002152  0EA4               	movlw	164
  1316   002154  6E0E               	movwf	PORT_Output@display2^0,c
  1317   002156                     l1375:
  1318                           
  1319                           ;main.c: 167:     if(second_dig == 3) display2 = 0xB0;
  1320   002156  0E03               	movlw	3
  1321   002158  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1322   00215A  A4D8               	btfss	status,2,c
  1323   00215C  EFB2  F010         	goto	u1001
  1324   002160  EFB4  F010         	goto	u1000
  1325   002164                     u1001:
  1326   002164  EFB6  F010         	goto	l1379
  1327   002168                     u1000:
  1328   002168  0EB0               	movlw	176
  1329   00216A  6E0E               	movwf	PORT_Output@display2^0,c
  1330   00216C                     l1379:
  1331                           
  1332                           ;main.c: 168:     if(second_dig == 4) display2 = 0x99;
  1333   00216C  0E04               	movlw	4
  1334   00216E  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1335   002170  A4D8               	btfss	status,2,c
  1336   002172  EFBD  F010         	goto	u1011
  1337   002176  EFBF  F010         	goto	u1010
  1338   00217A                     u1011:
  1339   00217A  EFC1  F010         	goto	l1383
  1340   00217E                     u1010:
  1341   00217E  0E99               	movlw	153
  1342   002180  6E0E               	movwf	PORT_Output@display2^0,c
  1343   002182                     l1383:
  1344                           
  1345                           ;main.c: 169:     if(second_dig == 5) display2 = 0x92;
  1346   002182  0E05               	movlw	5
  1347   002184  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1348   002186  A4D8               	btfss	status,2,c
  1349   002188  EFC8  F010         	goto	u1021
  1350   00218C  EFCA  F010         	goto	u1020
  1351   002190                     u1021:
  1352   002190  EFCC  F010         	goto	l1387
  1353   002194                     u1020:
  1354   002194  0E92               	movlw	146
  1355   002196  6E0E               	movwf	PORT_Output@display2^0,c
  1356   002198                     l1387:
  1357                           
  1358                           ;main.c: 170:     if(second_dig == 6) display2 = 0x82;
  1359   002198  0E06               	movlw	6
  1360   00219A  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1361   00219C  A4D8               	btfss	status,2,c
  1362   00219E  EFD3  F010         	goto	u1031
  1363   0021A2  EFD5  F010         	goto	u1030
  1364   0021A6                     u1031:
  1365   0021A6  EFD7  F010         	goto	l1391
  1366   0021AA                     u1030:
  1367   0021AA  0E82               	movlw	130
  1368   0021AC  6E0E               	movwf	PORT_Output@display2^0,c
  1369   0021AE                     l1391:
  1370                           
  1371                           ;main.c: 171:     if(second_dig == 7) display2 = 0xF8;
  1372   0021AE  0E07               	movlw	7
  1373   0021B0  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1374   0021B2  A4D8               	btfss	status,2,c
  1375   0021B4  EFDE  F010         	goto	u1041
  1376   0021B8  EFE0  F010         	goto	u1040
  1377   0021BC                     u1041:
  1378   0021BC  EFE2  F010         	goto	l1395
  1379   0021C0                     u1040:
  1380   0021C0  0EF8               	movlw	248
  1381   0021C2  6E0E               	movwf	PORT_Output@display2^0,c
  1382   0021C4                     l1395:
  1383                           
  1384                           ;main.c: 172:     if(second_dig == 8) display2 = 0x80;
  1385   0021C4  0E08               	movlw	8
  1386   0021C6  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1387   0021C8  A4D8               	btfss	status,2,c
  1388   0021CA  EFE9  F010         	goto	u1051
  1389   0021CE  EFEB  F010         	goto	u1050
  1390   0021D2                     u1051:
  1391   0021D2  EFED  F010         	goto	l1399
  1392   0021D6                     u1050:
  1393   0021D6  0E80               	movlw	128
  1394   0021D8  6E0E               	movwf	PORT_Output@display2^0,c
  1395   0021DA                     l1399:
  1396                           
  1397                           ;main.c: 173:     if(second_dig == 9) display2 = 0x98;
  1398   0021DA  0E09               	movlw	9
  1399   0021DC  1810               	xorwf	PORT_Output@second_dig^0,w,c
  1400   0021DE  A4D8               	btfss	status,2,c
  1401   0021E0  EFF4  F010         	goto	u1061
  1402   0021E4  EFF6  F010         	goto	u1060
  1403   0021E8                     u1061:
  1404   0021E8  EFF8  F010         	goto	l1403
  1405   0021EC                     u1060:
  1406   0021EC  0E98               	movlw	152
  1407   0021EE  6E0E               	movwf	PORT_Output@display2^0,c
  1408   0021F0                     l1403:
  1409                           
  1410                           ;main.c: 175:     PORTBbits.RB2 = 1;
  1411   0021F0  84CB               	bsf	203,2,c	;volatile
  1412                           
  1413                           ;main.c: 176:     while (PORTAbits.RA2 == 0){
  1414   0021F2  EFFC  F010         	goto	l126
  1415   0021F6                     l127:
  1416                           
  1417                           ;main.c: 177:         PORTD = 0xFF;
  1418   0021F6  68CD               	setf	205,c	;volatile
  1419   0021F8                     l126:
  1420                           
  1421                           ;main.c: 176:     while (PORTAbits.RA2 == 0){
  1422   0021F8  A4CA               	btfss	202,2,c	;volatile
  1423   0021FA  EF01  F011         	goto	u1071
  1424   0021FE  EF03  F011         	goto	u1070
  1425   002202                     u1071:
  1426   002202  EFFB  F010         	goto	l127
  1427   002206                     u1070:
  1428   002206                     
  1429                           ;main.c: 180:     for(i = 1; i<10000; i++)
  1430   002206  0E01               	movlw	1
  1431   002208  6E0B               	movwf	PORT_Output@i^0,c
  1432   00220A                     l129:
  1433                           
  1434                           ;main.c: 181:     {;main.c: 182:         PORTBbits.RB5 = 1;
  1435   00220A  8ACB               	bsf	203,5,c	;volatile
  1436                           
  1437                           ;main.c: 183:         PORTD = display1;
  1438   00220C  0060  F037  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1439   002212                     
  1440                           ;main.c: 184:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1441   002212  0E03               	movlw	3
  1442   002214  6E0A               	movwf	(??_PORT_Output+1)^0,c
  1443   002216  0E08               	movlw	8
  1444   002218  6E09               	movwf	??_PORT_Output^0,c
  1445   00221A  0E77               	movlw	119
  1446   00221C                     u1117:
  1447   00221C  2EE8               	decfsz	wreg,f,c
  1448   00221E  D7FE               	bra	u1117
  1449   002220  2E09               	decfsz	??_PORT_Output^0,f,c
  1450   002222  D7FC               	bra	u1117
  1451   002224  2E0A               	decfsz	(??_PORT_Output+1)^0,f,c
  1452   002226  D7FA               	bra	u1117
  1453   002228  0000               	nop	
  1454   00222A                     
  1455                           ;main.c: 185:         PORTBbits.RB5 = 0;
  1456   00222A  9ACB               	bcf	203,5,c	;volatile
  1457   00222C                     
  1458                           ;main.c: 186:         PORTBbits.RB6 = 1;
  1459   00222C  8CCB               	bsf	203,6,c	;volatile
  1460   00222E                     
  1461                           ;main.c: 187:         PORTD = display2;
  1462   00222E  0060  F03B  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1463                           
  1464                           ;main.c: 188:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1465   002234  0E03               	movlw	3
  1466   002236  6E0A               	movwf	(??_PORT_Output+1)^0,c
  1467   002238  0E08               	movlw	8
  1468   00223A  6E09               	movwf	??_PORT_Output^0,c
  1469   00223C  0E77               	movlw	119
  1470   00223E                     u1127:
  1471   00223E  2EE8               	decfsz	wreg,f,c
  1472   002240  D7FE               	bra	u1127
  1473   002242  2E09               	decfsz	??_PORT_Output^0,f,c
  1474   002244  D7FC               	bra	u1127
  1475   002246  2E0A               	decfsz	(??_PORT_Output+1)^0,f,c
  1476   002248  D7FA               	bra	u1127
  1477   00224A  0000               	nop	
  1478   00224C                     
  1479                           ;main.c: 189:         PORTBbits.RB6 = 0;
  1480   00224C  9CCB               	bcf	203,6,c	;volatile
  1481   00224E                     
  1482                           ;main.c: 191:     }
  1483   00224E  2A0B               	incf	PORT_Output@i^0,f,c
  1484   002250  EF05  F011         	goto	l129
  1485   002254  0012               	return		;funcret
  1486   002256                     __end_of_PORT_Output:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function ___awmod *****************
  1490 ;; Defined at:
  1491 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  dividend        2    0[COMRAM] int 
  1494 ;;  divisor         2    2[COMRAM] int 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  sign            1    5[COMRAM] unsigned char 
  1497 ;;  counter         1    4[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    0[COMRAM] int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1511 ;;Total ram usage:        6 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_PORT_Output
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text6
  1521   00251A                     __ptext6:
  1522                           	callstack 0
  1523   00251A                     ___awmod:
  1524                           	callstack 29
  1525   00251A  0E00               	movlw	0
  1526   00251C  6E06               	movwf	___awmod@sign^0,c
  1527   00251E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1528   002520  EF96  F012         	goto	u740
  1529   002524  EF94  F012         	goto	u741
  1530   002528                     u741:
  1531   002528  EF9C  F012         	goto	l1247
  1532   00252C                     u740:
  1533   00252C  6C01               	negf	___awmod@dividend^0,c
  1534   00252E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1535   002530  B0D8               	btfsc	status,0,c
  1536   002532  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1537   002534  0E01               	movlw	1
  1538   002536  6E06               	movwf	___awmod@sign^0,c
  1539   002538                     l1247:
  1540   002538  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1541   00253A  EFA3  F012         	goto	u750
  1542   00253E  EFA1  F012         	goto	u751
  1543   002542                     u751:
  1544   002542  EFA7  F012         	goto	l1251
  1545   002546                     u750:
  1546   002546  6C03               	negf	___awmod@divisor^0,c
  1547   002548  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1548   00254A  B0D8               	btfsc	status,0,c
  1549   00254C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1550   00254E                     l1251:
  1551   00254E  5003               	movf	___awmod@divisor^0,w,c
  1552   002550  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1553   002552  B4D8               	btfsc	status,2,c
  1554   002554  EFAE  F012         	goto	u761
  1555   002558  EFB0  F012         	goto	u760
  1556   00255C                     u761:
  1557   00255C  EFD4  F012         	goto	l1267
  1558   002560                     u760:
  1559   002560  0E01               	movlw	1
  1560   002562  6E05               	movwf	___awmod@counter^0,c
  1561   002564  EFB8  F012         	goto	l1257
  1562   002568                     l1255:
  1563   002568  90D8               	bcf	status,0,c
  1564   00256A  3603               	rlcf	___awmod@divisor^0,f,c
  1565   00256C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1566   00256E  2A05               	incf	___awmod@counter^0,f,c
  1567   002570                     l1257:
  1568   002570  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1569   002572  EFBD  F012         	goto	u771
  1570   002576  EFBF  F012         	goto	u770
  1571   00257A                     u771:
  1572   00257A  EFB4  F012         	goto	l1255
  1573   00257E                     u770:
  1574   00257E                     l1259:
  1575   00257E  5003               	movf	___awmod@divisor^0,w,c
  1576   002580  5C01               	subwf	___awmod@dividend^0,w,c
  1577   002582  5004               	movf	(___awmod@divisor+1)^0,w,c
  1578   002584  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1579   002586  A0D8               	btfss	status,0,c
  1580   002588  EFC8  F012         	goto	u781
  1581   00258C  EFCA  F012         	goto	u780
  1582   002590                     u781:
  1583   002590  EFCE  F012         	goto	l1263
  1584   002594                     u780:
  1585   002594  5003               	movf	___awmod@divisor^0,w,c
  1586   002596  5E01               	subwf	___awmod@dividend^0,f,c
  1587   002598  5004               	movf	(___awmod@divisor+1)^0,w,c
  1588   00259A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1589   00259C                     l1263:
  1590   00259C  90D8               	bcf	status,0,c
  1591   00259E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1592   0025A0  3203               	rrcf	___awmod@divisor^0,f,c
  1593   0025A2  2E05               	decfsz	___awmod@counter^0,f,c
  1594   0025A4  EFBF  F012         	goto	l1259
  1595   0025A8                     l1267:
  1596   0025A8  5006               	movf	___awmod@sign^0,w,c
  1597   0025AA  B4D8               	btfsc	status,2,c
  1598   0025AC  EFDA  F012         	goto	u791
  1599   0025B0  EFDC  F012         	goto	u790
  1600   0025B4                     u791:
  1601   0025B4  EFE0  F012         	goto	l1271
  1602   0025B8                     u790:
  1603   0025B8  6C01               	negf	___awmod@dividend^0,c
  1604   0025BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1605   0025BC  B0D8               	btfsc	status,0,c
  1606   0025BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1607   0025C0                     l1271:
  1608   0025C0  C001  F001         	movff	___awmod@dividend,?___awmod
  1609   0025C4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1610   0025C8  0012               	return		;funcret
  1611   0025CA                     __end_of___awmod:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function ___awdiv *****************
  1615 ;; Defined at:
  1616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  dividend        2    0[COMRAM] int 
  1619 ;;  divisor         2    2[COMRAM] int 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  quotient        2    6[COMRAM] int 
  1622 ;;  sign            1    5[COMRAM] unsigned char 
  1623 ;;  counter         1    4[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    0[COMRAM] int 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1634 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1637 ;;Total ram usage:        8 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_PORT_Output
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text7
  1647   002456                     __ptext7:
  1648                           	callstack 0
  1649   002456                     ___awdiv:
  1650                           	callstack 29
  1651   002456  0E00               	movlw	0
  1652   002458  6E06               	movwf	___awdiv@sign^0,c
  1653   00245A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1654   00245C  EF34  F012         	goto	u680
  1655   002460  EF32  F012         	goto	u681
  1656   002464                     u681:
  1657   002464  EF3A  F012         	goto	l1203
  1658   002468                     u680:
  1659   002468  6C03               	negf	___awdiv@divisor^0,c
  1660   00246A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1661   00246C  B0D8               	btfsc	status,0,c
  1662   00246E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1663   002470  0E01               	movlw	1
  1664   002472  6E06               	movwf	___awdiv@sign^0,c
  1665   002474                     l1203:
  1666   002474  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1667   002476  EF41  F012         	goto	u690
  1668   00247A  EF3F  F012         	goto	u691
  1669   00247E                     u691:
  1670   00247E  EF47  F012         	goto	l1209
  1671   002482                     u690:
  1672   002482  6C01               	negf	___awdiv@dividend^0,c
  1673   002484  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1674   002486  B0D8               	btfsc	status,0,c
  1675   002488  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1676   00248A  0E01               	movlw	1
  1677   00248C  1A06               	xorwf	___awdiv@sign^0,f,c
  1678   00248E                     l1209:
  1679   00248E  0E00               	movlw	0
  1680   002490  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1681   002492  0E00               	movlw	0
  1682   002494  6E07               	movwf	___awdiv@quotient^0,c
  1683   002496  5003               	movf	___awdiv@divisor^0,w,c
  1684   002498  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1685   00249A  B4D8               	btfsc	status,2,c
  1686   00249C  EF52  F012         	goto	u701
  1687   0024A0  EF54  F012         	goto	u700
  1688   0024A4                     u701:
  1689   0024A4  EF7C  F012         	goto	l1231
  1690   0024A8                     u700:
  1691   0024A8  0E01               	movlw	1
  1692   0024AA  6E05               	movwf	___awdiv@counter^0,c
  1693   0024AC  EF5C  F012         	goto	l1217
  1694   0024B0                     l1215:
  1695   0024B0  90D8               	bcf	status,0,c
  1696   0024B2  3603               	rlcf	___awdiv@divisor^0,f,c
  1697   0024B4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1698   0024B6  2A05               	incf	___awdiv@counter^0,f,c
  1699   0024B8                     l1217:
  1700   0024B8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1701   0024BA  EF61  F012         	goto	u711
  1702   0024BE  EF63  F012         	goto	u710
  1703   0024C2                     u711:
  1704   0024C2  EF58  F012         	goto	l1215
  1705   0024C6                     u710:
  1706   0024C6                     l1219:
  1707   0024C6  90D8               	bcf	status,0,c
  1708   0024C8  3607               	rlcf	___awdiv@quotient^0,f,c
  1709   0024CA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1710   0024CC  5003               	movf	___awdiv@divisor^0,w,c
  1711   0024CE  5C01               	subwf	___awdiv@dividend^0,w,c
  1712   0024D0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1713   0024D2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1714   0024D4  A0D8               	btfss	status,0,c
  1715   0024D6  EF6F  F012         	goto	u721
  1716   0024DA  EF71  F012         	goto	u720
  1717   0024DE                     u721:
  1718   0024DE  EF76  F012         	goto	l1227
  1719   0024E2                     u720:
  1720   0024E2  5003               	movf	___awdiv@divisor^0,w,c
  1721   0024E4  5E01               	subwf	___awdiv@dividend^0,f,c
  1722   0024E6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1723   0024E8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1724   0024EA  8007               	bsf	___awdiv@quotient^0,0,c
  1725   0024EC                     l1227:
  1726   0024EC  90D8               	bcf	status,0,c
  1727   0024EE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1728   0024F0  3203               	rrcf	___awdiv@divisor^0,f,c
  1729   0024F2  2E05               	decfsz	___awdiv@counter^0,f,c
  1730   0024F4  EF63  F012         	goto	l1219
  1731   0024F8                     l1231:
  1732   0024F8  5006               	movf	___awdiv@sign^0,w,c
  1733   0024FA  B4D8               	btfsc	status,2,c
  1734   0024FC  EF82  F012         	goto	u731
  1735   002500  EF84  F012         	goto	u730
  1736   002504                     u731:
  1737   002504  EF88  F012         	goto	l1235
  1738   002508                     u730:
  1739   002508  6C07               	negf	___awdiv@quotient^0,c
  1740   00250A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1741   00250C  B0D8               	btfsc	status,0,c
  1742   00250E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1743   002510                     l1235:
  1744   002510  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1745   002514  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1746   002518  0012               	return		;funcret
  1747   00251A                     __end_of___awdiv:
  1748                           	callstack 0
  1749                           
  1750                           	psect	smallconst
  1751   002000                     __psmallconst:
  1752                           	callstack 0
  1753   002000  00                 	db	0
  1754   002001  00                 	db	0	; dummy byte at the end
  1755   000000                     
  1756                           	psect	rparam
  1757   000000                     
  1758                           	psect	config
  1759                           
  1760                           ;Config register CONFIG1L @ 0x300000
  1761                           ;	External Oscillator Selection
  1762                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1763                           ;	Reset Oscillator Selection
  1764                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1765   300000                     	org	3145728
  1766   300000  F8                 	db	248
  1767                           
  1768                           ;Config register CONFIG1H @ 0x300001
  1769                           ;	Clock out Enable bit
  1770                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1771                           ;	PRLOCKED One-Way Set Enable bit
  1772                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1773                           ;	Clock Switch Enable bit
  1774                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1775                           ;	Fail-Safe Clock Monitor Enable bit
  1776                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1777   300001                     	org	3145729
  1778   300001  FF                 	db	255
  1779                           
  1780                           ;Config register CONFIG2L @ 0x300002
  1781                           ;	MCLR Enable bit
  1782                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1783                           ;	Power-up timer selection bits
  1784                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1785                           ;	Multi-vector enable bit
  1786                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1787                           ;	IVTLOCK bit One-way set enable bit
  1788                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1789                           ;	Low Power BOR Enable bit
  1790                           ;	LPBOREN = OFF, ULPBOR disabled
  1791                           ;	Brown-out Reset Enable bits
  1792                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1793   300002                     	org	3145730
  1794   300002  FF                 	db	255
  1795                           
  1796                           ;Config register CONFIG2H @ 0x300003
  1797                           ;	Brown-out Reset Voltage Selection bits
  1798                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1799                           ;	ZCD Disable bit
  1800                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1801                           ;	PPSLOCK bit One-Way Set Enable bit
  1802                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1803                           ;	Stack Full/Underflow Reset Enable bit
  1804                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1805                           ;	Debugger Enable bit
  1806                           ;	DEBUG = OFF, Background debugger disabled
  1807                           ;	Extended Instruction Set Enable bit
  1808                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1809   300003                     	org	3145731
  1810   300003  FF                 	db	255
  1811                           
  1812                           ;Config register CONFIG3L @ 0x300004
  1813                           ;	WDT Period selection bits
  1814                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1815                           ;	WDT operating mode
  1816                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1817   300004                     	org	3145732
  1818   300004  9F                 	db	159
  1819                           
  1820                           ;Config register CONFIG3H @ 0x300005
  1821                           ;	WDT Window Select bits
  1822                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1823                           ;	WDT input clock selector
  1824                           ;	WDTCCS = SC, Software Control
  1825   300005                     	org	3145733
  1826   300005  FF                 	db	255
  1827                           
  1828                           ;Config register CONFIG4L @ 0x300006
  1829                           ;	Boot Block Size selection bits
  1830                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1831                           ;	Boot Block enable bit
  1832                           ;	BBEN = OFF, Boot block disabled
  1833                           ;	Storage Area Flash enable bit
  1834                           ;	SAFEN = OFF, SAF disabled
  1835                           ;	Application Block write protection bit
  1836                           ;	WRTAPP = OFF, Application Block not write protected
  1837   300006                     	org	3145734
  1838   300006  FF                 	db	255
  1839                           
  1840                           ;Config register CONFIG4H @ 0x300007
  1841                           ;	Boot Block Write Protection bit
  1842                           ;	WRTB = OFF, Boot Block not write-protected
  1843                           ;	Configuration Register Write Protection bit
  1844                           ;	WRTC = OFF, Configuration registers not write-protected
  1845                           ;	Data EEPROM Write Protection bit
  1846                           ;	WRTD = OFF, Data EEPROM not write-protected
  1847                           ;	SAF Write protection bit
  1848                           ;	WRTSAF = OFF, SAF not Write Protected
  1849                           ;	Low Voltage Programming Enable bit
  1850                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1851   300007                     	org	3145735
  1852   300007  FF                 	db	255
  1853                           
  1854                           ;Config register CONFIG5L @ 0x300008
  1855                           ;	PFM and Data EEPROM Code Protection bit
  1856                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1857   300008                     	org	3145736
  1858   300008  FF                 	db	255
  1859                           
  1860                           ;Config register CONFIG5H @ 0x300009
  1861                           ;	unspecified, using default values
  1862   300009                     	org	3145737
  1863   300009  FF                 	db	255
  1864                           tosu	equ	0x3FFF
  1865                           tosh	equ	0x3FFE
  1866                           tosl	equ	0x3FFD
  1867                           stkptr	equ	0x3FFC
  1868                           pclatu	equ	0x3FFB
  1869                           pclath	equ	0x3FFA
  1870                           pcl	equ	0x3FF9
  1871                           tblptru	equ	0x3FF8
  1872                           tblptrh	equ	0x3FF7
  1873                           tblptrl	equ	0x3FF6
  1874                           tablat	equ	0x3FF5
  1875                           prodh	equ	0x3FF4
  1876                           prodl	equ	0x3FF3
  1877                           indf0	equ	0x3FEF
  1878                           postinc0	equ	0x3FEE
  1879                           postdec0	equ	0x3FED
  1880                           preinc0	equ	0x3FEC
  1881                           plusw0	equ	0x3FEB
  1882                           fsr0h	equ	0x3FEA
  1883                           fsr0l	equ	0x3FE9
  1884                           wreg	equ	0x3FE8
  1885                           indf1	equ	0x3FE7
  1886                           postinc1	equ	0x3FE6
  1887                           postdec1	equ	0x3FE5
  1888                           preinc1	equ	0x3FE4
  1889                           plusw1	equ	0x3FE3
  1890                           fsr1h	equ	0x3FE2
  1891                           fsr1l	equ	0x3FE1
  1892                           bsr	equ	0x3FE0
  1893                           indf2	equ	0x3FDF
  1894                           postinc2	equ	0x3FDE
  1895                           postdec2	equ	0x3FDD
  1896                           preinc2	equ	0x3FDC
  1897                           plusw2	equ	0x3FDB
  1898                           fsr2h	equ	0x3FDA
  1899                           fsr2l	equ	0x3FD9
  1900                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2243
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          8     8      0    1457
                                              8 COMRAM     8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     10      15       1       22.1%
STACK                0      0       0       2        0.0%
DATA                 0      0      15       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      15      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhll        4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 16:48:01 2024

           PORT_Output@i 000B                       l60 2266                       l53 26E4  
                     l73 2364                       l85 2454                       l95 2646  
                     l88 261C                       l89 25D2                       l98 2664  
                     l99 267C          ?_scan_operation 0001             ___awdiv@sign 0006  
                    l102 26B8                      l115 2118                      l126 21F8  
                    l127 21F6                      l129 220A                      l540 2782  
                    l365 2518                      l378 25C8                      l921 228C  
                    l913 2256                      l931 22B0                      l923 229A  
                    l915 2276                      l941 22D8                      l933 22B4  
                    l925 229E                      l917 227A                      l951 22FC  
                    l943 22E6                      l935 22C2                      l927 22A0  
                    l919 2288                      l961 2324                      l953 2300  
                    l945 22EA                      l937 22C6                      l929 22A2  
                    l971 235C                      l955 230E                      l947 22EC  
                    l939 22D4                      l963 2326                      l981 2398  
                    l973 2374                      l965 2338                      l957 2312  
                    l949 22EE                      l991 23B2                      l983 239C  
                    l975 2378                      l967 2350                      l959 2320  
                    l993 23C0                      l985 239E                      l977 2386  
                    l969 2358                      l995 23C4                      l987 23A0  
                    l979 238A                      l997 23D2                      l989 23AE  
                    l999 23D6                      u200 22C2                      u201 22BE  
                    u210 22D4                      u211 22D0                      u300 23AE  
                    u220 22E6                      u301 23AA                      u221 22E2  
                    u310 23C0                      u230 22FC                      u311 23BC  
                    u231 22F8                      u320 23D2                      u240 230E  
                    u160 2276                      u400 2606                      u321 23CE  
                    u241 230A                      u161 2272                      u401 2602  
                    u330 23E4                      u250 2320                      u170 2288  
                    u410 2618                      u331 23E0                      u251 231C  
                    u171 2284                      u411 2614                      u340 23FA  
                    u260 2338                      u180 229A                      u420 262C  
                    u341 23F6                      u261 2334                      u181 2296  
                    u421 2628                      u350 240C                      u270 2374  
                    u190 22B0                      u351 2408                      u271 2370  
                    u191 22AC                      u360 241E                      u280 2386  
                    u361 241A                      u281 2382                      u370 2436  
                    u290 2398                      u371 2432                      u291 2394  
                    u700 24A8                      u380 25E2                      u701 24A4  
                    u381 25DE                      u710 24C6                      u390 25F4  
                    u711 24C2                      u391 25F0                      u720 24E2  
                    u800 273E                      u721 24DE                      u801 273A  
                    u730 2508                      u810 275A                      u731 2504  
                    u811 2756                      u740 252C                      u900 2090  
                    u820 2770                      u741 2528                      u901 208C  
                    u821 276C                      u750 2546                      u910 20A6  
                    u830 265E                      u751 2542                      u911 20A2  
                    u831 265A                      u680 2468                      u760 2560  
                    u920 20BC                      u840 2676                      u681 2464  
                    u761 255C                      u921 20B8                      u841 2672  
                    u690 2482                      u770 257E                      u930 20D2  
                    u850 268E                      u691 247E                      u771 257A  
                    u931 20CE                      u851 268A                      u780 2594  
                    u940 20E8                      u860 26AA                      u781 2590  
                    u941 20E4                      u861 26A6                      u790 25B8  
                    u950 20FE                      u870 2050                      u791 25B4  
                    u951 20FA                      u871 204C                      u960 2114  
                    u880 2064                      u961 2110                      u881 2060  
                    u970 2128                      u890 207A                      u971 2124  
                    u891 2076                      u980 213C                      u981 2138  
                    u990 2152                      u991 214E             ___awmod@sign 0006  
                    wreg 3FE8                     l1001 23E4                     l1011 23FE  
                   l1003 23E8                     l1013 240C                     l1005 23EA  
                   l1021 2424                     l1023 2436                     l1015 2410  
                   l1007 23EC                     l1031 25CA                     l1201 2470  
                   l1025 243A                     l1017 241E                     l1009 23FA  
                   l1041 2606                     l1033 25E2                     l1211 2496  
                   l1203 2474                     l1027 2452                     l1019 2422  
                   l1043 260A                     l1035 25E6                     l1221 24CC  
                   l1213 24A8                     l1205 2482                     l1301 264A  
                   l1045 2618                     l1037 25F4                     l1223 24E2  
                   l1215 24B0                     l1231 24F8                     l1207 248A  
                   l1311 2698                     l1303 264E                     l1047 262C  
                   l1039 25F8                     l1233 2508                     l1225 24EA  
                   l1217 24B8                     l1209 248E                     l1241 251E  
                   l1401 21EC                     l1313 26AA                     l1305 265E  
                   l1049 2644                     l1235 2510                     l1227 24EC  
                   l1219 24C6                     l1251 254E                     l1243 252C  
                   l1411 222A                     l1403 21F0                     l1331 2064  
                   l1323 2014                     l1315 26B6                     l1307 2676  
                   l1229 24F2                     l1261 2594                     l1253 2560  
                   l1245 2534                     l1413 222C                     l1405 2206  
                   l1341 2094                     l1333 2068                     l1325 2040  
                   l1309 268E                     l1271 25C0                     l1263 259C  
                   l1255 2568                     l1247 2538                     l1239 251A  
                   l1415 222E                     l1351 20D2                     l1343 20A6  
                   l1335 207A                     l1327 2050                     l1319 2004  
                   l1431 26E2                     l1423 26BA                     l1265 25A2  
                   l1257 2570                     l1249 2546                     l1417 224C  
                   l1409 2212                     l1361 2102                     l1353 20D6  
                   l1345 20AA                     l1337 207E                     l1329 2054  
                   l1281 2746                     l1441 271A                     l1433 26F8  
                   l1425 26BC                     l1195 2456                     l1259 257E  
                   l1267 25A8                     l1419 224E                     l1371 2140  
                   l1363 2114                     l1355 20E8                     l1347 20BC  
                   l1339 2090                     l1291 2774                     l1283 274A  
                   l1275 272A                     l1435 26FE                     l1427 26DA  
                   l1197 245A                     l1269 25B8                     l1381 217E  
                   l1373 2152                     l1365 2128                     l1357 20EC  
                   l1349 20C0                     l1293 2776                     l1285 274C  
                   l1277 272E                     l1437 2704                     l1429 26E0  
                   l1199 2468                     l1391 21AE                     l1383 2182  
                   l1375 2156                     l1367 212C                     l1359 20FE  
                   l1295 277A                     l1287 275A                     l1279 273E  
                   l1439 270A                     l1393 21C0                     l1385 2194  
                   l1377 2168                     l1369 213C                     l1289 2770  
                   l1297 2780                     l1395 21C4                     l1387 2198  
                   l1379 216C                     l1397 21D6                     l1389 21AA  
                   l1399 21DA                     u1000 2168                     u1001 2164  
                   u1010 217E                     u1011 217A                     u1020 2194  
                   u1021 2190                     u1030 21AA                     u1031 21A6  
                   u1040 21C0                     u1041 21BC                     u1050 21D6  
                   u1051 21D2                     u1107 2444                     u1060 21EC  
                   u1117 221C                     u1061 21E8                     u1070 2206  
                   u1127 223E                     u1071 2202                     u1087 2636  
                   u1097 2342                     _main 26BA                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 251A          __end_of___lbdiv 2784          __end_of___awmod 25CA  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTB 3FCB  
                  _PORTC 3FCC                    _PORTD 3FCD                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
      PORT_Output@answer 000C                    status 3FD8          ___lbdiv@divisor 0001  
        ___lbdiv@counter 0003             ?_scan_number 0001          __initialization 2784  
           __end_of_main 2728                   ??_main 0011            __activetblptr 0000  
       ___awdiv@dividend 0001                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELC 3A60                   _ANSELD 3A70                ??___awdiv 0005  
              ??___lbdiv 0002                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 0001          ___awmod@counter 0005  
           __mediumconst 0000             ?_PORT_Output 0001         ___lbdiv@dividend 0002  
             __accesstop 0060  __end_of__initialization 2784            ___rparam_used 0001  
       ??_scan_operation 0001           __pcstackCOMRAM 0001         scan_number@count 0004  
       scan_number@input 0006         ___lbdiv@quotient 0004              _X_Input_REG 0015  
            _Y_Input_REG 0014               __pnvCOMRAM 0011        __end_of_calculate 26BA  
    PORT_Output@display1 000D      PORT_Output@display2 000E                  __Hparam 0000  
             calculate@x 0008               calculate@y 0005                  __Lparam 0000  
                ___awdiv 2456                  ___lbdiv 2728                  ___awmod 251A  
           __psmallconst 2000                  __pcinit 2784                  __ramtop 2000  
                __ptext0 26BA                  __ptext1 25CA                  __ptext2 2256  
                __ptext3 2648                  __ptext4 2728                  __ptext5 2002  
                __ptext6 251A                  __ptext7 2456         ___awmod@dividend 0001  
   end_of_initialization 2784                _PORTAbits 3FCA                _PORTBbits 3FCB  
              _PORTCbits 3FCC            _Operation_REG 0013        scan_number@button 0003  
    start_initialization 2784        scan_number@output 0005              _calculation 0012  
  PORT_Output@second_dig 0010                _calculate 2648            ??_scan_number 0001  
               ?___awdiv 0001                 ?___lbdiv 0001                 ?___awmod 0001  
            __smallconst 2000               ?_calculate 0005          calculate@output 0007  
    __end_of_scan_number 2456            ??_PORT_Output 0009     PORT_Output@first_dig 000F  
            calculate@op 0006                 __Hrparam 0000                 __Lrparam 0000  
    __end_of_PORT_Output 2256              ??_calculate 0007              _scan_number 2256  
               isa$xinst 0000           _scan_operation 25CA       _Display_Result_REG 0011  
   scan_operation@op_key 0003   __end_of_scan_operation 2648              _PORT_Output 2002  
