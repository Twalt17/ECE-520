

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 13:35:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	nvCOMRAM
    57   00000F                     __pnvCOMRAM:
    58                           	callstack 0
    59   00000F                     _calculation:
    60                           	callstack 0
    61   00000F                     	ds	1
    62   000010                     _Operation_REG:
    63                           	callstack 0
    64   000010                     	ds	1
    65   000011                     _Y_Input_REG:
    66                           	callstack 0
    67   000011                     	ds	1
    68   000012                     _X_Input_REG:
    69                           	callstack 0
    70   000012                     	ds	1
    71   000000                     _ANSELA	set	14912
    72   000000                     _TRISA	set	16322
    73   000000                     _TRISD	set	16325
    74   000000                     _TRISB	set	16323
    75   000000                     _ANSELB	set	14928
    76   000000                     _ANSELD	set	14960
    77   000000                     _PORTAbits	set	16330
    78   000000                     _PORTBbits	set	16331
    79   000000                     _PORTD	set	16333
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   0026F4                     __pcinit:
    85                           	callstack 0
    86   0026F4                     start_initialization:
    87                           	callstack 0
    88   0026F4                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (1 bytes)
    92   0026F4  6A13               	clrf	__pbssCOMRAM& (0+255),c
    93   0026F6                     end_of_initialization:
    94                           	callstack 0
    95   0026F6                     __end_of__initialization:
    96                           	callstack 0
    97   0026F6  0100               	movlb	0
    98   0026F8  EF58  F013         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000013                     __pbssCOMRAM:
   102                           	callstack 0
   103   000013                     _Display_Result_REG:
   104                           	callstack 0
   105   000013                     	ds	1
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     ??_scan_number:
   111   000001                     ??_scan_operation:
   112   000001                     ?___awdiv:
   113                           	callstack 0
   114   000001                     ?___awmod:
   115                           	callstack 0
   116   000001                     ___lbdiv@divisor:
   117                           	callstack 0
   118   000001                     ___awdiv@dividend:
   119                           	callstack 0
   120   000001                     ___awmod@dividend:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124   000001                     	ds	1
   125   000002                     scan_number@button:
   126                           	callstack 0
   127   000002                     scan_operation@op_key:
   128                           	callstack 0
   129   000002                     ___lbdiv@dividend:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x1
   133   000002                     	ds	1
   134   000003                     scan_number@count:
   135                           	callstack 0
   136   000003                     ___lbdiv@counter:
   137                           	callstack 0
   138   000003                     ___awdiv@divisor:
   139                           	callstack 0
   140   000003                     ___awmod@divisor:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x2
   144   000003                     	ds	1
   145   000004                     scan_number@output:
   146                           	callstack 0
   147   000004                     ___lbdiv@quotient:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x3
   151   000004                     	ds	1
   152   000005                     scan_number@input:
   153                           	callstack 0
   154   000005                     calculate@y:
   155                           	callstack 0
   156   000005                     ___awdiv@counter:
   157                           	callstack 0
   158   000005                     ___awmod@counter:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x4
   162   000005                     	ds	1
   163   000006                     calculate@op:
   164                           	callstack 0
   165   000006                     ___awdiv@sign:
   166                           	callstack 0
   167   000006                     ___awmod@sign:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x5
   171   000006                     	ds	1
   172   000007                     calculate@output:
   173                           	callstack 0
   174   000007                     ___awdiv@quotient:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178   000007                     	ds	1
   179   000008                     calculate@x:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x7
   183   000008                     	ds	1
   184   000009                     PORT_Output@i:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x8
   188   000009                     	ds	1
   189   00000A                     PORT_Output@answer:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x9
   193   00000A                     	ds	1
   194   00000B                     PORT_Output@display1:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0xA
   198   00000B                     	ds	1
   199   00000C                     PORT_Output@display2:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xB
   203   00000C                     	ds	1
   204   00000D                     PORT_Output@first_dig:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xC
   208   00000D                     	ds	1
   209   00000E                     PORT_Output@second_dig:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0xD
   213   00000E                     	ds	1
   214   00000F                     
   215                           ; 1 bytes @ 0xE
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 25 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 2
   241 ;; This function calls:
   242 ;;		_PORT_Output
   243 ;;		_calculate
   244 ;;		_scan_number
   245 ;;		_scan_operation
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252   0026B0                     __ptext0:
   253                           	callstack 0
   254   0026B0                     _main:
   255                           	callstack 29
   256   0026B0                     
   257                           ;main.c: 26:     TRISA = 0xFF;
   258   0026B0  68C2               	setf	194,c	;volatile
   259   0026B2                     
   260                           ;main.c: 27:     ANSELA = 0;
   261   0026B2  0E00               	movlw	0
   262   0026B4  013A               	movlb	58	; () banked
   263   0026B6  6F40               	movwf	64,b	;volatile
   264                           
   265                           ;main.c: 28:     TRISB = 0;
   266   0026B8  0E00               	movlw	0
   267   0026BA  6EC3               	movwf	195,c	;volatile
   268                           
   269                           ;main.c: 29:     ANSELB = 0;
   270   0026BC  0E00               	movlw	0
   271   0026BE  6F50               	movwf	80,b	;volatile
   272                           
   273                           ;main.c: 30:     ANSELD = 0;
   274   0026C0  0E00               	movlw	0
   275   0026C2  6F70               	movwf	112,b	;volatile
   276                           
   277                           ;main.c: 31:     TRISD = 0;
   278   0026C4  0E00               	movlw	0
   279   0026C6  6EC5               	movwf	197,c	;volatile
   280   0026C8                     
   281                           ; BSR set to: 58
   282                           ;main.c: 33:     X_Input_REG = scan_number();
   283   0026C8  EC10  F011         	call	_scan_number	;wreg free
   284   0026CC  6E12               	movwf	_X_Input_REG^0,c
   285   0026CE                     
   286                           ;main.c: 34:     Operation_REG = scan_operation();
   287   0026CE  ECB7  F012         	call	_scan_operation	;wreg free
   288   0026D2  6E10               	movwf	_Operation_REG^0,c
   289   0026D4                     
   290                           ;main.c: 35:     Y_Input_REG = scan_number();
   291   0026D4  EC10  F011         	call	_scan_number	;wreg free
   292   0026D8  6E11               	movwf	_Y_Input_REG^0,c
   293   0026DA                     
   294                           ;main.c: 36:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   295   0026DA  C011  F005         	movff	_Y_Input_REG,calculate@y
   296   0026DE  C010  F006         	movff	_Operation_REG,calculate@op
   297   0026E2  5012               	movf	_X_Input_REG^0,w,c
   298   0026E4  ECF1  F012         	call	_calculate
   299   0026E8  6E0F               	movwf	_calculation^0,c
   300   0026EA                     
   301                           ;main.c: 37:     PORT_Output(calculation);
   302   0026EA  500F               	movf	_calculation^0,w,c
   303   0026EC  EC01  F010         	call	_PORT_Output
   304   0026F0  EFFE  F0FF         	goto	start
   305   0026F4                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _scan_operation *****************
   309 ;; Defined at:
   310 ;;		line 100 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  op_key          1    1[COMRAM] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      unsigned char 
   317 ;; Registers used:
   318 ;;		wreg, status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;Total ram usage:        2 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338   00256E                     __ptext1:
   339                           	callstack 0
   340   00256E                     _scan_operation:
   341                           	callstack 30
   342   00256E                     
   343                           ;main.c: 101:     unsigned char op_key = 0;
   344   00256E  0E00               	movlw	0
   345   002570  6E02               	movwf	scan_operation@op_key^0,c
   346                           
   347                           ;main.c: 102:     while (op_key ==0) {
   348   002572  EFE0  F012         	goto	l74
   349   002576                     l75:
   350                           
   351                           ;main.c: 103:      PORTBbits.RB0 = 1;
   352   002576  80CB               	bsf	203,0,c	;volatile
   353                           
   354                           ;main.c: 104:         if(PORTAbits.RA0 == 1) op_key = 1;
   355   002578  A0CA               	btfss	202,0,c	;volatile
   356   00257A  EFC1  F012         	goto	u371
   357   00257E  EFC3  F012         	goto	u370
   358   002582                     u371:
   359   002582  EFC5  F012         	goto	l1017
   360   002586                     u370:
   361   002586  0E01               	movlw	1
   362   002588  6E02               	movwf	scan_operation@op_key^0,c
   363   00258A                     l1017:
   364                           
   365                           ;main.c: 105:         if(PORTAbits.RA1 == 1) op_key = 2;
   366   00258A  A2CA               	btfss	202,1,c	;volatile
   367   00258C  EFCA  F012         	goto	u381
   368   002590  EFCC  F012         	goto	u380
   369   002594                     u381:
   370   002594  EFCE  F012         	goto	l1021
   371   002598                     u380:
   372   002598  0E02               	movlw	2
   373   00259A  6E02               	movwf	scan_operation@op_key^0,c
   374   00259C                     l1021:
   375                           
   376                           ;main.c: 106:         if(PORTAbits.RA2 == 1) op_key = 3;
   377   00259C  A4CA               	btfss	202,2,c	;volatile
   378   00259E  EFD3  F012         	goto	u391
   379   0025A2  EFD5  F012         	goto	u390
   380   0025A6                     u391:
   381   0025A6  EFD7  F012         	goto	l1025
   382   0025AA                     u390:
   383   0025AA  0E03               	movlw	3
   384   0025AC  6E02               	movwf	scan_operation@op_key^0,c
   385   0025AE                     l1025:
   386                           
   387                           ;main.c: 107:         if(PORTAbits.RA3 == 1) op_key = 4;
   388   0025AE  A6CA               	btfss	202,3,c	;volatile
   389   0025B0  EFDC  F012         	goto	u401
   390   0025B4  EFDE  F012         	goto	u400
   391   0025B8                     u401:
   392   0025B8  EFE0  F012         	goto	l74
   393   0025BC                     u400:
   394   0025BC  0E04               	movlw	4
   395   0025BE  6E02               	movwf	scan_operation@op_key^0,c
   396   0025C0                     l74:
   397                           
   398                           ;main.c: 102:     while (op_key ==0) {
   399   0025C0  5002               	movf	scan_operation@op_key^0,w,c
   400   0025C2  B4D8               	btfsc	status,2,c
   401   0025C4  EFE6  F012         	goto	u411
   402   0025C8  EFE8  F012         	goto	u410
   403   0025CC                     u411:
   404   0025CC  EFBB  F012         	goto	l75
   405   0025D0                     u410:
   406   0025D0                     
   407                           ;main.c: 109:         _delay((unsigned long)((1)*(8000000/4000.0)));
   408   0025D0  0E03               	movlw	3
   409   0025D2  6E01               	movwf	??_scan_operation^0,c
   410   0025D4  0E98               	movlw	152
   411   0025D6                     u1077:
   412   0025D6  2EE8               	decfsz	wreg,f,c
   413   0025D8  D7FE               	bra	u1077
   414   0025DA  2E01               	decfsz	??_scan_operation^0,f,c
   415   0025DC  D7FC               	bra	u1077
   416   0025DE                     
   417                           ;main.c: 110:         return op_key;
   418   0025DE  5002               	movf	scan_operation@op_key^0,w,c
   419   0025E0  0012               	return		;funcret
   420   0025E2                     __end_of_scan_operation:
   421                           	callstack 0
   422                           
   423 ;; *************** function _scan_number *****************
   424 ;; Defined at:
   425 ;;		line 41 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  input           1    4[COMRAM] unsigned char 
   430 ;;  output          1    3[COMRAM] unsigned char 
   431 ;;  count           1    2[COMRAM] unsigned char 
   432 ;;  button          1    1[COMRAM] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      unsigned char 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, prodl, prodh
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   443 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   446 ;;Total ram usage:        5 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text2
   456   002220                     __ptext2:
   457                           	callstack 0
   458   002220                     _scan_number:
   459                           	callstack 30
   460   002220                     
   461                           ;main.c: 42:     unsigned char input = 10;
   462   002220  0E0A               	movlw	10
   463   002222  6E05               	movwf	scan_number@input^0,c
   464                           
   465                           ;main.c: 44:     unsigned char button = 0;
   466   002224  0E00               	movlw	0
   467   002226  6E02               	movwf	scan_number@button^0,c
   468                           
   469                           ;main.c: 45:     unsigned char count = 2;
   470   002228  0E02               	movlw	2
   471   00222A  6E03               	movwf	scan_number@count^0,c
   472                           
   473                           ;main.c: 47:     while (input == 10)
   474   00222C  EF6F  F011         	goto	l945
   475   002230                     l47:
   476                           
   477                           ;main.c: 48:     {;main.c: 49:         PORTBbits.RB0 = 1;
   478   002230  80CB               	bsf	203,0,c	;volatile
   479                           
   480                           ;main.c: 50:         if (PORTAbits.RA0 == 1)input = 1;
   481   002232  A0CA               	btfss	202,0,c	;volatile
   482   002234  EF1E  F011         	goto	u161
   483   002238  EF20  F011         	goto	u160
   484   00223C                     u161:
   485   00223C  EF22  F011         	goto	l903
   486   002240                     u160:
   487   002240  0E01               	movlw	1
   488   002242  6E05               	movwf	scan_number@input^0,c
   489   002244                     l903:
   490                           
   491                           ;main.c: 51:         if(PORTAbits.RA1 == 1) input = 2;
   492   002244  A2CA               	btfss	202,1,c	;volatile
   493   002246  EF27  F011         	goto	u171
   494   00224A  EF29  F011         	goto	u170
   495   00224E                     u171:
   496   00224E  EF2B  F011         	goto	l907
   497   002252                     u170:
   498   002252  0E02               	movlw	2
   499   002254  6E05               	movwf	scan_number@input^0,c
   500   002256                     l907:
   501                           
   502                           ;main.c: 52:         if(PORTAbits.RA2 == 1) input = 3;
   503   002256  A4CA               	btfss	202,2,c	;volatile
   504   002258  EF30  F011         	goto	u181
   505   00225C  EF32  F011         	goto	u180
   506   002260                     u181:
   507   002260  EF34  F011         	goto	l911
   508   002264                     u180:
   509   002264  0E03               	movlw	3
   510   002266  6E05               	movwf	scan_number@input^0,c
   511   002268                     l911:
   512                           
   513                           ;main.c: 53:         PORTBbits.RB0 = 0;
   514   002268  90CB               	bcf	203,0,c	;volatile
   515   00226A                     
   516                           ;main.c: 55:          PORTBbits.RB1 = 1;
   517   00226A  82CB               	bsf	203,1,c	;volatile
   518   00226C                     
   519                           ;main.c: 56:         if (PORTAbits.RA0 == 1)input = 4;
   520   00226C  A0CA               	btfss	202,0,c	;volatile
   521   00226E  EF3B  F011         	goto	u191
   522   002272  EF3D  F011         	goto	u190
   523   002276                     u191:
   524   002276  EF3F  F011         	goto	l919
   525   00227A                     u190:
   526   00227A  0E04               	movlw	4
   527   00227C  6E05               	movwf	scan_number@input^0,c
   528   00227E                     l919:
   529                           
   530                           ;main.c: 57:         if(PORTAbits.RA1 == 1) input = 5;
   531   00227E  A2CA               	btfss	202,1,c	;volatile
   532   002280  EF44  F011         	goto	u201
   533   002284  EF46  F011         	goto	u200
   534   002288                     u201:
   535   002288  EF48  F011         	goto	l923
   536   00228C                     u200:
   537   00228C  0E05               	movlw	5
   538   00228E  6E05               	movwf	scan_number@input^0,c
   539   002290                     l923:
   540                           
   541                           ;main.c: 58:         if(PORTAbits.RA2 == 1) input = 6;
   542   002290  A4CA               	btfss	202,2,c	;volatile
   543   002292  EF4D  F011         	goto	u211
   544   002296  EF4F  F011         	goto	u210
   545   00229A                     u211:
   546   00229A  EF51  F011         	goto	l927
   547   00229E                     u210:
   548   00229E  0E06               	movlw	6
   549   0022A0  6E05               	movwf	scan_number@input^0,c
   550   0022A2                     l927:
   551                           
   552                           ;main.c: 59:         PORTBbits.RB1 = 0;
   553   0022A2  92CB               	bcf	203,1,c	;volatile
   554   0022A4                     
   555                           ;main.c: 61:          PORTBbits.RB2 = 1;
   556   0022A4  84CB               	bsf	203,2,c	;volatile
   557   0022A6                     
   558                           ;main.c: 62:         if (PORTAbits.RA0 == 1)input = 7;
   559   0022A6  A0CA               	btfss	202,0,c	;volatile
   560   0022A8  EF58  F011         	goto	u221
   561   0022AC  EF5A  F011         	goto	u220
   562   0022B0                     u221:
   563   0022B0  EF5C  F011         	goto	l935
   564   0022B4                     u220:
   565   0022B4  0E07               	movlw	7
   566   0022B6  6E05               	movwf	scan_number@input^0,c
   567   0022B8                     l935:
   568                           
   569                           ;main.c: 63:         if(PORTAbits.RA1 == 1) input = 8;
   570   0022B8  A2CA               	btfss	202,1,c	;volatile
   571   0022BA  EF61  F011         	goto	u231
   572   0022BE  EF63  F011         	goto	u230
   573   0022C2                     u231:
   574   0022C2  EF65  F011         	goto	l939
   575   0022C6                     u230:
   576   0022C6  0E08               	movlw	8
   577   0022C8  6E05               	movwf	scan_number@input^0,c
   578   0022CA                     l939:
   579                           
   580                           ;main.c: 64:         if(PORTAbits.RA2 == 1) input = 9;
   581   0022CA  A4CA               	btfss	202,2,c	;volatile
   582   0022CC  EF6A  F011         	goto	u241
   583   0022D0  EF6C  F011         	goto	u240
   584   0022D4                     u241:
   585   0022D4  EF6E  F011         	goto	l943
   586   0022D8                     u240:
   587   0022D8  0E09               	movlw	9
   588   0022DA  6E05               	movwf	scan_number@input^0,c
   589   0022DC                     l943:
   590                           
   591                           ;main.c: 65:         PORTBbits.RB2 = 0;
   592   0022DC  94CB               	bcf	203,2,c	;volatile
   593   0022DE                     l945:
   594                           
   595                           ;main.c: 47:     while (input == 10)
   596   0022DE  0E0A               	movlw	10
   597   0022E0  1805               	xorwf	scan_number@input^0,w,c
   598   0022E2  B4D8               	btfsc	status,2,c
   599   0022E4  EF76  F011         	goto	u251
   600   0022E8  EF78  F011         	goto	u250
   601   0022EC                     u251:
   602   0022EC  EF18  F011         	goto	l47
   603   0022F0                     u250:
   604   0022F0                     
   605                           ;main.c: 68:     _delay((unsigned long)((1)*(8000000/4000.0)));
   606   0022F0  0E03               	movlw	3
   607   0022F2  6E01               	movwf	??_scan_number^0,c
   608   0022F4  0E98               	movlw	152
   609   0022F6                     u1087:
   610   0022F6  2EE8               	decfsz	wreg,f,c
   611   0022F8  D7FE               	bra	u1087
   612   0022FA  2E01               	decfsz	??_scan_number^0,f,c
   613   0022FC  D7FC               	bra	u1087
   614   0022FE                     
   615                           ;main.c: 70:     input *=10;
   616   0022FE  0E0A               	movlw	10
   617   002300  0205               	mulwf	scan_number@input^0,c
   618   002302  50F3               	movf	prodl,w,c
   619   002304  6E05               	movwf	scan_number@input^0,c
   620   002306                     
   621                           ;main.c: 71:     output = input;
   622   002306  C005  F004         	movff	scan_number@input,scan_number@output
   623   00230A                     
   624                           ;main.c: 73:     input = 10;
   625   00230A  0E0A               	movlw	10
   626   00230C  6E05               	movwf	scan_number@input^0,c
   627                           
   628                           ;main.c: 74:     while (input == 10)
   629   00230E  EFE9  F011         	goto	l1003
   630   002312                     l59:
   631                           
   632                           ;main.c: 75:     {;main.c: 76:         PORTBbits.RB0 = 1;
   633   002312  80CB               	bsf	203,0,c	;volatile
   634                           
   635                           ;main.c: 77:         if (PORTAbits.RA0 == 1)input = 1;
   636   002314  A0CA               	btfss	202,0,c	;volatile
   637   002316  EF8F  F011         	goto	u261
   638   00231A  EF91  F011         	goto	u260
   639   00231E                     u261:
   640   00231E  EF93  F011         	goto	l957
   641   002322                     u260:
   642   002322  0E01               	movlw	1
   643   002324  6E05               	movwf	scan_number@input^0,c
   644   002326                     l957:
   645                           
   646                           ;main.c: 78:         if(PORTAbits.RA1 == 1) input = 4;
   647   002326  A2CA               	btfss	202,1,c	;volatile
   648   002328  EF98  F011         	goto	u271
   649   00232C  EF9A  F011         	goto	u270
   650   002330                     u271:
   651   002330  EF9C  F011         	goto	l961
   652   002334                     u270:
   653   002334  0E04               	movlw	4
   654   002336  6E05               	movwf	scan_number@input^0,c
   655   002338                     l961:
   656                           
   657                           ;main.c: 79:         if(PORTAbits.RA2 == 1) input = 7;
   658   002338  A4CA               	btfss	202,2,c	;volatile
   659   00233A  EFA1  F011         	goto	u281
   660   00233E  EFA3  F011         	goto	u280
   661   002342                     u281:
   662   002342  EFA5  F011         	goto	l965
   663   002346                     u280:
   664   002346  0E07               	movlw	7
   665   002348  6E05               	movwf	scan_number@input^0,c
   666   00234A                     l965:
   667                           
   668                           ;main.c: 80:         PORTBbits.RB0 = 0;
   669   00234A  90CB               	bcf	203,0,c	;volatile
   670   00234C                     
   671                           ;main.c: 82:          PORTBbits.RB1 = 1;
   672   00234C  82CB               	bsf	203,1,c	;volatile
   673   00234E                     
   674                           ;main.c: 83:         if(PORTAbits.RA0 == 1) input = 2;
   675   00234E  A0CA               	btfss	202,0,c	;volatile
   676   002350  EFAC  F011         	goto	u291
   677   002354  EFAE  F011         	goto	u290
   678   002358                     u291:
   679   002358  EFB0  F011         	goto	l973
   680   00235C                     u290:
   681   00235C  0E02               	movlw	2
   682   00235E  6E05               	movwf	scan_number@input^0,c
   683   002360                     l973:
   684                           
   685                           ;main.c: 84:         if(PORTAbits.RA1 == 1) input = 5;
   686   002360  A2CA               	btfss	202,1,c	;volatile
   687   002362  EFB5  F011         	goto	u301
   688   002366  EFB7  F011         	goto	u300
   689   00236A                     u301:
   690   00236A  EFB9  F011         	goto	l977
   691   00236E                     u300:
   692   00236E  0E05               	movlw	5
   693   002370  6E05               	movwf	scan_number@input^0,c
   694   002372                     l977:
   695                           
   696                           ;main.c: 85:         if(PORTAbits.RA2 == 1) input = 8;
   697   002372  A4CA               	btfss	202,2,c	;volatile
   698   002374  EFBE  F011         	goto	u311
   699   002378  EFC0  F011         	goto	u310
   700   00237C                     u311:
   701   00237C  EFC2  F011         	goto	l981
   702   002380                     u310:
   703   002380  0E08               	movlw	8
   704   002382  6E05               	movwf	scan_number@input^0,c
   705   002384                     l981:
   706                           
   707                           ;main.c: 86:         if(PORTAbits.RA3 == 1) input = 0;
   708   002384  A6CA               	btfss	202,3,c	;volatile
   709   002386  EFC7  F011         	goto	u321
   710   00238A  EFC9  F011         	goto	u320
   711   00238E                     u321:
   712   00238E  EFCB  F011         	goto	l985
   713   002392                     u320:
   714   002392  0E00               	movlw	0
   715   002394  6E05               	movwf	scan_number@input^0,c
   716   002396                     l985:
   717                           
   718                           ;main.c: 87:         PORTBbits.RB1 = 0;
   719   002396  92CB               	bcf	203,1,c	;volatile
   720   002398                     
   721                           ;main.c: 89:          PORTBbits.RB2 = 1;
   722   002398  84CB               	bsf	203,2,c	;volatile
   723   00239A                     
   724                           ;main.c: 90:         if (PORTAbits.RA0 == 1)input = 3;
   725   00239A  A0CA               	btfss	202,0,c	;volatile
   726   00239C  EFD2  F011         	goto	u331
   727   0023A0  EFD4  F011         	goto	u330
   728   0023A4                     u331:
   729   0023A4  EFD6  F011         	goto	l993
   730   0023A8                     u330:
   731   0023A8  0E03               	movlw	3
   732   0023AA  6E05               	movwf	scan_number@input^0,c
   733   0023AC                     l993:
   734                           
   735                           ;main.c: 91:         if(PORTAbits.RA1 == 1) input = 6;
   736   0023AC  A2CA               	btfss	202,1,c	;volatile
   737   0023AE  EFDB  F011         	goto	u341
   738   0023B2  EFDD  F011         	goto	u340
   739   0023B6                     u341:
   740   0023B6  EFDF  F011         	goto	l997
   741   0023BA                     u340:
   742   0023BA  0E06               	movlw	6
   743   0023BC  6E05               	movwf	scan_number@input^0,c
   744   0023BE                     l997:
   745                           
   746                           ;main.c: 92:         if(PORTAbits.RA2 == 1) input = 9;
   747   0023BE  A4CA               	btfss	202,2,c	;volatile
   748   0023C0  EFE4  F011         	goto	u351
   749   0023C4  EFE6  F011         	goto	u350
   750   0023C8                     u351:
   751   0023C8  EFE8  F011         	goto	l1001
   752   0023CC                     u350:
   753   0023CC  0E09               	movlw	9
   754   0023CE  6E05               	movwf	scan_number@input^0,c
   755   0023D0                     l1001:
   756                           
   757                           ;main.c: 93:         PORTBbits.RB2 = 0;
   758   0023D0  94CB               	bcf	203,2,c	;volatile
   759   0023D2                     l1003:
   760                           
   761                           ;main.c: 74:     while (input == 10)
   762   0023D2  0E0A               	movlw	10
   763   0023D4  1805               	xorwf	scan_number@input^0,w,c
   764   0023D6  B4D8               	btfsc	status,2,c
   765   0023D8  EFF0  F011         	goto	u361
   766   0023DC  EFF2  F011         	goto	u360
   767   0023E0                     u361:
   768   0023E0  EF89  F011         	goto	l59
   769   0023E4                     u360:
   770   0023E4                     
   771                           ;main.c: 95:     output += input;
   772   0023E4  5005               	movf	scan_number@input^0,w,c
   773   0023E6  2604               	addwf	scan_number@output^0,f,c
   774   0023E8                     
   775                           ;main.c: 96:     _delay((unsigned long)((1)*(8000000/4000.0)));
   776   0023E8  0E03               	movlw	3
   777   0023EA  6E01               	movwf	??_scan_number^0,c
   778   0023EC  0E98               	movlw	152
   779   0023EE                     u1097:
   780   0023EE  2EE8               	decfsz	wreg,f,c
   781   0023F0  D7FE               	bra	u1097
   782   0023F2  2E01               	decfsz	??_scan_number^0,f,c
   783   0023F4  D7FC               	bra	u1097
   784   0023F6                     
   785                           ;main.c: 97:     return output;
   786   0023F6  5004               	movf	scan_number@output^0,w,c
   787   0023F8  0012               	return		;funcret
   788   0023FA                     __end_of_scan_number:
   789                           	callstack 0
   790                           
   791 ;; *************** function _calculate *****************
   792 ;; Defined at:
   793 ;;		line 113 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  x               1    wreg     unsigned char 
   796 ;;  y               1    4[COMRAM] unsigned char 
   797 ;;  op              1    5[COMRAM] unsigned char 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  x               1    7[COMRAM] unsigned char 
   800 ;;  output          1    6[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      unsigned char 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   814 ;;Total ram usage:        4 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		___lbdiv
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825   0025E2                     __ptext3:
   826                           	callstack 0
   827   0025E2                     _calculate:
   828                           	callstack 29
   829                           
   830                           ;incstack = 0
   831                           ;calculate@x stored from wreg
   832   0025E2  6E08               	movwf	calculate@x^0,c
   833   0025E4                     
   834                           ;main.c: 114:     unsigned char output = 0;
   835   0025E4  0E00               	movlw	0
   836   0025E6  6E07               	movwf	calculate@output^0,c
   837   0025E8                     
   838                           ;main.c: 115:     if(op == 1)
   839   0025E8  0406               	decf	calculate@op^0,w,c
   840   0025EA  A4D8               	btfss	status,2,c
   841   0025EC  EFFA  F012         	goto	u821
   842   0025F0  EFFC  F012         	goto	u820
   843   0025F4                     u821:
   844   0025F4  EFFF  F012         	goto	l84
   845   0025F8                     u820:
   846   0025F8                     
   847                           ;main.c: 116:         output = x + y;
   848   0025F8  5008               	movf	calculate@x^0,w,c
   849   0025FA  2405               	addwf	calculate@y^0,w,c
   850   0025FC  6E07               	movwf	calculate@output^0,c
   851   0025FE                     l84:
   852                           
   853                           ;main.c: 117:     if(op ==2)
   854   0025FE  0E02               	movlw	2
   855   002600  1806               	xorwf	calculate@op^0,w,c
   856   002602  A4D8               	btfss	status,2,c
   857   002604  EF06  F013         	goto	u831
   858   002608  EF08  F013         	goto	u830
   859   00260C                     u831:
   860   00260C  EF0B  F013         	goto	l85
   861   002610                     u830:
   862   002610                     
   863                           ;main.c: 118:         output = x-y;
   864   002610  5005               	movf	calculate@y^0,w,c
   865   002612  5C08               	subwf	calculate@x^0,w,c
   866   002614  6E07               	movwf	calculate@output^0,c
   867   002616                     l85:
   868                           
   869                           ;main.c: 119:     if(op == 3)
   870   002616  0E03               	movlw	3
   871   002618  1806               	xorwf	calculate@op^0,w,c
   872   00261A  A4D8               	btfss	status,2,c
   873   00261C  EF12  F013         	goto	u841
   874   002620  EF14  F013         	goto	u840
   875   002624                     u841:
   876   002624  EF19  F013         	goto	l1279
   877   002628                     u840:
   878   002628                     
   879                           ;main.c: 120:         output = x*y;
   880   002628  5008               	movf	calculate@x^0,w,c
   881   00262A  0205               	mulwf	calculate@y^0,c
   882   00262C  006F FFCC  F007    	movff	prodl,calculate@output
   883   002632                     l1279:
   884                           
   885                           ;main.c: 121:     if(op == 4)
   886   002632  0E04               	movlw	4
   887   002634  1806               	xorwf	calculate@op^0,w,c
   888   002636  A4D8               	btfss	status,2,c
   889   002638  EF20  F013         	goto	u851
   890   00263C  EF22  F013         	goto	u850
   891   002640                     u851:
   892   002640  EF28  F013         	goto	l1283
   893   002644                     u850:
   894   002644                     
   895                           ;main.c: 122:         output = x/y;
   896   002644  C005  F001         	movff	calculate@y,___lbdiv@divisor
   897   002648  5008               	movf	calculate@x^0,w,c
   898   00264A  EC2A  F013         	call	___lbdiv
   899   00264E  6E07               	movwf	calculate@output^0,c
   900   002650                     l1283:
   901                           
   902                           ;main.c: 123:     return output;
   903   002650  5007               	movf	calculate@output^0,w,c
   904   002652  0012               	return		;funcret
   905   002654                     __end_of_calculate:
   906                           	callstack 0
   907                           
   908 ;; *************** function ___lbdiv *****************
   909 ;; Defined at:
   910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  dividend        1    wreg     unsigned char 
   913 ;;  divisor         1    0[COMRAM] unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  dividend        1    1[COMRAM] unsigned char 
   916 ;;  quotient        1    3[COMRAM] unsigned char 
   917 ;;  counter         1    2[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      unsigned char 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   927 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   928 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   931 ;;Total ram usage:        4 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_calculate
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text4
   941   002654                     __ptext4:
   942                           	callstack 0
   943   002654                     ___lbdiv:
   944                           	callstack 29
   945                           
   946                           ;incstack = 0
   947                           ;___lbdiv@dividend stored from wreg
   948   002654  6E02               	movwf	___lbdiv@dividend^0,c
   949   002656  0E00               	movlw	0
   950   002658  6E04               	movwf	___lbdiv@quotient^0,c
   951   00265A  5001               	movf	___lbdiv@divisor^0,w,c
   952   00265C  B4D8               	btfsc	status,2,c
   953   00265E  EF33  F013         	goto	u791
   954   002662  EF35  F013         	goto	u790
   955   002666                     u791:
   956   002666  EF56  F013         	goto	l1265
   957   00266A                     u790:
   958   00266A  0E01               	movlw	1
   959   00266C  6E03               	movwf	___lbdiv@counter^0,c
   960   00266E  EF3C  F013         	goto	l1253
   961   002672                     l1249:
   962   002672  90D8               	bcf	status,0,c
   963   002674  3601               	rlcf	___lbdiv@divisor^0,f,c
   964   002676  2A03               	incf	___lbdiv@counter^0,f,c
   965   002678                     l1253:
   966   002678  AE01               	btfss	___lbdiv@divisor^0,7,c
   967   00267A  EF41  F013         	goto	u801
   968   00267E  EF43  F013         	goto	u800
   969   002682                     u801:
   970   002682  EF39  F013         	goto	l1249
   971   002686                     u800:
   972   002686                     l1255:
   973   002686  90D8               	bcf	status,0,c
   974   002688  3604               	rlcf	___lbdiv@quotient^0,f,c
   975   00268A  5001               	movf	___lbdiv@divisor^0,w,c
   976   00268C  5C02               	subwf	___lbdiv@dividend^0,w,c
   977   00268E  A0D8               	btfss	status,0,c
   978   002690  EF4C  F013         	goto	u811
   979   002694  EF4E  F013         	goto	u810
   980   002698                     u811:
   981   002698  EF51  F013         	goto	l1261
   982   00269C                     u810:
   983   00269C  5001               	movf	___lbdiv@divisor^0,w,c
   984   00269E  5E02               	subwf	___lbdiv@dividend^0,f,c
   985   0026A0  8004               	bsf	___lbdiv@quotient^0,0,c
   986   0026A2                     l1261:
   987   0026A2  90D8               	bcf	status,0,c
   988   0026A4  3201               	rrcf	___lbdiv@divisor^0,f,c
   989   0026A6  2E03               	decfsz	___lbdiv@counter^0,f,c
   990   0026A8  EF43  F013         	goto	l1255
   991   0026AC                     l1265:
   992   0026AC  5004               	movf	___lbdiv@quotient^0,w,c
   993   0026AE  0012               	return		;funcret
   994   0026B0                     __end_of___lbdiv:
   995                           	callstack 0
   996                           
   997 ;; *************** function _PORT_Output *****************
   998 ;; Defined at:
   999 ;;		line 126 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  answer          1    wreg     unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  answer          1    9[COMRAM] unsigned char 
  1004 ;;  second_dig      1   13[COMRAM] unsigned char 
  1005 ;;  first_dig       1   12[COMRAM] unsigned char 
  1006 ;;  display2        1   11[COMRAM] unsigned char 
  1007 ;;  display1        1   10[COMRAM] unsigned char 
  1008 ;;  i               1    8[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1019 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;Total ram usage:        6 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 1
  1025 ;; This function calls:
  1026 ;;		___awdiv
  1027 ;;		___awmod
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text5
  1034   002002                     __ptext5:
  1035                           	callstack 0
  1036   002002                     _PORT_Output:
  1037                           	callstack 29
  1038                           
  1039                           ;incstack = 0
  1040                           ;PORT_Output@answer stored from wreg
  1041   002002  6E0A               	movwf	PORT_Output@answer^0,c
  1042   002004                     
  1043                           ;main.c: 128:     unsigned char second_dig = 0;
  1044   002004  0E00               	movlw	0
  1045   002006  6E0E               	movwf	PORT_Output@second_dig^0,c
  1046                           
  1047                           ;main.c: 129:     unsigned char i = 0;
  1048   002008  0E00               	movlw	0
  1049   00200A  6E09               	movwf	PORT_Output@i^0,c
  1050                           
  1051                           ;main.c: 130:     unsigned char display1 = 0;
  1052   00200C  0E00               	movlw	0
  1053   00200E  6E0B               	movwf	PORT_Output@display1^0,c
  1054                           
  1055                           ;main.c: 131:     unsigned char display2 = 0;
  1056   002010  0E00               	movlw	0
  1057   002012  6E0C               	movwf	PORT_Output@display2^0,c
  1058   002014                     
  1059                           ;main.c: 135:     first_dig = answer/10;
  1060   002014  C00A  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1061   002018  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1062   00201A  0E00               	movlw	0
  1063   00201C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1064   00201E  0E0A               	movlw	10
  1065   002020  6E03               	movwf	___awdiv@divisor^0,c
  1066   002022  ECFD  F011         	call	___awdiv	;wreg free
  1067   002026  5001               	movf	?___awdiv^0,w,c
  1068   002028  6E0D               	movwf	PORT_Output@first_dig^0,c
  1069                           
  1070                           ;main.c: 136:     second_dig = answer % 10;
  1071   00202A  C00A  F001         	movff	PORT_Output@answer,___awmod@dividend
  1072   00202E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1073   002030  0E00               	movlw	0
  1074   002032  6E04               	movwf	(___awmod@divisor+1)^0,c
  1075   002034  0E0A               	movlw	10
  1076   002036  6E03               	movwf	___awmod@divisor^0,c
  1077   002038  EC5F  F012         	call	___awmod	;wreg free
  1078   00203C  5001               	movf	?___awmod^0,w,c
  1079   00203E  6E0E               	movwf	PORT_Output@second_dig^0,c
  1080   002040                     
  1081                           ;main.c: 138:     if(first_dig == 0) display1 = 0xC0;
  1082   002040  500D               	movf	PORT_Output@first_dig^0,w,c
  1083   002042  A4D8               	btfss	status,2,c
  1084   002044  EF26  F010         	goto	u861
  1085   002048  EF28  F010         	goto	u860
  1086   00204C                     u861:
  1087   00204C  EF2A  F010         	goto	l1297
  1088   002050                     u860:
  1089   002050  0EC0               	movlw	192
  1090   002052  6E0B               	movwf	PORT_Output@display1^0,c
  1091   002054                     l1297:
  1092                           
  1093                           ;main.c: 139:     if(first_dig == 1) display1 = 0xF9;
  1094   002054  040D               	decf	PORT_Output@first_dig^0,w,c
  1095   002056  A4D8               	btfss	status,2,c
  1096   002058  EF30  F010         	goto	u871
  1097   00205C  EF32  F010         	goto	u870
  1098   002060                     u871:
  1099   002060  EF34  F010         	goto	l1301
  1100   002064                     u870:
  1101   002064  0EF9               	movlw	249
  1102   002066  6E0B               	movwf	PORT_Output@display1^0,c
  1103   002068                     l1301:
  1104                           
  1105                           ;main.c: 140:     if(first_dig == 2) display1 = 0xA4;
  1106   002068  0E02               	movlw	2
  1107   00206A  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1108   00206C  A4D8               	btfss	status,2,c
  1109   00206E  EF3B  F010         	goto	u881
  1110   002072  EF3D  F010         	goto	u880
  1111   002076                     u881:
  1112   002076  EF3F  F010         	goto	l1305
  1113   00207A                     u880:
  1114   00207A  0EA4               	movlw	164
  1115   00207C  6E0B               	movwf	PORT_Output@display1^0,c
  1116   00207E                     l1305:
  1117                           
  1118                           ;main.c: 141:     if(first_dig == 3) display1 = 0xB0;
  1119   00207E  0E03               	movlw	3
  1120   002080  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1121   002082  A4D8               	btfss	status,2,c
  1122   002084  EF46  F010         	goto	u891
  1123   002088  EF48  F010         	goto	u890
  1124   00208C                     u891:
  1125   00208C  EF4A  F010         	goto	l1309
  1126   002090                     u890:
  1127   002090  0EB0               	movlw	176
  1128   002092  6E0B               	movwf	PORT_Output@display1^0,c
  1129   002094                     l1309:
  1130                           
  1131                           ;main.c: 142:     if(first_dig == 4) display1 = 0x99;
  1132   002094  0E04               	movlw	4
  1133   002096  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1134   002098  A4D8               	btfss	status,2,c
  1135   00209A  EF51  F010         	goto	u901
  1136   00209E  EF53  F010         	goto	u900
  1137   0020A2                     u901:
  1138   0020A2  EF55  F010         	goto	l1313
  1139   0020A6                     u900:
  1140   0020A6  0E99               	movlw	153
  1141   0020A8  6E0B               	movwf	PORT_Output@display1^0,c
  1142   0020AA                     l1313:
  1143                           
  1144                           ;main.c: 143:     if(first_dig == 5) display1 = 0x92;
  1145   0020AA  0E05               	movlw	5
  1146   0020AC  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1147   0020AE  A4D8               	btfss	status,2,c
  1148   0020B0  EF5C  F010         	goto	u911
  1149   0020B4  EF5E  F010         	goto	u910
  1150   0020B8                     u911:
  1151   0020B8  EF60  F010         	goto	l1317
  1152   0020BC                     u910:
  1153   0020BC  0E92               	movlw	146
  1154   0020BE  6E0B               	movwf	PORT_Output@display1^0,c
  1155   0020C0                     l1317:
  1156                           
  1157                           ;main.c: 144:     if(first_dig == 6) display1 = 0x82;
  1158   0020C0  0E06               	movlw	6
  1159   0020C2  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1160   0020C4  A4D8               	btfss	status,2,c
  1161   0020C6  EF67  F010         	goto	u921
  1162   0020CA  EF69  F010         	goto	u920
  1163   0020CE                     u921:
  1164   0020CE  EF6B  F010         	goto	l1321
  1165   0020D2                     u920:
  1166   0020D2  0E82               	movlw	130
  1167   0020D4  6E0B               	movwf	PORT_Output@display1^0,c
  1168   0020D6                     l1321:
  1169                           
  1170                           ;main.c: 145:     if(first_dig == 7) display1 = 0xF8;
  1171   0020D6  0E07               	movlw	7
  1172   0020D8  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1173   0020DA  A4D8               	btfss	status,2,c
  1174   0020DC  EF72  F010         	goto	u931
  1175   0020E0  EF74  F010         	goto	u930
  1176   0020E4                     u931:
  1177   0020E4  EF76  F010         	goto	l1325
  1178   0020E8                     u930:
  1179   0020E8  0EF8               	movlw	248
  1180   0020EA  6E0B               	movwf	PORT_Output@display1^0,c
  1181   0020EC                     l1325:
  1182                           
  1183                           ;main.c: 146:     if(first_dig == 8) display1 = 0x80;
  1184   0020EC  0E08               	movlw	8
  1185   0020EE  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1186   0020F0  A4D8               	btfss	status,2,c
  1187   0020F2  EF7D  F010         	goto	u941
  1188   0020F6  EF7F  F010         	goto	u940
  1189   0020FA                     u941:
  1190   0020FA  EF81  F010         	goto	l1329
  1191   0020FE                     u940:
  1192   0020FE  0E80               	movlw	128
  1193   002100  6E0B               	movwf	PORT_Output@display1^0,c
  1194   002102                     l1329:
  1195                           
  1196                           ;main.c: 147:     if(first_dig == 9) display1 = 0x98;
  1197   002102  0E09               	movlw	9
  1198   002104  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1199   002106  A4D8               	btfss	status,2,c
  1200   002108  EF88  F010         	goto	u951
  1201   00210C  EF8A  F010         	goto	u950
  1202   002110                     u951:
  1203   002110  EF8C  F010         	goto	l101
  1204   002114                     u950:
  1205   002114  0E98               	movlw	152
  1206   002116  6E0B               	movwf	PORT_Output@display1^0,c
  1207   002118                     l101:
  1208                           
  1209                           ;main.c: 149:     if(second_dig == 0) display2 = 0xC0;
  1210   002118  500E               	movf	PORT_Output@second_dig^0,w,c
  1211   00211A  A4D8               	btfss	status,2,c
  1212   00211C  EF92  F010         	goto	u961
  1213   002120  EF94  F010         	goto	u960
  1214   002124                     u961:
  1215   002124  EF96  F010         	goto	l1335
  1216   002128                     u960:
  1217   002128  0EC0               	movlw	192
  1218   00212A  6E0C               	movwf	PORT_Output@display2^0,c
  1219   00212C                     l1335:
  1220                           
  1221                           ;main.c: 150:     if(second_dig == 1) display2 = 0xF9;
  1222   00212C  040E               	decf	PORT_Output@second_dig^0,w,c
  1223   00212E  A4D8               	btfss	status,2,c
  1224   002130  EF9C  F010         	goto	u971
  1225   002134  EF9E  F010         	goto	u970
  1226   002138                     u971:
  1227   002138  EFA0  F010         	goto	l1339
  1228   00213C                     u970:
  1229   00213C  0EF9               	movlw	249
  1230   00213E  6E0C               	movwf	PORT_Output@display2^0,c
  1231   002140                     l1339:
  1232                           
  1233                           ;main.c: 151:     if(second_dig == 2) display2 = 0xA4;
  1234   002140  0E02               	movlw	2
  1235   002142  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1236   002144  A4D8               	btfss	status,2,c
  1237   002146  EFA7  F010         	goto	u981
  1238   00214A  EFA9  F010         	goto	u980
  1239   00214E                     u981:
  1240   00214E  EFAB  F010         	goto	l1343
  1241   002152                     u980:
  1242   002152  0EA4               	movlw	164
  1243   002154  6E0C               	movwf	PORT_Output@display2^0,c
  1244   002156                     l1343:
  1245                           
  1246                           ;main.c: 152:     if(second_dig == 3) display2 = 0xB0;
  1247   002156  0E03               	movlw	3
  1248   002158  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1249   00215A  A4D8               	btfss	status,2,c
  1250   00215C  EFB2  F010         	goto	u991
  1251   002160  EFB4  F010         	goto	u990
  1252   002164                     u991:
  1253   002164  EFB6  F010         	goto	l1347
  1254   002168                     u990:
  1255   002168  0EB0               	movlw	176
  1256   00216A  6E0C               	movwf	PORT_Output@display2^0,c
  1257   00216C                     l1347:
  1258                           
  1259                           ;main.c: 153:     if(second_dig == 4) display2 = 0x99;
  1260   00216C  0E04               	movlw	4
  1261   00216E  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1262   002170  A4D8               	btfss	status,2,c
  1263   002172  EFBD  F010         	goto	u1001
  1264   002176  EFBF  F010         	goto	u1000
  1265   00217A                     u1001:
  1266   00217A  EFC1  F010         	goto	l1351
  1267   00217E                     u1000:
  1268   00217E  0E99               	movlw	153
  1269   002180  6E0C               	movwf	PORT_Output@display2^0,c
  1270   002182                     l1351:
  1271                           
  1272                           ;main.c: 154:     if(second_dig == 5) display2 = 0x92;
  1273   002182  0E05               	movlw	5
  1274   002184  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1275   002186  A4D8               	btfss	status,2,c
  1276   002188  EFC8  F010         	goto	u1011
  1277   00218C  EFCA  F010         	goto	u1010
  1278   002190                     u1011:
  1279   002190  EFCC  F010         	goto	l1355
  1280   002194                     u1010:
  1281   002194  0E92               	movlw	146
  1282   002196  6E0C               	movwf	PORT_Output@display2^0,c
  1283   002198                     l1355:
  1284                           
  1285                           ;main.c: 155:     if(second_dig == 6) display2 = 0x82;
  1286   002198  0E06               	movlw	6
  1287   00219A  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1288   00219C  A4D8               	btfss	status,2,c
  1289   00219E  EFD3  F010         	goto	u1021
  1290   0021A2  EFD5  F010         	goto	u1020
  1291   0021A6                     u1021:
  1292   0021A6  EFD7  F010         	goto	l1359
  1293   0021AA                     u1020:
  1294   0021AA  0E82               	movlw	130
  1295   0021AC  6E0C               	movwf	PORT_Output@display2^0,c
  1296   0021AE                     l1359:
  1297                           
  1298                           ;main.c: 156:     if(second_dig == 7) display2 = 0xF8;
  1299   0021AE  0E07               	movlw	7
  1300   0021B0  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1301   0021B2  A4D8               	btfss	status,2,c
  1302   0021B4  EFDE  F010         	goto	u1031
  1303   0021B8  EFE0  F010         	goto	u1030
  1304   0021BC                     u1031:
  1305   0021BC  EFE2  F010         	goto	l1363
  1306   0021C0                     u1030:
  1307   0021C0  0EF8               	movlw	248
  1308   0021C2  6E0C               	movwf	PORT_Output@display2^0,c
  1309   0021C4                     l1363:
  1310                           
  1311                           ;main.c: 157:     if(second_dig == 8) display2 = 0x80;
  1312   0021C4  0E08               	movlw	8
  1313   0021C6  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1314   0021C8  A4D8               	btfss	status,2,c
  1315   0021CA  EFE9  F010         	goto	u1041
  1316   0021CE  EFEB  F010         	goto	u1040
  1317   0021D2                     u1041:
  1318   0021D2  EFED  F010         	goto	l1367
  1319   0021D6                     u1040:
  1320   0021D6  0E80               	movlw	128
  1321   0021D8  6E0C               	movwf	PORT_Output@display2^0,c
  1322   0021DA                     l1367:
  1323                           
  1324                           ;main.c: 158:     if(second_dig == 9) display2 = 0x98;
  1325   0021DA  0E09               	movlw	9
  1326   0021DC  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1327   0021DE  A4D8               	btfss	status,2,c
  1328   0021E0  EFF4  F010         	goto	u1051
  1329   0021E4  EFF6  F010         	goto	u1050
  1330   0021E8                     u1051:
  1331   0021E8  EFF8  F010         	goto	l1371
  1332   0021EC                     u1050:
  1333   0021EC  0E98               	movlw	152
  1334   0021EE  6E0C               	movwf	PORT_Output@display2^0,c
  1335   0021F0                     l1371:
  1336                           
  1337                           ;main.c: 160:     PORTBbits.RB2 = 1;
  1338   0021F0  84CB               	bsf	203,2,c	;volatile
  1339   0021F2                     l112:
  1340                           
  1341                           ;main.c: 161:     while (PORTAbits.RA3 == 0){
  1342   0021F2  A6CA               	btfss	202,3,c	;volatile
  1343   0021F4  EFFE  F010         	goto	u1061
  1344   0021F8  EF00  F011         	goto	u1060
  1345   0021FC                     u1061:
  1346   0021FC  EFF9  F010         	goto	l112
  1347   002200                     u1060:
  1348   002200                     
  1349                           ;main.c: 164:     for(i = 1; i<10000; i++)
  1350   002200  0E01               	movlw	1
  1351   002202  6E09               	movwf	PORT_Output@i^0,c
  1352   002204                     l115:
  1353                           
  1354                           ;main.c: 165:     {;main.c: 166:         PORTBbits.RB5 = 1;
  1355   002204  8ACB               	bsf	203,5,c	;volatile
  1356                           
  1357                           ;main.c: 167:         PORTD = display1;
  1358   002206  0060  F02F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1359                           
  1360                           ;main.c: 168:         PORTBbits.RB5 = 0;
  1361   00220C  9ACB               	bcf	203,5,c	;volatile
  1362                           
  1363                           ;main.c: 169:         PORTBbits.RB6 = 1;
  1364   00220E  8CCB               	bsf	203,6,c	;volatile
  1365                           
  1366                           ;main.c: 170:         PORTD = display2;
  1367   002210  0060  F033  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1368                           
  1369                           ;main.c: 171:         PORTBbits.RB6 = 0;
  1370   002216  9CCB               	bcf	203,6,c	;volatile
  1371   002218                     
  1372                           ;main.c: 172:     }
  1373   002218  2A09               	incf	PORT_Output@i^0,f,c
  1374   00221A  EF02  F011         	goto	l115
  1375   00221E  0012               	return		;funcret
  1376   002220                     __end_of_PORT_Output:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function ___awmod *****************
  1380 ;; Defined at:
  1381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  dividend        2    0[COMRAM] int 
  1384 ;;  divisor         2    2[COMRAM] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  sign            1    5[COMRAM] unsigned char 
  1387 ;;  counter         1    4[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    0[COMRAM] int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1401 ;;Total ram usage:        6 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_PORT_Output
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text6
  1411   0024BE                     __ptext6:
  1412                           	callstack 0
  1413   0024BE                     ___awmod:
  1414                           	callstack 29
  1415   0024BE  0E00               	movlw	0
  1416   0024C0  6E06               	movwf	___awmod@sign^0,c
  1417   0024C2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1418   0024C4  EF68  F012         	goto	u730
  1419   0024C8  EF66  F012         	goto	u731
  1420   0024CC                     u731:
  1421   0024CC  EF6E  F012         	goto	l1215
  1422   0024D0                     u730:
  1423   0024D0  6C01               	negf	___awmod@dividend^0,c
  1424   0024D2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1425   0024D4  B0D8               	btfsc	status,0,c
  1426   0024D6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1427   0024D8  0E01               	movlw	1
  1428   0024DA  6E06               	movwf	___awmod@sign^0,c
  1429   0024DC                     l1215:
  1430   0024DC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1431   0024DE  EF75  F012         	goto	u740
  1432   0024E2  EF73  F012         	goto	u741
  1433   0024E6                     u741:
  1434   0024E6  EF79  F012         	goto	l1219
  1435   0024EA                     u740:
  1436   0024EA  6C03               	negf	___awmod@divisor^0,c
  1437   0024EC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1438   0024EE  B0D8               	btfsc	status,0,c
  1439   0024F0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1440   0024F2                     l1219:
  1441   0024F2  5003               	movf	___awmod@divisor^0,w,c
  1442   0024F4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1443   0024F6  B4D8               	btfsc	status,2,c
  1444   0024F8  EF80  F012         	goto	u751
  1445   0024FC  EF82  F012         	goto	u750
  1446   002500                     u751:
  1447   002500  EFA6  F012         	goto	l1235
  1448   002504                     u750:
  1449   002504  0E01               	movlw	1
  1450   002506  6E05               	movwf	___awmod@counter^0,c
  1451   002508  EF8A  F012         	goto	l1225
  1452   00250C                     l1223:
  1453   00250C  90D8               	bcf	status,0,c
  1454   00250E  3603               	rlcf	___awmod@divisor^0,f,c
  1455   002510  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1456   002512  2A05               	incf	___awmod@counter^0,f,c
  1457   002514                     l1225:
  1458   002514  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1459   002516  EF8F  F012         	goto	u761
  1460   00251A  EF91  F012         	goto	u760
  1461   00251E                     u761:
  1462   00251E  EF86  F012         	goto	l1223
  1463   002522                     u760:
  1464   002522                     l1227:
  1465   002522  5003               	movf	___awmod@divisor^0,w,c
  1466   002524  5C01               	subwf	___awmod@dividend^0,w,c
  1467   002526  5004               	movf	(___awmod@divisor+1)^0,w,c
  1468   002528  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1469   00252A  A0D8               	btfss	status,0,c
  1470   00252C  EF9A  F012         	goto	u771
  1471   002530  EF9C  F012         	goto	u770
  1472   002534                     u771:
  1473   002534  EFA0  F012         	goto	l1231
  1474   002538                     u770:
  1475   002538  5003               	movf	___awmod@divisor^0,w,c
  1476   00253A  5E01               	subwf	___awmod@dividend^0,f,c
  1477   00253C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1478   00253E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1479   002540                     l1231:
  1480   002540  90D8               	bcf	status,0,c
  1481   002542  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1482   002544  3203               	rrcf	___awmod@divisor^0,f,c
  1483   002546  2E05               	decfsz	___awmod@counter^0,f,c
  1484   002548  EF91  F012         	goto	l1227
  1485   00254C                     l1235:
  1486   00254C  5006               	movf	___awmod@sign^0,w,c
  1487   00254E  B4D8               	btfsc	status,2,c
  1488   002550  EFAC  F012         	goto	u781
  1489   002554  EFAE  F012         	goto	u780
  1490   002558                     u781:
  1491   002558  EFB2  F012         	goto	l1239
  1492   00255C                     u780:
  1493   00255C  6C01               	negf	___awmod@dividend^0,c
  1494   00255E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1495   002560  B0D8               	btfsc	status,0,c
  1496   002562  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1497   002564                     l1239:
  1498   002564  C001  F001         	movff	___awmod@dividend,?___awmod
  1499   002568  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1500   00256C  0012               	return		;funcret
  1501   00256E                     __end_of___awmod:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function ___awdiv *****************
  1505 ;; Defined at:
  1506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  dividend        2    0[COMRAM] int 
  1509 ;;  divisor         2    2[COMRAM] int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  quotient        2    6[COMRAM] int 
  1512 ;;  sign            1    5[COMRAM] unsigned char 
  1513 ;;  counter         1    4[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2    0[COMRAM] int 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;Total ram usage:        8 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_PORT_Output
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text7
  1537   0023FA                     __ptext7:
  1538                           	callstack 0
  1539   0023FA                     ___awdiv:
  1540                           	callstack 29
  1541   0023FA  0E00               	movlw	0
  1542   0023FC  6E06               	movwf	___awdiv@sign^0,c
  1543   0023FE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1544   002400  EF06  F012         	goto	u670
  1545   002404  EF04  F012         	goto	u671
  1546   002408                     u671:
  1547   002408  EF0C  F012         	goto	l1171
  1548   00240C                     u670:
  1549   00240C  6C03               	negf	___awdiv@divisor^0,c
  1550   00240E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1551   002410  B0D8               	btfsc	status,0,c
  1552   002412  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1553   002414  0E01               	movlw	1
  1554   002416  6E06               	movwf	___awdiv@sign^0,c
  1555   002418                     l1171:
  1556   002418  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1557   00241A  EF13  F012         	goto	u680
  1558   00241E  EF11  F012         	goto	u681
  1559   002422                     u681:
  1560   002422  EF19  F012         	goto	l1177
  1561   002426                     u680:
  1562   002426  6C01               	negf	___awdiv@dividend^0,c
  1563   002428  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1564   00242A  B0D8               	btfsc	status,0,c
  1565   00242C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1566   00242E  0E01               	movlw	1
  1567   002430  1A06               	xorwf	___awdiv@sign^0,f,c
  1568   002432                     l1177:
  1569   002432  0E00               	movlw	0
  1570   002434  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1571   002436  0E00               	movlw	0
  1572   002438  6E07               	movwf	___awdiv@quotient^0,c
  1573   00243A  5003               	movf	___awdiv@divisor^0,w,c
  1574   00243C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1575   00243E  B4D8               	btfsc	status,2,c
  1576   002440  EF24  F012         	goto	u691
  1577   002444  EF26  F012         	goto	u690
  1578   002448                     u691:
  1579   002448  EF4E  F012         	goto	l1199
  1580   00244C                     u690:
  1581   00244C  0E01               	movlw	1
  1582   00244E  6E05               	movwf	___awdiv@counter^0,c
  1583   002450  EF2E  F012         	goto	l1185
  1584   002454                     l1183:
  1585   002454  90D8               	bcf	status,0,c
  1586   002456  3603               	rlcf	___awdiv@divisor^0,f,c
  1587   002458  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1588   00245A  2A05               	incf	___awdiv@counter^0,f,c
  1589   00245C                     l1185:
  1590   00245C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1591   00245E  EF33  F012         	goto	u701
  1592   002462  EF35  F012         	goto	u700
  1593   002466                     u701:
  1594   002466  EF2A  F012         	goto	l1183
  1595   00246A                     u700:
  1596   00246A                     l1187:
  1597   00246A  90D8               	bcf	status,0,c
  1598   00246C  3607               	rlcf	___awdiv@quotient^0,f,c
  1599   00246E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1600   002470  5003               	movf	___awdiv@divisor^0,w,c
  1601   002472  5C01               	subwf	___awdiv@dividend^0,w,c
  1602   002474  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1603   002476  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1604   002478  A0D8               	btfss	status,0,c
  1605   00247A  EF41  F012         	goto	u711
  1606   00247E  EF43  F012         	goto	u710
  1607   002482                     u711:
  1608   002482  EF48  F012         	goto	l1195
  1609   002486                     u710:
  1610   002486  5003               	movf	___awdiv@divisor^0,w,c
  1611   002488  5E01               	subwf	___awdiv@dividend^0,f,c
  1612   00248A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1613   00248C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1614   00248E  8007               	bsf	___awdiv@quotient^0,0,c
  1615   002490                     l1195:
  1616   002490  90D8               	bcf	status,0,c
  1617   002492  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1618   002494  3203               	rrcf	___awdiv@divisor^0,f,c
  1619   002496  2E05               	decfsz	___awdiv@counter^0,f,c
  1620   002498  EF35  F012         	goto	l1187
  1621   00249C                     l1199:
  1622   00249C  5006               	movf	___awdiv@sign^0,w,c
  1623   00249E  B4D8               	btfsc	status,2,c
  1624   0024A0  EF54  F012         	goto	u721
  1625   0024A4  EF56  F012         	goto	u720
  1626   0024A8                     u721:
  1627   0024A8  EF5A  F012         	goto	l1203
  1628   0024AC                     u720:
  1629   0024AC  6C07               	negf	___awdiv@quotient^0,c
  1630   0024AE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1631   0024B0  B0D8               	btfsc	status,0,c
  1632   0024B2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1633   0024B4                     l1203:
  1634   0024B4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1635   0024B8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1636   0024BC  0012               	return		;funcret
  1637   0024BE                     __end_of___awdiv:
  1638                           	callstack 0
  1639                           
  1640                           	psect	smallconst
  1641   002000                     __psmallconst:
  1642                           	callstack 0
  1643   002000  00                 	db	0
  1644   002001  00                 	db	0	; dummy byte at the end
  1645   000000                     
  1646                           	psect	rparam
  1647   000000                     tosu	equ	0x3FFF
  1648                           tosh	equ	0x3FFE
  1649                           tosl	equ	0x3FFD
  1650                           stkptr	equ	0x3FFC
  1651                           pclatu	equ	0x3FFB
  1652                           pclath	equ	0x3FFA
  1653                           pcl	equ	0x3FF9
  1654                           tblptru	equ	0x3FF8
  1655                           tblptrh	equ	0x3FF7
  1656                           tblptrl	equ	0x3FF6
  1657                           tablat	equ	0x3FF5
  1658                           prodh	equ	0x3FF4
  1659                           prodl	equ	0x3FF3
  1660                           indf0	equ	0x3FEF
  1661                           postinc0	equ	0x3FEE
  1662                           postdec0	equ	0x3FED
  1663                           preinc0	equ	0x3FEC
  1664                           plusw0	equ	0x3FEB
  1665                           fsr0h	equ	0x3FEA
  1666                           fsr0l	equ	0x3FE9
  1667                           wreg	equ	0x3FE8
  1668                           indf1	equ	0x3FE7
  1669                           postinc1	equ	0x3FE6
  1670                           postdec1	equ	0x3FE5
  1671                           preinc1	equ	0x3FE4
  1672                           plusw1	equ	0x3FE3
  1673                           fsr1h	equ	0x3FE2
  1674                           fsr1l	equ	0x3FE1
  1675                           bsr	equ	0x3FE0
  1676                           indf2	equ	0x3FDF
  1677                           postinc2	equ	0x3FDE
  1678                           postdec2	equ	0x3FDD
  1679                           preinc2	equ	0x3FDC
  1680                           plusw2	equ	0x3FDB
  1681                           fsr2h	equ	0x3FDA
  1682                           fsr2l	equ	0x3FD9
  1683                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2243
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          6     6      0    1457
                                              8 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      77        0.0%
BITBIGSFRlhhh      551      0       0      72        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
BITBIGSFRhhhh       32      0       0      68        0.0%
BITBIGSFRlhhl       1F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRhl          1      0       0      71        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      76        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 13:35:02 2024

           PORT_Output@i 0009                       l43 26F0                       l71 23F8  
                     l47 2230                       l81 25E0                       l74 25C0  
                     l59 2312                       l75 2576                       l84 25FE  
                     l85 2616                       l88 2652          ?_scan_operation 0001  
           ___awdiv@sign 0006                      l101 2118                      l112 21F2  
                    l115 2204                      l351 24BC                      l364 256C  
                    l526 26AE                      l901 2240                      l911 2268  
                    l903 2244                      l921 228C                      l913 226A  
                    l905 2252                      l931 22A6                      l923 2290  
                    l915 226C                      l907 2256                      l941 22D8  
                    l933 22B4                      l925 229E                      l917 227A  
                    l909 2264                      l951 2306                      l943 22DC  
                    l935 22B8                      l927 22A2                      l919 227E  
                    l961 2338                      l953 230A                      l937 22C6  
                    l929 22A4                      l945 22DE                      l971 235C  
                    l963 2346                      l955 2322                      l947 22F0  
                    l939 22CA                      l981 2384                      l973 2360  
                    l965 234A                      l957 2326                      l949 22FE  
                    l991 23A8                      l983 2392                      l975 236E  
                    l967 234C                      l959 2334                      l993 23AC  
                    l985 2396                      l977 2372                      l969 234E  
                    l995 23BA                      l987 2398                      l979 2380  
                    l899 2220                      l997 23BE                      l989 239A  
                    l999 23CC                      u200 228C                      u201 2288  
                    u210 229E                      u211 229A                      u300 236E  
                    u220 22B4                      u301 236A                      u221 22B0  
                    u310 2380                      u230 22C6                      u311 237C  
                    u231 22C2                      u320 2392                      u240 22D8  
                    u160 2240                      u400 25BC                      u321 238E  
                    u241 22D4                      u161 223C                      u401 25B8  
                    u330 23A8                      u250 22F0                      u170 2252  
                    u410 25D0                      u331 23A4                      u251 22EC  
                    u171 224E                      u411 25CC                      u340 23BA  
                    u260 2322                      u180 2264                      u341 23B6  
                    u261 231E                      u181 2260                      u350 23CC  
                    u270 2334                      u190 227A                      u351 23C8  
                    u271 2330                      u191 2276                      u360 23E4  
                    u280 2346                      u361 23E0                      u281 2342  
                    u290 235C                      u370 2586                      u291 2358  
                    u371 2582                      u700 246A                      u380 2598  
                    u701 2466                      u381 2594                      u710 2486  
                    u390 25AA                      u711 2482                      u391 25A6  
                    u720 24AC                      u800 2686                      u721 24A8  
                    u801 2682                      u730 24D0                      u810 269C  
                    u731 24CC                      u811 2698                      u740 24EA  
                    u900 20A6                      u820 25F8                      u741 24E6  
                    u901 20A2                      u821 25F4                      u670 240C  
                    u750 2504                      u910 20BC                      u830 2610  
                    u671 2408                      u751 2500                      u911 20B8  
                    u831 260C                      u680 2426                      u760 2522  
                    u920 20D2                      u840 2628                      u681 2422  
                    u761 251E                      u921 20CE                      u841 2624  
                    u690 244C                      u770 2538                      u930 20E8  
                    u850 2644                      u691 2448                      u771 2534  
                    u931 20E4                      u851 2640                      u780 255C  
                    u940 20FE                      u860 2050                      u781 2558  
                    u941 20FA                      u861 204C                      u950 2114  
                    u870 2064                      u790 266A                      u951 2110  
                    u871 2060                      u791 2666                      u960 2128  
                    u880 207A                      u961 2124                      u881 2076  
                    u970 213C                      u890 2090                      u971 2138  
                    u891 208C                      u980 2152                      u981 214E  
                    u990 2168                      u991 2164             ___awmod@sign 0006  
                    wreg 3FE8                     l1001 23D0                     l1003 23D2  
                   l1005 23E4                     l1021 259C                     l1013 256E  
                   l1007 23E8                     l1031 25DE                     l1023 25AA  
                   l1015 2586                     l1201 24AC                     l1009 23F6  
                   l1025 25AE                     l1017 258A                     l1203 24B4  
                   l1211 24D0                     l1027 25BC                     l1019 2598  
                   l1221 2504                     l1213 24D8                     l1301 2068  
                   l1029 25D0                     l1231 2540                     l1223 250C  
                   l1215 24DC                     l1207 24BE                     l1311 20A6  
                   l1303 207A                     l1233 2546                     l1225 2514  
                   l1217 24EA                     l1209 24C2                     l1321 20D6  
                   l1313 20AA                     l1305 207E                     l1171 2418  
                   l1163 23FA                     l1227 2522                     l1235 254C  
                   l1219 24F2                     l1331 2114                     l1323 20E8  
                   l1315 20BC                     l1307 2090                     l1251 2676  
                   l1243 2656                     l1181 244C                     l1173 2426  
                   l1165 23FE                     l1237 255C                     l1229 2538  
                   l1341 2152                     l1333 2128                     l1325 20EC  
                   l1317 20C0                     l1309 2094                     l1261 26A2  
                   l1253 2678                     l1245 265A                     l1191 2486  
                   l1183 2454                     l1175 242E                     l1167 240C  
                   l1239 2564                     l1351 2182                     l1343 2156  
                   l1335 212C                     l1327 20FE                     l1319 20D2  
                   l1263 26A6                     l1255 2686                     l1247 266A  
                   l1271 25E8                     l1193 248E                     l1185 245C  
                   l1177 2432                     l1169 2414                     l1361 21C0  
                   l1353 2194                     l1345 2168                     l1337 213C  
                   l1329 2102                     l1257 269C                     l1249 2672  
                   l1265 26AC                     l1281 2644                     l1273 25F8  
                   l1195 2490                     l1187 246A                     l1179 243A  
                   l1371 21F0                     l1363 21C4                     l1355 2198  
                   l1347 216C                     l1339 2140                     l1291 2014  
                   l1259 26A0                     l1283 2650                     l1275 2610  
                   l1197 2496                     l1189 2470                     l1373 2200  
                   l1365 21D6                     l1357 21AA                     l1349 217E  
                   l1293 2040                     l1277 2628                     l1269 25E4  
                   l1381 26B0                     l1199 249C                     l1367 21DA  
                   l1359 21AE                     l1295 2050                     l1287 2004  
                   l1279 2632                     l1391 26DA                     l1383 26B2  
                   l1377 2218                     l1369 21EC                     l1297 2054  
                   l1393 26EA                     l1385 26C8                     l1299 2064  
                   l1387 26CE                     l1389 26D4                     u1000 217E  
                   u1001 217A                     u1010 2194                     u1011 2190  
                   u1020 21AA                     u1021 21A6                     u1030 21C0  
                   u1031 21BC                     u1040 21D6                     u1041 21D2  
                   u1050 21EC                     u1051 21E8                     u1060 2200  
                   u1061 21FC                     u1077 25D6                     u1087 22F6  
                   u1097 23EE                     _main 26B0                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 24BE          __end_of___lbdiv 26B0          __end_of___awmod 256E  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISD 3FC5  
      PORT_Output@answer 000A                    status 3FD8          ___lbdiv@divisor 0001  
        ___lbdiv@counter 0003             ?_scan_number 0001          __initialization 26F4  
           __end_of_main 26F4                   ??_main 000F            __activetblptr 0000  
       ___awdiv@dividend 0001                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELD 3A70                ??___awdiv 0005                ??___lbdiv 0002  
              ??___awmod 0005         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005             __mediumconst 0000  
           ?_PORT_Output 0001         ___lbdiv@dividend 0002               __accesstop 0060  
__end_of__initialization 26F6            ___rparam_used 0001         ??_scan_operation 0001  
         __pcstackCOMRAM 0001         scan_number@count 0003         scan_number@input 0005  
       ___lbdiv@quotient 0004              _X_Input_REG 0012              _Y_Input_REG 0011  
             __pnvCOMRAM 000F        __end_of_calculate 2654      PORT_Output@display1 000B  
    PORT_Output@display2 000C                  __Hparam 0000               calculate@x 0008  
             calculate@y 0005                  __Lparam 0000                  ___awdiv 23FA  
                ___lbdiv 2654                  ___awmod 24BE             __psmallconst 2000  
                __pcinit 26F4                  __ramtop 2000                  __ptext0 26B0  
                __ptext1 256E                  __ptext2 2220                  __ptext3 25E2  
                __ptext4 2654                  __ptext5 2002                  __ptext6 24BE  
                __ptext7 23FA         ___awmod@dividend 0001     end_of_initialization 26F6  
              _PORTAbits 3FCA                _PORTBbits 3FCB            _Operation_REG 0010  
      scan_number@button 0002      start_initialization 26F4        scan_number@output 0004  
            _calculation 000F              __pbssCOMRAM 0013    PORT_Output@second_dig 000E  
              _calculate 25E2            ??_scan_number 0001                 ?___awdiv 0001  
               ?___lbdiv 0001                 ?___awmod 0001              __smallconst 2000  
             ?_calculate 0005          calculate@output 0007      __end_of_scan_number 23FA  
          ??_PORT_Output 0009     PORT_Output@first_dig 000D              calculate@op 0006  
               __Hrparam 0000                 __Lrparam 0000      __end_of_PORT_Output 2220  
            ??_calculate 0007              _scan_number 2220                 isa$xinst 0000  
         _scan_operation 256E       _Display_Result_REG 0013     scan_operation@op_key 0002  
 __end_of_scan_operation 25E2              _PORT_Output 2002  
