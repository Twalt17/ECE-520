

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 08 09:56:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _TRISC	set	16324
    57   000000                     _TRISD	set	16325
    58   000000                     _TRISB	set	16323
    59                           
    60                           	psect	nvCOMRAM
    61   000013                     __pnvCOMRAM:
    62                           	callstack 0
    63   000013                     _Display_Result_REG:
    64                           	callstack 0
    65   000013                     	ds	1
    66   000014                     _calculation:
    67                           	callstack 0
    68   000014                     	ds	1
    69   000015                     _Operation_REG:
    70                           	callstack 0
    71   000015                     	ds	1
    72   000016                     _Y_Input_REG:
    73                           	callstack 0
    74   000016                     	ds	1
    75   000017                     _X_Input_REG:
    76                           	callstack 0
    77   000017                     	ds	1
    78   000000                     _PORTCbits	set	16332
    79   000000                     _PORTB	set	16331
    80   000000                     _ANSELA	set	14912
    81   000000                     _TRISA	set	16322
    82   000000                     _ANSELB	set	14928
    83   000000                     _ANSELC	set	14944
    84   000000                     _ANSELD	set	14960
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _PORTC	set	16332
    88   000000                     _PORTD	set	16333
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   002850                     __pcinit:
    94                           	callstack 0
    95   002850                     start_initialization:
    96                           	callstack 0
    97   002850                     __initialization:
    98                           	callstack 0
    99   002850                     end_of_initialization:
   100                           	callstack 0
   101   002850                     __end_of__initialization:
   102                           	callstack 0
   103   002850  0100               	movlb	0
   104   002852  EF77  F013         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ?___wmul:
   110                           	callstack 0
   111   000001                     ?___awdiv:
   112                           	callstack 0
   113   000001                     ?___awmod:
   114                           	callstack 0
   115   000001                     scan_number@button:
   116                           	callstack 0
   117   000001                     scan_operation@op_key:
   118                           	callstack 0
   119   000001                     ___lbdiv@divisor:
   120                           	callstack 0
   121   000001                     ___wmul@multiplier:
   122                           	callstack 0
   123   000001                     ___awdiv@dividend:
   124                           	callstack 0
   125   000001                     ___awmod@dividend:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x0
   129   000001                     	ds	1
   130   000002                     scan_number@count:
   131                           	callstack 0
   132   000002                     ___lbdiv@dividend:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x1
   136   000002                     	ds	1
   137   000003                     scan_number@output:
   138                           	callstack 0
   139   000003                     ___lbdiv@counter:
   140                           	callstack 0
   141   000003                     ___wmul@multiplicand:
   142                           	callstack 0
   143   000003                     ___awdiv@divisor:
   144                           	callstack 0
   145   000003                     ___awmod@divisor:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x2
   149   000003                     	ds	1
   150   000004                     scan_number@LED_Count:
   151                           	callstack 0
   152   000004                     ___lbdiv@quotient:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x3
   156   000004                     	ds	1
   157   000005                     ?_calculate:
   158                           	callstack 0
   159   000005                     scan_number@input:
   160                           	callstack 0
   161   000005                     calculate@y:
   162                           	callstack 0
   163   000005                     ___awdiv@counter:
   164                           	callstack 0
   165   000005                     ___awmod@counter:
   166                           	callstack 0
   167   000005                     ___wmul@product:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x4
   171   000005                     	ds	1
   172   000006                     calculate@op:
   173                           	callstack 0
   174   000006                     ___awdiv@sign:
   175                           	callstack 0
   176   000006                     ___awmod@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180   000006                     	ds	1
   181   000007                     calculate@output:
   182                           	callstack 0
   183   000007                     ___awdiv@quotient:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x6
   187   000007                     	ds	1
   188   000008                     calculate@x:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x7
   192   000008                     	ds	1
   193   000009                     PORT_Output@answer:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x8
   197   000009                     	ds	2
   198   00000B                     ??_PORT_Output:
   199                           
   200                           ; 1 bytes @ 0xA
   201   00000B                     	ds	1
   202   00000C                     PORT_Output@enter:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xB
   206   00000C                     	ds	1
   207   00000D                     PORT_Output@i:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xC
   211   00000D                     	ds	2
   212   00000F                     PORT_Output@display1:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xE
   216   00000F                     	ds	1
   217   000010                     PORT_Output@display2:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xF
   221   000010                     	ds	1
   222   000011                     PORT_Output@first_dig:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x10
   226   000011                     	ds	1
   227   000012                     PORT_Output@second_dig:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x11
   231   000012                     	ds	1
   232   000013                     
   233                           ; 1 bytes @ 0x12
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 32 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  LED_Count       1    0        unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 2
   259 ;; This function calls:
   260 ;;		_PORT_Output
   261 ;;		_calculate
   262 ;;		_scan_number
   263 ;;		_scan_operation
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   0026EE                     __ptext0:
   271                           	callstack 0
   272   0026EE                     _main:
   273                           	callstack 29
   274   0026EE                     
   275                           ;main.c: 33:     TRISA = 0xFF;
   276   0026EE  68C2               	setf	194,c	;volatile
   277   0026F0                     
   278                           ;main.c: 34:     ANSELA = 0;
   279   0026F0  0E00               	movlw	0
   280   0026F2  013A               	movlb	58	; () banked
   281   0026F4  6F40               	movwf	64,b	;volatile
   282                           
   283                           ;main.c: 35:     TRISB = 0;
   284   0026F6  0E00               	movlw	0
   285   0026F8  6EC3               	movwf	195,c	;volatile
   286                           
   287                           ;main.c: 36:     ANSELB = 0;
   288   0026FA  0E00               	movlw	0
   289   0026FC  6F50               	movwf	80,b	;volatile
   290                           
   291                           ;main.c: 37:     ANSELD = 0;
   292   0026FE  0E00               	movlw	0
   293   002700  6F70               	movwf	112,b	;volatile
   294                           
   295                           ;main.c: 38:     TRISD = 0;
   296   002702  0E00               	movlw	0
   297   002704  6EC5               	movwf	197,c	;volatile
   298                           
   299                           ;main.c: 39:     TRISC = 0;
   300   002706  0E00               	movlw	0
   301   002708  6EC4               	movwf	196,c	;volatile
   302                           
   303                           ;main.c: 40:     ANSELC = 0;
   304   00270A  0E00               	movlw	0
   305   00270C  6F60               	movwf	96,b	;volatile
   306   00270E                     
   307                           ; BSR set to: 58
   308                           ;main.c: 41:     PORTD = 0xFF;
   309   00270E  68CD               	setf	205,c	;volatile
   310   002710                     
   311                           ; BSR set to: 58
   312                           ;main.c: 42:     PORTC = 0xFF;
   313   002710  68CC               	setf	204,c	;volatile
   314   002712                     l53:
   315                           
   316                           ;main.c: 45:     X_Input_REG = 0;
   317   002712  0E00               	movlw	0
   318   002714  6E17               	movwf	_X_Input_REG^0,c
   319                           
   320                           ;main.c: 46:     Y_Input_REG = 0;
   321   002716  0E00               	movlw	0
   322   002718  6E16               	movwf	_Y_Input_REG^0,c
   323                           
   324                           ;main.c: 47:     Operation_REG = 0;
   325   00271A  0E00               	movlw	0
   326   00271C  6E15               	movwf	_Operation_REG^0,c
   327                           
   328                           ;main.c: 48:     calculation = 0;
   329   00271E  0E00               	movlw	0
   330   002720  6E14               	movwf	_calculation^0,c
   331                           
   332                           ;main.c: 50:     Display_Result_REG = 0;
   333   002722  0E00               	movlw	0
   334   002724  6E13               	movwf	_Display_Result_REG^0,c
   335   002726                     
   336                           ;main.c: 52:     X_Input_REG = scan_number(LED_Count);
   337   002726  0E01               	movlw	1
   338   002728  EC7F  F011         	call	_scan_number
   339   00272C  6E17               	movwf	_X_Input_REG^0,c
   340   00272E                     
   341                           ;main.c: 53:     Operation_REG = scan_operation();
   342   00272E  ECB2  F013         	call	_scan_operation	;wreg free
   343   002732  6E15               	movwf	_Operation_REG^0,c
   344   002734                     
   345                           ;main.c: 55:     Y_Input_REG = scan_number(LED_Count);
   346   002734  0E02               	movlw	2
   347   002736  EC7F  F011         	call	_scan_number
   348   00273A  6E16               	movwf	_Y_Input_REG^0,c
   349   00273C                     
   350                           ;main.c: 56:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   351   00273C  C016  F005         	movff	_Y_Input_REG,calculate@y
   352   002740  C015  F006         	movff	_Operation_REG,calculate@op
   353   002744  5017               	movf	_X_Input_REG^0,w,c
   354   002746  EC3A  F013         	call	_calculate
   355   00274A  5005               	movf	?_calculate^0,w,c
   356   00274C  6E14               	movwf	_calculation^0,c
   357   00274E                     
   358                           ;main.c: 57:     PORT_Output(calculation);
   359   00274E  5014               	movf	_calculation^0,w,c
   360   002750  6E09               	movwf	PORT_Output@answer^0,c
   361   002752  6A0A               	clrf	(PORT_Output@answer+1)^0,c
   362   002754  BE09               	btfsc	PORT_Output@answer^0,7,c
   363   002756  060A               	decf	(PORT_Output@answer+1)^0,f,c
   364   002758  EC01  F010         	call	_PORT_Output	;wreg free
   365   00275C  EF89  F013         	goto	l53
   366   002760  EFFE  F0FF         	goto	start
   367   002764                     __end_of_main:
   368                           	callstack 0
   369                           
   370 ;; *************** function _scan_operation *****************
   371 ;; Defined at:
   372 ;;		line 133 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  op_key          1    0[COMRAM] char 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      char 
   379 ;; Registers used:
   380 ;;		wreg, status,2
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels used: 1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text1
   400   002764                     __ptext1:
   401                           	callstack 0
   402   002764                     _scan_operation:
   403                           	callstack 30
   404   002764                     
   405                           ;main.c: 134:     signed char op_key = 0;
   406   002764  0E00               	movlw	0
   407   002766  6E01               	movwf	scan_operation@op_key^0,c
   408                           
   409                           ;main.c: 135:     while (op_key ==0) {
   410   002768  EFDB  F013         	goto	l90
   411   00276C                     l91:
   412                           
   413                           ;main.c: 137:      PORTBbits.RB3 = 1;
   414   00276C  86CB               	bsf	203,3,c	;volatile
   415                           
   416                           ;main.c: 138:         if(PORTAbits.RA0 == 1) op_key = 1;
   417   00276E  A0CA               	btfss	202,0,c	;volatile
   418   002770  EFBC  F013         	goto	u401
   419   002774  EFBE  F013         	goto	u400
   420   002778                     u401:
   421   002778  EFC0  F013         	goto	l1064
   422   00277C                     u400:
   423   00277C  0E01               	movlw	1
   424   00277E  6E01               	movwf	scan_operation@op_key^0,c
   425   002780                     l1064:
   426                           
   427                           ;main.c: 139:         if(PORTAbits.RA1 == 1) op_key = 2;
   428   002780  A2CA               	btfss	202,1,c	;volatile
   429   002782  EFC5  F013         	goto	u411
   430   002786  EFC7  F013         	goto	u410
   431   00278A                     u411:
   432   00278A  EFC9  F013         	goto	l1068
   433   00278E                     u410:
   434   00278E  0E02               	movlw	2
   435   002790  6E01               	movwf	scan_operation@op_key^0,c
   436   002792                     l1068:
   437                           
   438                           ;main.c: 140:         if(PORTAbits.RA2 == 1) op_key = 3;
   439   002792  A4CA               	btfss	202,2,c	;volatile
   440   002794  EFCE  F013         	goto	u421
   441   002798  EFD0  F013         	goto	u420
   442   00279C                     u421:
   443   00279C  EFD2  F013         	goto	l1072
   444   0027A0                     u420:
   445   0027A0  0E03               	movlw	3
   446   0027A2  6E01               	movwf	scan_operation@op_key^0,c
   447   0027A4                     l1072:
   448                           
   449                           ;main.c: 141:         if(PORTAbits.RA3 == 1) op_key = 4;
   450   0027A4  A6CA               	btfss	202,3,c	;volatile
   451   0027A6  EFD7  F013         	goto	u431
   452   0027AA  EFD9  F013         	goto	u430
   453   0027AE                     u431:
   454   0027AE  EFDB  F013         	goto	l90
   455   0027B2                     u430:
   456   0027B2  0E04               	movlw	4
   457   0027B4  6E01               	movwf	scan_operation@op_key^0,c
   458   0027B6                     l90:
   459                           
   460                           ;main.c: 135:     while (op_key ==0) {
   461   0027B6  5001               	movf	scan_operation@op_key^0,w,c
   462   0027B8  B4D8               	btfsc	status,2,c
   463   0027BA  EFE1  F013         	goto	u441
   464   0027BE  EFE3  F013         	goto	u440
   465   0027C2                     u441:
   466   0027C2  EFB6  F013         	goto	l91
   467   0027C6                     u440:
   468   0027C6                     
   469                           ;main.c: 144:         return op_key;
   470   0027C6  5001               	movf	scan_operation@op_key^0,w,c
   471   0027C8  0012               	return		;funcret
   472   0027CA                     __end_of_scan_operation:
   473                           	callstack 0
   474                           
   475 ;; *************** function _scan_number *****************
   476 ;; Defined at:
   477 ;;		line 62 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  LED_Count       1    wreg     unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  LED_Count       1    3[COMRAM] unsigned char 
   482 ;;  input           1    4[COMRAM] char 
   483 ;;  output          1    2[COMRAM] char 
   484 ;;  count           1    1[COMRAM] char 
   485 ;;  button          1    0[COMRAM] char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      char 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, prodl, prodh
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   499 ;;Total ram usage:        5 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509   0022FE                     __ptext2:
   510                           	callstack 0
   511   0022FE                     _scan_number:
   512                           	callstack 30
   513                           
   514                           ;incstack = 0
   515                           ;scan_number@LED_Count stored from wreg
   516   0022FE  6E04               	movwf	scan_number@LED_Count^0,c
   517   002300                     
   518                           ;main.c: 63:     signed char input = 10;
   519   002300  0E0A               	movlw	10
   520   002302  6E05               	movwf	scan_number@input^0,c
   521                           
   522                           ;main.c: 65:     signed char button = 0;
   523   002304  0E00               	movlw	0
   524   002306  6E01               	movwf	scan_number@button^0,c
   525                           
   526                           ;main.c: 66:     signed char count = 2;
   527   002308  0E02               	movlw	2
   528   00230A  6E02               	movwf	scan_number@count^0,c
   529                           
   530                           ;main.c: 68:     while (input == 10)
   531   00230C  EFE8  F011         	goto	l990
   532   002310                     l60:
   533                           
   534                           ;main.c: 69:     {;main.c: 70:         PORTBbits.RB0 = 1;
   535   002310  80CB               	bsf	203,0,c	;volatile
   536                           
   537                           ;main.c: 71:         if (PORTAbits.RA0 == 1)input = 1;
   538   002312  A0CA               	btfss	202,0,c	;volatile
   539   002314  EF8E  F011         	goto	u161
   540   002318  EF90  F011         	goto	u160
   541   00231C                     u161:
   542   00231C  EF92  F011         	goto	l944
   543   002320                     u160:
   544   002320  0E01               	movlw	1
   545   002322  6E05               	movwf	scan_number@input^0,c
   546   002324                     l944:
   547                           
   548                           ;main.c: 72:         if(PORTAbits.RA1 == 1) input = 4;
   549   002324  A2CA               	btfss	202,1,c	;volatile
   550   002326  EF97  F011         	goto	u171
   551   00232A  EF99  F011         	goto	u170
   552   00232E                     u171:
   553   00232E  EF9B  F011         	goto	l948
   554   002332                     u170:
   555   002332  0E04               	movlw	4
   556   002334  6E05               	movwf	scan_number@input^0,c
   557   002336                     l948:
   558                           
   559                           ;main.c: 73:         if(PORTAbits.RA2 == 1) input = 7;
   560   002336  A4CA               	btfss	202,2,c	;volatile
   561   002338  EFA0  F011         	goto	u181
   562   00233C  EFA2  F011         	goto	u180
   563   002340                     u181:
   564   002340  EFA4  F011         	goto	l952
   565   002344                     u180:
   566   002344  0E07               	movlw	7
   567   002346  6E05               	movwf	scan_number@input^0,c
   568   002348                     l952:
   569                           
   570                           ;main.c: 74:         PORTBbits.RB0 = 0;
   571   002348  90CB               	bcf	203,0,c	;volatile
   572   00234A                     
   573                           ;main.c: 76:          PORTBbits.RB1 = 1;
   574   00234A  82CB               	bsf	203,1,c	;volatile
   575   00234C                     
   576                           ;main.c: 77:         if (PORTAbits.RA0 == 1)input = 2;
   577   00234C  A0CA               	btfss	202,0,c	;volatile
   578   00234E  EFAB  F011         	goto	u191
   579   002352  EFAD  F011         	goto	u190
   580   002356                     u191:
   581   002356  EFAF  F011         	goto	l960
   582   00235A                     u190:
   583   00235A  0E02               	movlw	2
   584   00235C  6E05               	movwf	scan_number@input^0,c
   585   00235E                     l960:
   586                           
   587                           ;main.c: 78:         if(PORTAbits.RA1 == 1) input = 5;
   588   00235E  A2CA               	btfss	202,1,c	;volatile
   589   002360  EFB4  F011         	goto	u201
   590   002364  EFB6  F011         	goto	u200
   591   002368                     u201:
   592   002368  EFB8  F011         	goto	l964
   593   00236C                     u200:
   594   00236C  0E05               	movlw	5
   595   00236E  6E05               	movwf	scan_number@input^0,c
   596   002370                     l964:
   597                           
   598                           ;main.c: 79:         if(PORTAbits.RA2 == 1) input = 8;
   599   002370  A4CA               	btfss	202,2,c	;volatile
   600   002372  EFBD  F011         	goto	u211
   601   002376  EFBF  F011         	goto	u210
   602   00237A                     u211:
   603   00237A  EFC1  F011         	goto	l968
   604   00237E                     u210:
   605   00237E  0E08               	movlw	8
   606   002380  6E05               	movwf	scan_number@input^0,c
   607   002382                     l968:
   608                           
   609                           ;main.c: 80:         if(PORTAbits.RA3 == 1) input = 0;
   610   002382  A6CA               	btfss	202,3,c	;volatile
   611   002384  EFC6  F011         	goto	u221
   612   002388  EFC8  F011         	goto	u220
   613   00238C                     u221:
   614   00238C  EFCA  F011         	goto	l972
   615   002390                     u220:
   616   002390  0E00               	movlw	0
   617   002392  6E05               	movwf	scan_number@input^0,c
   618   002394                     l972:
   619                           
   620                           ;main.c: 81:         PORTBbits.RB1 = 0;
   621   002394  92CB               	bcf	203,1,c	;volatile
   622   002396                     
   623                           ;main.c: 83:          PORTBbits.RB2 = 1;
   624   002396  84CB               	bsf	203,2,c	;volatile
   625   002398                     
   626                           ;main.c: 84:         if (PORTAbits.RA0 == 1)input = 3;
   627   002398  A0CA               	btfss	202,0,c	;volatile
   628   00239A  EFD1  F011         	goto	u231
   629   00239E  EFD3  F011         	goto	u230
   630   0023A2                     u231:
   631   0023A2  EFD5  F011         	goto	l980
   632   0023A6                     u230:
   633   0023A6  0E03               	movlw	3
   634   0023A8  6E05               	movwf	scan_number@input^0,c
   635   0023AA                     l980:
   636                           
   637                           ;main.c: 85:         if(PORTAbits.RA1 == 1) input = 6;
   638   0023AA  A2CA               	btfss	202,1,c	;volatile
   639   0023AC  EFDA  F011         	goto	u241
   640   0023B0  EFDC  F011         	goto	u240
   641   0023B4                     u241:
   642   0023B4  EFDE  F011         	goto	l984
   643   0023B8                     u240:
   644   0023B8  0E06               	movlw	6
   645   0023BA  6E05               	movwf	scan_number@input^0,c
   646   0023BC                     l984:
   647                           
   648                           ;main.c: 86:         if(PORTAbits.RA2 == 1) input = 9;
   649   0023BC  A4CA               	btfss	202,2,c	;volatile
   650   0023BE  EFE3  F011         	goto	u251
   651   0023C2  EFE5  F011         	goto	u250
   652   0023C6                     u251:
   653   0023C6  EFE7  F011         	goto	l988
   654   0023CA                     u250:
   655   0023CA  0E09               	movlw	9
   656   0023CC  6E05               	movwf	scan_number@input^0,c
   657   0023CE                     l988:
   658                           
   659                           ;main.c: 87:         PORTBbits.RB2 = 0;
   660   0023CE  94CB               	bcf	203,2,c	;volatile
   661   0023D0                     l990:
   662                           
   663                           ;main.c: 68:     while (input == 10)
   664   0023D0  0E0A               	movlw	10
   665   0023D2  1805               	xorwf	scan_number@input^0,w,c
   666   0023D4  B4D8               	btfsc	status,2,c
   667   0023D6  EFEF  F011         	goto	u261
   668   0023DA  EFF1  F011         	goto	u260
   669   0023DE                     u261:
   670   0023DE  EF88  F011         	goto	l60
   671   0023E2                     u260:
   672   0023E2                     
   673                           ;main.c: 92:     input *=10;
   674   0023E2  0E0A               	movlw	10
   675   0023E4  0205               	mulwf	scan_number@input^0,c
   676   0023E6  50F3               	movf	prodl,w,c
   677   0023E8  6E05               	movwf	scan_number@input^0,c
   678   0023EA                     
   679                           ;main.c: 93:     output = input;
   680   0023EA  C005  F003         	movff	scan_number@input,scan_number@output
   681   0023EE                     
   682                           ;main.c: 95:     input = 10;
   683   0023EE  0E0A               	movlw	10
   684   0023F0  6E05               	movwf	scan_number@input^0,c
   685                           
   686                           ;main.c: 96:     while (input == 10)
   687   0023F2  EF5D  F012         	goto	l1046
   688   0023F6                     l73:
   689                           
   690                           ;main.c: 97:     {;main.c: 98:         PORTBbits.RB0 = 1;
   691   0023F6  80CB               	bsf	203,0,c	;volatile
   692                           
   693                           ;main.c: 99:         if (PORTAbits.RA0 == 1)input = 1;
   694   0023F8  A0CA               	btfss	202,0,c	;volatile
   695   0023FA  EF01  F012         	goto	u271
   696   0023FE  EF03  F012         	goto	u270
   697   002402                     u271:
   698   002402  EF05  F012         	goto	l1000
   699   002406                     u270:
   700   002406  0E01               	movlw	1
   701   002408  6E05               	movwf	scan_number@input^0,c
   702   00240A                     l1000:
   703                           
   704                           ;main.c: 100:         if(PORTAbits.RA1 == 1) input = 4;
   705   00240A  A2CA               	btfss	202,1,c	;volatile
   706   00240C  EF0A  F012         	goto	u281
   707   002410  EF0C  F012         	goto	u280
   708   002414                     u281:
   709   002414  EF0E  F012         	goto	l1004
   710   002418                     u280:
   711   002418  0E04               	movlw	4
   712   00241A  6E05               	movwf	scan_number@input^0,c
   713   00241C                     l1004:
   714                           
   715                           ;main.c: 101:         if(PORTAbits.RA2 == 1) input = 7;
   716   00241C  A4CA               	btfss	202,2,c	;volatile
   717   00241E  EF13  F012         	goto	u291
   718   002422  EF15  F012         	goto	u290
   719   002426                     u291:
   720   002426  EF17  F012         	goto	l1008
   721   00242A                     u290:
   722   00242A  0E07               	movlw	7
   723   00242C  6E05               	movwf	scan_number@input^0,c
   724   00242E                     l1008:
   725                           
   726                           ;main.c: 102:         PORTBbits.RB0 = 0;
   727   00242E  90CB               	bcf	203,0,c	;volatile
   728   002430                     
   729                           ;main.c: 104:          PORTBbits.RB1 = 1;
   730   002430  82CB               	bsf	203,1,c	;volatile
   731   002432                     
   732                           ;main.c: 105:         if(PORTAbits.RA0 == 1) input = 2;
   733   002432  A0CA               	btfss	202,0,c	;volatile
   734   002434  EF1E  F012         	goto	u301
   735   002438  EF20  F012         	goto	u300
   736   00243C                     u301:
   737   00243C  EF22  F012         	goto	l1016
   738   002440                     u300:
   739   002440  0E02               	movlw	2
   740   002442  6E05               	movwf	scan_number@input^0,c
   741   002444                     l1016:
   742                           
   743                           ;main.c: 106:         if(PORTAbits.RA1 == 1) input = 5;
   744   002444  A2CA               	btfss	202,1,c	;volatile
   745   002446  EF27  F012         	goto	u311
   746   00244A  EF29  F012         	goto	u310
   747   00244E                     u311:
   748   00244E  EF2B  F012         	goto	l1020
   749   002452                     u310:
   750   002452  0E05               	movlw	5
   751   002454  6E05               	movwf	scan_number@input^0,c
   752   002456                     l1020:
   753                           
   754                           ;main.c: 107:         if(PORTAbits.RA2 == 1) input = 8;
   755   002456  A4CA               	btfss	202,2,c	;volatile
   756   002458  EF30  F012         	goto	u321
   757   00245C  EF32  F012         	goto	u320
   758   002460                     u321:
   759   002460  EF34  F012         	goto	l1024
   760   002464                     u320:
   761   002464  0E08               	movlw	8
   762   002466  6E05               	movwf	scan_number@input^0,c
   763   002468                     l1024:
   764                           
   765                           ;main.c: 108:         if(PORTAbits.RA3 == 1) input = 0;
   766   002468  A6CA               	btfss	202,3,c	;volatile
   767   00246A  EF39  F012         	goto	u331
   768   00246E  EF3B  F012         	goto	u330
   769   002472                     u331:
   770   002472  EF3D  F012         	goto	l1028
   771   002476                     u330:
   772   002476  0E00               	movlw	0
   773   002478  6E05               	movwf	scan_number@input^0,c
   774   00247A                     l1028:
   775                           
   776                           ;main.c: 109:         PORTBbits.RB1 = 0;
   777   00247A  92CB               	bcf	203,1,c	;volatile
   778   00247C                     
   779                           ;main.c: 111:          PORTBbits.RB2 = 1;
   780   00247C  84CB               	bsf	203,2,c	;volatile
   781   00247E                     
   782                           ;main.c: 112:         if (PORTAbits.RA0 == 1)input = 3;
   783   00247E  A0CA               	btfss	202,0,c	;volatile
   784   002480  EF44  F012         	goto	u341
   785   002484  EF46  F012         	goto	u340
   786   002488                     u341:
   787   002488  EF48  F012         	goto	l1036
   788   00248C                     u340:
   789   00248C  0E03               	movlw	3
   790   00248E  6E05               	movwf	scan_number@input^0,c
   791   002490                     l1036:
   792                           
   793                           ;main.c: 113:         if(PORTAbits.RA1 == 1) input = 6;
   794   002490  A2CA               	btfss	202,1,c	;volatile
   795   002492  EF4D  F012         	goto	u351
   796   002496  EF4F  F012         	goto	u350
   797   00249A                     u351:
   798   00249A  EF51  F012         	goto	l1040
   799   00249E                     u350:
   800   00249E  0E06               	movlw	6
   801   0024A0  6E05               	movwf	scan_number@input^0,c
   802   0024A2                     l1040:
   803                           
   804                           ;main.c: 114:         if(PORTAbits.RA2 == 1) input = 9;
   805   0024A2  A4CA               	btfss	202,2,c	;volatile
   806   0024A4  EF56  F012         	goto	u361
   807   0024A8  EF58  F012         	goto	u360
   808   0024AC                     u361:
   809   0024AC  EF5A  F012         	goto	l1044
   810   0024B0                     u360:
   811   0024B0  0E09               	movlw	9
   812   0024B2  6E05               	movwf	scan_number@input^0,c
   813   0024B4                     l1044:
   814                           
   815                           ;main.c: 115:         PORTBbits.RB2 = 0;
   816   0024B4  94CB               	bcf	203,2,c	;volatile
   817                           
   818                           ;main.c: 117:         PORTB = 0;
   819   0024B6  0E00               	movlw	0
   820   0024B8  6ECB               	movwf	203,c	;volatile
   821   0024BA                     l1046:
   822                           
   823                           ;main.c: 96:     while (input == 10)
   824   0024BA  0E0A               	movlw	10
   825   0024BC  1805               	xorwf	scan_number@input^0,w,c
   826   0024BE  B4D8               	btfsc	status,2,c
   827   0024C0  EF64  F012         	goto	u371
   828   0024C4  EF66  F012         	goto	u370
   829   0024C8                     u371:
   830   0024C8  EFFB  F011         	goto	l73
   831   0024CC                     u370:
   832   0024CC                     
   833                           ;main.c: 119:     output += input;
   834   0024CC  5005               	movf	scan_number@input^0,w,c
   835   0024CE  2603               	addwf	scan_number@output^0,f,c
   836                           
   837                           ;main.c: 121:     if(LED_Count == 1 ){
   838   0024D0  0404               	decf	scan_number@LED_Count^0,w,c
   839   0024D2  A4D8               	btfss	status,2,c
   840   0024D4  EF6E  F012         	goto	u381
   841   0024D8  EF70  F012         	goto	u380
   842   0024DC                     u381:
   843   0024DC  EF72  F012         	goto	l1052
   844   0024E0                     u380:
   845   0024E0                     
   846                           ;main.c: 122:             PORTBbits.RB5 = 1;
   847   0024E0  8ACB               	bsf	203,5,c	;volatile
   848                           
   849                           ;main.c: 123:             PORTCbits.RC7 = 0;
   850   0024E2  9ECC               	bcf	204,7,c	;volatile
   851   0024E4                     l1052:
   852                           
   853                           ;main.c: 125:     if(LED_Count == 2){
   854   0024E4  0E02               	movlw	2
   855   0024E6  1804               	xorwf	scan_number@LED_Count^0,w,c
   856   0024E8  A4D8               	btfss	status,2,c
   857   0024EA  EF79  F012         	goto	u391
   858   0024EE  EF7B  F012         	goto	u390
   859   0024F2                     u391:
   860   0024F2  EF7E  F012         	goto	l1056
   861   0024F6                     u390:
   862   0024F6                     
   863                           ;main.c: 126:             PORTCbits.RC7 = 1;
   864   0024F6  8ECC               	bsf	204,7,c	;volatile
   865                           
   866                           ;main.c: 127:             PORTBbits.RB6 = 1;
   867   0024F8  8CCB               	bsf	203,6,c	;volatile
   868                           
   869                           ;main.c: 128:             PORTCbits.RC6 = 0;
   870   0024FA  9CCC               	bcf	204,6,c	;volatile
   871   0024FC                     l1056:
   872                           
   873                           ;main.c: 130:     return output;
   874   0024FC  5003               	movf	scan_number@output^0,w,c
   875   0024FE  0012               	return		;funcret
   876   002500                     __end_of_scan_number:
   877                           	callstack 0
   878                           
   879 ;; *************** function _calculate *****************
   880 ;; Defined at:
   881 ;;		line 147 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  x               1    wreg     unsigned char 
   884 ;;  y               1    4[COMRAM] unsigned char 
   885 ;;  op              1    5[COMRAM] unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  x               1    7[COMRAM] unsigned char 
   888 ;;  output          1    6[COMRAM] char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    4[COMRAM] int 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   901 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   902 ;;Total ram usage:        4 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 1
   905 ;; This function calls:
   906 ;;		___lbdiv
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text3
   913   002674                     __ptext3:
   914                           	callstack 0
   915   002674                     _calculate:
   916                           	callstack 29
   917                           
   918                           ;incstack = 0
   919                           ;calculate@x stored from wreg
   920   002674  6E08               	movwf	calculate@x^0,c
   921   002676                     
   922                           ;main.c: 148:     signed char output = 0;
   923   002676  0E00               	movlw	0
   924   002678  6E07               	movwf	calculate@output^0,c
   925   00267A                     
   926                           ;main.c: 149:     if(op == 1)
   927   00267A  0406               	decf	calculate@op^0,w,c
   928   00267C  A4D8               	btfss	status,2,c
   929   00267E  EF43  F013         	goto	u881
   930   002682  EF45  F013         	goto	u880
   931   002686                     u881:
   932   002686  EF48  F013         	goto	l100
   933   00268A                     u880:
   934   00268A                     
   935                           ;main.c: 150:         output = x + y;
   936   00268A  5008               	movf	calculate@x^0,w,c
   937   00268C  2405               	addwf	calculate@y^0,w,c
   938   00268E  6E07               	movwf	calculate@output^0,c
   939   002690                     l100:
   940                           
   941                           ;main.c: 151:     if(op == 2)
   942   002690  0E02               	movlw	2
   943   002692  1806               	xorwf	calculate@op^0,w,c
   944   002694  A4D8               	btfss	status,2,c
   945   002696  EF4F  F013         	goto	u891
   946   00269A  EF51  F013         	goto	u890
   947   00269E                     u891:
   948   00269E  EF54  F013         	goto	l101
   949   0026A2                     u890:
   950   0026A2                     
   951                           ;main.c: 152:         output = x-y;
   952   0026A2  5005               	movf	calculate@y^0,w,c
   953   0026A4  5C08               	subwf	calculate@x^0,w,c
   954   0026A6  6E07               	movwf	calculate@output^0,c
   955   0026A8                     l101:
   956                           
   957                           ;main.c: 153:     if(op == 3)
   958   0026A8  0E03               	movlw	3
   959   0026AA  1806               	xorwf	calculate@op^0,w,c
   960   0026AC  A4D8               	btfss	status,2,c
   961   0026AE  EF5B  F013         	goto	u901
   962   0026B2  EF5D  F013         	goto	u900
   963   0026B6                     u901:
   964   0026B6  EF62  F013         	goto	l1354
   965   0026BA                     u900:
   966   0026BA                     
   967                           ;main.c: 154:         output = x*y;
   968   0026BA  5008               	movf	calculate@x^0,w,c
   969   0026BC  0205               	mulwf	calculate@y^0,c
   970   0026BE  006F FFCC  F007    	movff	prodl,calculate@output
   971   0026C4                     l1354:
   972                           
   973                           ;main.c: 155:     if(op == 4)
   974   0026C4  0E04               	movlw	4
   975   0026C6  1806               	xorwf	calculate@op^0,w,c
   976   0026C8  A4D8               	btfss	status,2,c
   977   0026CA  EF69  F013         	goto	u911
   978   0026CE  EF6B  F013         	goto	u910
   979   0026D2                     u911:
   980   0026D2  EF71  F013         	goto	l1358
   981   0026D6                     u910:
   982   0026D6                     
   983                           ;main.c: 156:         output = x/y;
   984   0026D6  C005  F001         	movff	calculate@y,___lbdiv@divisor
   985   0026DA  5008               	movf	calculate@x^0,w,c
   986   0026DC  ECE5  F013         	call	___lbdiv
   987   0026E0  6E07               	movwf	calculate@output^0,c
   988   0026E2                     l1358:
   989                           
   990                           ;main.c: 157:     return output;
   991   0026E2  5007               	movf	calculate@output^0,w,c
   992   0026E4  6E05               	movwf	?_calculate^0,c
   993   0026E6  6A06               	clrf	(?_calculate+1)^0,c
   994   0026E8  BE05               	btfsc	?_calculate^0,7,c
   995   0026EA  0606               	decf	(?_calculate+1)^0,f,c
   996   0026EC  0012               	return		;funcret
   997   0026EE                     __end_of_calculate:
   998                           	callstack 0
   999                           
  1000 ;; *************** function ___lbdiv *****************
  1001 ;; Defined at:
  1002 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  dividend        1    wreg     unsigned char 
  1005 ;;  divisor         1    0[COMRAM] unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  dividend        1    1[COMRAM] unsigned char 
  1008 ;;  quotient        1    3[COMRAM] unsigned char 
  1009 ;;  counter         1    2[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      unsigned char 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1023 ;;Total ram usage:        4 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_calculate
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text4
  1033   0027CA                     __ptext4:
  1034                           	callstack 0
  1035   0027CA                     ___lbdiv:
  1036                           	callstack 29
  1037                           
  1038                           ;incstack = 0
  1039                           ;___lbdiv@dividend stored from wreg
  1040   0027CA  6E02               	movwf	___lbdiv@dividend^0,c
  1041   0027CC  0E00               	movlw	0
  1042   0027CE  6E04               	movwf	___lbdiv@quotient^0,c
  1043   0027D0  5001               	movf	___lbdiv@divisor^0,w,c
  1044   0027D2  B4D8               	btfsc	status,2,c
  1045   0027D4  EFEE  F013         	goto	u851
  1046   0027D8  EFF0  F013         	goto	u850
  1047   0027DC                     u851:
  1048   0027DC  EF11  F014         	goto	l1340
  1049   0027E0                     u850:
  1050   0027E0  0E01               	movlw	1
  1051   0027E2  6E03               	movwf	___lbdiv@counter^0,c
  1052   0027E4  EFF7  F013         	goto	l1328
  1053   0027E8                     l1324:
  1054   0027E8  90D8               	bcf	status,0,c
  1055   0027EA  3601               	rlcf	___lbdiv@divisor^0,f,c
  1056   0027EC  2A03               	incf	___lbdiv@counter^0,f,c
  1057   0027EE                     l1328:
  1058   0027EE  AE01               	btfss	___lbdiv@divisor^0,7,c
  1059   0027F0  EFFC  F013         	goto	u861
  1060   0027F4  EFFE  F013         	goto	u860
  1061   0027F8                     u861:
  1062   0027F8  EFF4  F013         	goto	l1324
  1063   0027FC                     u860:
  1064   0027FC                     l1330:
  1065   0027FC  90D8               	bcf	status,0,c
  1066   0027FE  3604               	rlcf	___lbdiv@quotient^0,f,c
  1067   002800  5001               	movf	___lbdiv@divisor^0,w,c
  1068   002802  5C02               	subwf	___lbdiv@dividend^0,w,c
  1069   002804  A0D8               	btfss	status,0,c
  1070   002806  EF07  F014         	goto	u871
  1071   00280A  EF09  F014         	goto	u870
  1072   00280E                     u871:
  1073   00280E  EF0C  F014         	goto	l1336
  1074   002812                     u870:
  1075   002812  5001               	movf	___lbdiv@divisor^0,w,c
  1076   002814  5E02               	subwf	___lbdiv@dividend^0,f,c
  1077   002816  8004               	bsf	___lbdiv@quotient^0,0,c
  1078   002818                     l1336:
  1079   002818  90D8               	bcf	status,0,c
  1080   00281A  3201               	rrcf	___lbdiv@divisor^0,f,c
  1081   00281C  2E03               	decfsz	___lbdiv@counter^0,f,c
  1082   00281E  EFFE  F013         	goto	l1330
  1083   002822                     l1340:
  1084   002822  5004               	movf	___lbdiv@quotient^0,w,c
  1085   002824  0012               	return		;funcret
  1086   002826                     __end_of___lbdiv:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _PORT_Output *****************
  1090 ;; Defined at:
  1091 ;;		line 160 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  answer          2    8[COMRAM] int 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  i               2   12[COMRAM] int 
  1096 ;;  second_dig      1   17[COMRAM] char 
  1097 ;;  first_dig       1   16[COMRAM] char 
  1098 ;;  display2        1   15[COMRAM] unsigned char 
  1099 ;;  display1        1   14[COMRAM] unsigned char 
  1100 ;;  enter           1   11[COMRAM] char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1111 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;Total ram usage:       10 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 1
  1117 ;; This function calls:
  1118 ;;		___awdiv
  1119 ;;		___awmod
  1120 ;;		___wmul
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text5
  1127   002002                     __ptext5:
  1128                           	callstack 0
  1129   002002                     _PORT_Output:
  1130                           	callstack 29
  1131   002002                     
  1132                           ;main.c: 162:     signed char second_dig = 0;
  1133   002002  0E00               	movlw	0
  1134   002004  6E12               	movwf	PORT_Output@second_dig^0,c
  1135                           
  1136                           ;main.c: 163:     signed char enter = 0;
  1137   002006  0E00               	movlw	0
  1138   002008  6E0C               	movwf	PORT_Output@enter^0,c
  1139                           
  1140                           ;main.c: 164:     int i = 0;
  1141   00200A  0E00               	movlw	0
  1142   00200C  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1143   00200E  0E00               	movlw	0
  1144   002010  6E0D               	movwf	PORT_Output@i^0,c
  1145                           
  1146                           ;main.c: 165:     char display1 = 0;
  1147   002012  0E00               	movlw	0
  1148   002014  6E0F               	movwf	PORT_Output@display1^0,c
  1149                           
  1150                           ;main.c: 166:     char display2 = 0;
  1151   002016  0E00               	movlw	0
  1152   002018  6E10               	movwf	PORT_Output@display2^0,c
  1153   00201A                     
  1154                           ;main.c: 168:     if(answer<0){
  1155   00201A  BE0A               	btfsc	(PORT_Output@answer+1)^0,7,c
  1156   00201C  EF14  F010         	goto	u920
  1157   002020  EF12  F010         	goto	u921
  1158   002024                     u921:
  1159   002024  EF22  F010         	goto	l1370
  1160   002028                     u920:
  1161   002028                     
  1162                           ;main.c: 169:         answer*= -1;
  1163   002028  C009  F001         	movff	PORT_Output@answer,___wmul@multiplier
  1164   00202C  C00A  F002         	movff	PORT_Output@answer+1,___wmul@multiplier+1
  1165   002030  0EFF               	movlw	255
  1166   002032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1167   002034  6803               	setf	___wmul@multiplicand^0,c
  1168   002036  EC13  F014         	call	___wmul	;wreg free
  1169   00203A  C001  F009         	movff	?___wmul,PORT_Output@answer
  1170   00203E  C002  F00A         	movff	?___wmul+1,PORT_Output@answer+1
  1171   002042                     
  1172                           ;main.c: 170:         PORTCbits.RC7 = 0;
  1173   002042  9ECC               	bcf	204,7,c	;volatile
  1174   002044                     l1370:
  1175                           
  1176                           ;main.c: 172:     first_dig = answer/10;
  1177   002044  C009  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1178   002048  C00A  F002         	movff	PORT_Output@answer+1,___awdiv@dividend+1
  1179   00204C  0E00               	movlw	0
  1180   00204E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1181   002050  0E0A               	movlw	10
  1182   002052  6E03               	movwf	___awdiv@divisor^0,c
  1183   002054  EC80  F012         	call	___awdiv	;wreg free
  1184   002058  5001               	movf	?___awdiv^0,w,c
  1185   00205A  6E11               	movwf	PORT_Output@first_dig^0,c
  1186   00205C                     
  1187                           ;main.c: 173:     second_dig = answer % 10;
  1188   00205C  C009  F001         	movff	PORT_Output@answer,___awmod@dividend
  1189   002060  C00A  F002         	movff	PORT_Output@answer+1,___awmod@dividend+1
  1190   002064  0E00               	movlw	0
  1191   002066  6E04               	movwf	(___awmod@divisor+1)^0,c
  1192   002068  0E0A               	movlw	10
  1193   00206A  6E03               	movwf	___awmod@divisor^0,c
  1194   00206C  ECE2  F012         	call	___awmod	;wreg free
  1195   002070  5001               	movf	?___awmod^0,w,c
  1196   002072  6E12               	movwf	PORT_Output@second_dig^0,c
  1197   002074                     
  1198                           ;main.c: 175:     if(first_dig == 0) display1 = 0xC0;
  1199   002074  5011               	movf	PORT_Output@first_dig^0,w,c
  1200   002076  A4D8               	btfss	status,2,c
  1201   002078  EF40  F010         	goto	u931
  1202   00207C  EF42  F010         	goto	u930
  1203   002080                     u931:
  1204   002080  EF46  F010         	goto	l1378
  1205   002084                     u930:
  1206   002084  0EC0               	movlw	192
  1207   002086  6E0F               	movwf	PORT_Output@display1^0,c
  1208   002088  EFBA  F010         	goto	l109
  1209   00208C                     l1378:
  1210   00208C  0411               	decf	PORT_Output@first_dig^0,w,c
  1211   00208E  A4D8               	btfss	status,2,c
  1212   002090  EF4C  F010         	goto	u941
  1213   002094  EF4E  F010         	goto	u940
  1214   002098                     u941:
  1215   002098  EF52  F010         	goto	l1382
  1216   00209C                     u940:
  1217   00209C  0EF9               	movlw	249
  1218   00209E  6E0F               	movwf	PORT_Output@display1^0,c
  1219   0020A0  EFBA  F010         	goto	l109
  1220   0020A4                     l1382:
  1221   0020A4  0E02               	movlw	2
  1222   0020A6  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1223   0020A8  A4D8               	btfss	status,2,c
  1224   0020AA  EF59  F010         	goto	u951
  1225   0020AE  EF5B  F010         	goto	u950
  1226   0020B2                     u951:
  1227   0020B2  EF5F  F010         	goto	l1386
  1228   0020B6                     u950:
  1229   0020B6  0EA4               	movlw	164
  1230   0020B8  6E0F               	movwf	PORT_Output@display1^0,c
  1231   0020BA  EFBA  F010         	goto	l109
  1232   0020BE                     l1386:
  1233   0020BE  0E03               	movlw	3
  1234   0020C0  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1235   0020C2  A4D8               	btfss	status,2,c
  1236   0020C4  EF66  F010         	goto	u961
  1237   0020C8  EF68  F010         	goto	u960
  1238   0020CC                     u961:
  1239   0020CC  EF6C  F010         	goto	l1390
  1240   0020D0                     u960:
  1241   0020D0  0EB0               	movlw	176
  1242   0020D2  6E0F               	movwf	PORT_Output@display1^0,c
  1243   0020D4  EFBA  F010         	goto	l109
  1244   0020D8                     l1390:
  1245   0020D8  0E04               	movlw	4
  1246   0020DA  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1247   0020DC  A4D8               	btfss	status,2,c
  1248   0020DE  EF73  F010         	goto	u971
  1249   0020E2  EF75  F010         	goto	u970
  1250   0020E6                     u971:
  1251   0020E6  EF79  F010         	goto	l1394
  1252   0020EA                     u970:
  1253   0020EA  0E99               	movlw	153
  1254   0020EC  6E0F               	movwf	PORT_Output@display1^0,c
  1255   0020EE  EFBA  F010         	goto	l109
  1256   0020F2                     l1394:
  1257   0020F2  0E05               	movlw	5
  1258   0020F4  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1259   0020F6  A4D8               	btfss	status,2,c
  1260   0020F8  EF80  F010         	goto	u981
  1261   0020FC  EF82  F010         	goto	u980
  1262   002100                     u981:
  1263   002100  EF86  F010         	goto	l1398
  1264   002104                     u980:
  1265   002104  0E92               	movlw	146
  1266   002106  6E0F               	movwf	PORT_Output@display1^0,c
  1267   002108  EFBA  F010         	goto	l109
  1268   00210C                     l1398:
  1269   00210C  0E06               	movlw	6
  1270   00210E  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1271   002110  A4D8               	btfss	status,2,c
  1272   002112  EF8D  F010         	goto	u991
  1273   002116  EF8F  F010         	goto	u990
  1274   00211A                     u991:
  1275   00211A  EF93  F010         	goto	l1402
  1276   00211E                     u990:
  1277   00211E  0E82               	movlw	130
  1278   002120  6E0F               	movwf	PORT_Output@display1^0,c
  1279   002122  EFBA  F010         	goto	l109
  1280   002126                     l1402:
  1281   002126  0E07               	movlw	7
  1282   002128  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1283   00212A  A4D8               	btfss	status,2,c
  1284   00212C  EF9A  F010         	goto	u1001
  1285   002130  EF9C  F010         	goto	u1000
  1286   002134                     u1001:
  1287   002134  EFA0  F010         	goto	l1406
  1288   002138                     u1000:
  1289   002138  0EF8               	movlw	248
  1290   00213A  6E0F               	movwf	PORT_Output@display1^0,c
  1291   00213C  EFBA  F010         	goto	l109
  1292   002140                     l1406:
  1293   002140  0E08               	movlw	8
  1294   002142  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1295   002144  A4D8               	btfss	status,2,c
  1296   002146  EFA7  F010         	goto	u1011
  1297   00214A  EFA9  F010         	goto	u1010
  1298   00214E                     u1011:
  1299   00214E  EFAD  F010         	goto	l1410
  1300   002152                     u1010:
  1301   002152  0E80               	movlw	128
  1302   002154  6E0F               	movwf	PORT_Output@display1^0,c
  1303   002156  EFBA  F010         	goto	l109
  1304   00215A                     l1410:
  1305   00215A  0E09               	movlw	9
  1306   00215C  1811               	xorwf	PORT_Output@first_dig^0,w,c
  1307   00215E  A4D8               	btfss	status,2,c
  1308   002160  EFB4  F010         	goto	u1021
  1309   002164  EFB6  F010         	goto	u1020
  1310   002168                     u1021:
  1311   002168  EFBA  F010         	goto	l121
  1312   00216C                     u1020:
  1313   00216C  0E98               	movlw	152
  1314   00216E  6E0F               	movwf	PORT_Output@display1^0,c
  1315   002170  EFBA  F010         	goto	l109
  1316   002174                     l121:
  1317   002174                     l109:
  1318                           
  1319                           ;main.c: 186:     if(second_dig == 0) display2 = 0xC0;
  1320   002174  5012               	movf	PORT_Output@second_dig^0,w,c
  1321   002176  A4D8               	btfss	status,2,c
  1322   002178  EFC0  F010         	goto	u1031
  1323   00217C  EFC2  F010         	goto	u1030
  1324   002180                     u1031:
  1325   002180  EFC6  F010         	goto	l1416
  1326   002184                     u1030:
  1327   002184  0EC0               	movlw	192
  1328   002186  6E10               	movwf	PORT_Output@display2^0,c
  1329   002188  EF46  F011         	goto	l146
  1330   00218C                     l1416:
  1331   00218C  0412               	decf	PORT_Output@second_dig^0,w,c
  1332   00218E  A4D8               	btfss	status,2,c
  1333   002190  EFCC  F010         	goto	u1041
  1334   002194  EFCE  F010         	goto	u1040
  1335   002198                     u1041:
  1336   002198  EFD2  F010         	goto	l1420
  1337   00219C                     u1040:
  1338   00219C  0EF9               	movlw	249
  1339   00219E  6E10               	movwf	PORT_Output@display2^0,c
  1340   0021A0  EF46  F011         	goto	l146
  1341   0021A4                     l1420:
  1342   0021A4  0E02               	movlw	2
  1343   0021A6  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1344   0021A8  A4D8               	btfss	status,2,c
  1345   0021AA  EFD9  F010         	goto	u1051
  1346   0021AE  EFDB  F010         	goto	u1050
  1347   0021B2                     u1051:
  1348   0021B2  EFDF  F010         	goto	l1424
  1349   0021B6                     u1050:
  1350   0021B6  0EA4               	movlw	164
  1351   0021B8  6E10               	movwf	PORT_Output@display2^0,c
  1352   0021BA  EF46  F011         	goto	l146
  1353   0021BE                     l1424:
  1354   0021BE  0E03               	movlw	3
  1355   0021C0  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1356   0021C2  A4D8               	btfss	status,2,c
  1357   0021C4  EFE6  F010         	goto	u1061
  1358   0021C8  EFE8  F010         	goto	u1060
  1359   0021CC                     u1061:
  1360   0021CC  EFEC  F010         	goto	l1428
  1361   0021D0                     u1060:
  1362   0021D0  0EB0               	movlw	176
  1363   0021D2  6E10               	movwf	PORT_Output@display2^0,c
  1364   0021D4  EF46  F011         	goto	l146
  1365   0021D8                     l1428:
  1366   0021D8  0E04               	movlw	4
  1367   0021DA  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1368   0021DC  A4D8               	btfss	status,2,c
  1369   0021DE  EFF3  F010         	goto	u1071
  1370   0021E2  EFF5  F010         	goto	u1070
  1371   0021E6                     u1071:
  1372   0021E6  EFF9  F010         	goto	l1432
  1373   0021EA                     u1070:
  1374   0021EA  0E99               	movlw	153
  1375   0021EC  6E10               	movwf	PORT_Output@display2^0,c
  1376   0021EE  EF46  F011         	goto	l146
  1377   0021F2                     l1432:
  1378   0021F2  0E05               	movlw	5
  1379   0021F4  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1380   0021F6  A4D8               	btfss	status,2,c
  1381   0021F8  EF00  F011         	goto	u1081
  1382   0021FC  EF02  F011         	goto	u1080
  1383   002200                     u1081:
  1384   002200  EF06  F011         	goto	l1436
  1385   002204                     u1080:
  1386   002204  0E92               	movlw	146
  1387   002206  6E10               	movwf	PORT_Output@display2^0,c
  1388   002208  EF46  F011         	goto	l146
  1389   00220C                     l1436:
  1390   00220C  0E06               	movlw	6
  1391   00220E  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1392   002210  A4D8               	btfss	status,2,c
  1393   002212  EF0D  F011         	goto	u1091
  1394   002216  EF0F  F011         	goto	u1090
  1395   00221A                     u1091:
  1396   00221A  EF13  F011         	goto	l1440
  1397   00221E                     u1090:
  1398   00221E  0E82               	movlw	130
  1399   002220  6E10               	movwf	PORT_Output@display2^0,c
  1400   002222  EF46  F011         	goto	l146
  1401   002226                     l1440:
  1402   002226  0E07               	movlw	7
  1403   002228  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1404   00222A  A4D8               	btfss	status,2,c
  1405   00222C  EF1A  F011         	goto	u1101
  1406   002230  EF1C  F011         	goto	u1100
  1407   002234                     u1101:
  1408   002234  EF20  F011         	goto	l1444
  1409   002238                     u1100:
  1410   002238  0EF8               	movlw	248
  1411   00223A  6E10               	movwf	PORT_Output@display2^0,c
  1412   00223C  EF46  F011         	goto	l146
  1413   002240                     l1444:
  1414   002240  0E08               	movlw	8
  1415   002242  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1416   002244  A4D8               	btfss	status,2,c
  1417   002246  EF27  F011         	goto	u1111
  1418   00224A  EF29  F011         	goto	u1110
  1419   00224E                     u1111:
  1420   00224E  EF2D  F011         	goto	l1448
  1421   002252                     u1110:
  1422   002252  0E80               	movlw	128
  1423   002254  6E10               	movwf	PORT_Output@display2^0,c
  1424   002256  EF46  F011         	goto	l146
  1425   00225A                     l1448:
  1426   00225A  0E09               	movlw	9
  1427   00225C  1812               	xorwf	PORT_Output@second_dig^0,w,c
  1428   00225E  A4D8               	btfss	status,2,c
  1429   002260  EF34  F011         	goto	u1121
  1430   002264  EF36  F011         	goto	u1120
  1431   002268                     u1121:
  1432   002268  EF3A  F011         	goto	l140
  1433   00226C                     u1120:
  1434   00226C  0E98               	movlw	152
  1435   00226E  6E10               	movwf	PORT_Output@display2^0,c
  1436   002270  EF46  F011         	goto	l146
  1437   002274                     l140:
  1438   002274  EF46  F011         	goto	l146
  1439   002278                     l147:
  1440                           
  1441                           ;main.c: 198:         PORTBbits.RB2 = 1;
  1442   002278  84CB               	bsf	203,2,c	;volatile
  1443                           
  1444                           ;main.c: 199:         if(PORTAbits.RA3 == 1) enter =1;
  1445   00227A  A6CA               	btfss	202,3,c	;volatile
  1446   00227C  EF42  F011         	goto	u1131
  1447   002280  EF44  F011         	goto	u1130
  1448   002284                     u1131:
  1449   002284  EF46  F011         	goto	l146
  1450   002288                     u1130:
  1451   002288  0E01               	movlw	1
  1452   00228A  6E0C               	movwf	PORT_Output@enter^0,c
  1453   00228C                     l146:
  1454                           
  1455                           ;main.c: 197:     while(enter == 0){
  1456   00228C  500C               	movf	PORT_Output@enter^0,w,c
  1457   00228E  B4D8               	btfsc	status,2,c
  1458   002290  EF4C  F011         	goto	u1141
  1459   002294  EF4E  F011         	goto	u1140
  1460   002298                     u1141:
  1461   002298  EF3C  F011         	goto	l147
  1462   00229C                     u1140:
  1463   00229C                     
  1464                           ;main.c: 202:     PORTCbits.RC6 = 1;
  1465   00229C  8CCC               	bsf	204,6,c	;volatile
  1466   00229E                     
  1467                           ;main.c: 203:     for(i = 1; i<1000; i++)
  1468   00229E  0E00               	movlw	0
  1469   0022A0  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1470   0022A2  0E01               	movlw	1
  1471   0022A4  6E0D               	movwf	PORT_Output@i^0,c
  1472   0022A6                     l150:
  1473                           
  1474                           ;main.c: 204:     {;main.c: 205:         PORTBbits.RB5 = 1;
  1475   0022A6  8ACB               	bsf	203,5,c	;volatile
  1476                           
  1477                           ;main.c: 206:         PORTD = display1;
  1478   0022A8  0060  F03F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1479   0022AE                     
  1480                           ;main.c: 207:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1481   0022AE  0E03               	movlw	3
  1482   0022B0  6E0B               	movwf	??_PORT_Output^0,c
  1483   0022B2  0E98               	movlw	152
  1484   0022B4                     u1167:
  1485   0022B4  2EE8               	decfsz	wreg,f,c
  1486   0022B6  D7FE               	bra	u1167
  1487   0022B8  2E0B               	decfsz	??_PORT_Output^0,f,c
  1488   0022BA  D7FC               	bra	u1167
  1489   0022BC                     
  1490                           ;main.c: 208:         PORTBbits.RB5 = 0;
  1491   0022BC  9ACB               	bcf	203,5,c	;volatile
  1492   0022BE                     
  1493                           ;main.c: 209:         PORTBbits.RB6 = 1;
  1494   0022BE  8CCB               	bsf	203,6,c	;volatile
  1495   0022C0                     
  1496                           ;main.c: 210:         PORTD = display2;
  1497   0022C0  0060  F043  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1498                           
  1499                           ;main.c: 211:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1500   0022C6  0E03               	movlw	3
  1501   0022C8  6E0B               	movwf	??_PORT_Output^0,c
  1502   0022CA  0E98               	movlw	152
  1503   0022CC                     u1177:
  1504   0022CC  2EE8               	decfsz	wreg,f,c
  1505   0022CE  D7FE               	bra	u1177
  1506   0022D0  2E0B               	decfsz	??_PORT_Output^0,f,c
  1507   0022D2  D7FC               	bra	u1177
  1508   0022D4                     
  1509                           ;main.c: 212:         PORTBbits.RB6 = 0;
  1510   0022D4  9CCB               	bcf	203,6,c	;volatile
  1511   0022D6                     
  1512                           ;main.c: 214:     }
  1513   0022D6  4A0D               	infsnz	PORT_Output@i^0,f,c
  1514   0022D8  2A0E               	incf	(PORT_Output@i+1)^0,f,c
  1515   0022DA  BE0E               	btfsc	(PORT_Output@i+1)^0,7,c
  1516   0022DC  EF79  F011         	goto	u1151
  1517   0022E0  0EE8               	movlw	232
  1518   0022E2  5C0D               	subwf	PORT_Output@i^0,w,c
  1519   0022E4  0E03               	movlw	3
  1520   0022E6  580E               	subwfb	(PORT_Output@i+1)^0,w,c
  1521   0022E8  A0D8               	btfss	status,0,c
  1522   0022EA  EF79  F011         	goto	u1151
  1523   0022EE  EF7B  F011         	goto	u1150
  1524   0022F2                     u1151:
  1525   0022F2  EF53  F011         	goto	l150
  1526   0022F6                     u1150:
  1527   0022F6                     
  1528                           ;main.c: 215:     PORTD = 0xFF;
  1529   0022F6  68CD               	setf	205,c	;volatile
  1530   0022F8                     
  1531                           ;main.c: 216:     PORTB = 0;
  1532   0022F8  0E00               	movlw	0
  1533   0022FA  6ECB               	movwf	203,c	;volatile
  1534   0022FC  0012               	return		;funcret
  1535   0022FE                     __end_of_PORT_Output:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function ___wmul *****************
  1539 ;; Defined at:
  1540 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  multiplier      2    0[COMRAM] unsigned int 
  1543 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  product         2    4[COMRAM] unsigned int 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  2    0[COMRAM] unsigned int 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, prodl, prodh
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1558 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1559 ;;Total ram usage:        6 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_PORT_Output
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text6
  1569   002826                     __ptext6:
  1570                           	callstack 0
  1571   002826                     ___wmul:
  1572                           	callstack 29
  1573   002826  5001               	movf	___wmul@multiplier^0,w,c
  1574   002828  0203               	mulwf	___wmul@multiplicand^0,c
  1575   00282A  006F FFCC  F005    	movff	prodl,___wmul@product
  1576   002830  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1577   002836  5001               	movf	___wmul@multiplier^0,w,c
  1578   002838  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1579   00283A  50F3               	movf	243,w,c
  1580   00283C  2606               	addwf	(___wmul@product+1)^0,f,c
  1581   00283E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1582   002840  0203               	mulwf	___wmul@multiplicand^0,c
  1583   002842  50F3               	movf	243,w,c
  1584   002844  2606               	addwf	(___wmul@product+1)^0,f,c
  1585   002846  C005  F001         	movff	___wmul@product,?___wmul
  1586   00284A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1587   00284E  0012               	return		;funcret
  1588   002850                     __end_of___wmul:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function ___awmod *****************
  1592 ;; Defined at:
  1593 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  dividend        2    0[COMRAM] int 
  1596 ;;  divisor         2    2[COMRAM] int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  sign            1    5[COMRAM] unsigned char 
  1599 ;;  counter         1    4[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2    0[COMRAM] int 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;Total ram usage:        6 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_PORT_Output
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text7
  1623   0025C4                     __ptext7:
  1624                           	callstack 0
  1625   0025C4                     ___awmod:
  1626                           	callstack 29
  1627   0025C4  0E00               	movlw	0
  1628   0025C6  6E06               	movwf	___awmod@sign^0,c
  1629   0025C8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1630   0025CA  EFEB  F012         	goto	u790
  1631   0025CE  EFE9  F012         	goto	u791
  1632   0025D2                     u791:
  1633   0025D2  EFF1  F012         	goto	l1290
  1634   0025D6                     u790:
  1635   0025D6  6C01               	negf	___awmod@dividend^0,c
  1636   0025D8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1637   0025DA  B0D8               	btfsc	status,0,c
  1638   0025DC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1639   0025DE  0E01               	movlw	1
  1640   0025E0  6E06               	movwf	___awmod@sign^0,c
  1641   0025E2                     l1290:
  1642   0025E2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1643   0025E4  EFF8  F012         	goto	u800
  1644   0025E8  EFF6  F012         	goto	u801
  1645   0025EC                     u801:
  1646   0025EC  EFFC  F012         	goto	l1294
  1647   0025F0                     u800:
  1648   0025F0  6C03               	negf	___awmod@divisor^0,c
  1649   0025F2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1650   0025F4  B0D8               	btfsc	status,0,c
  1651   0025F6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1652   0025F8                     l1294:
  1653   0025F8  5003               	movf	___awmod@divisor^0,w,c
  1654   0025FA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1655   0025FC  B4D8               	btfsc	status,2,c
  1656   0025FE  EF03  F013         	goto	u811
  1657   002602  EF05  F013         	goto	u810
  1658   002606                     u811:
  1659   002606  EF29  F013         	goto	l1310
  1660   00260A                     u810:
  1661   00260A  0E01               	movlw	1
  1662   00260C  6E05               	movwf	___awmod@counter^0,c
  1663   00260E  EF0D  F013         	goto	l1300
  1664   002612                     l1298:
  1665   002612  90D8               	bcf	status,0,c
  1666   002614  3603               	rlcf	___awmod@divisor^0,f,c
  1667   002616  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1668   002618  2A05               	incf	___awmod@counter^0,f,c
  1669   00261A                     l1300:
  1670   00261A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1671   00261C  EF12  F013         	goto	u821
  1672   002620  EF14  F013         	goto	u820
  1673   002624                     u821:
  1674   002624  EF09  F013         	goto	l1298
  1675   002628                     u820:
  1676   002628                     l1302:
  1677   002628  5003               	movf	___awmod@divisor^0,w,c
  1678   00262A  5C01               	subwf	___awmod@dividend^0,w,c
  1679   00262C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1680   00262E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1681   002630  A0D8               	btfss	status,0,c
  1682   002632  EF1D  F013         	goto	u831
  1683   002636  EF1F  F013         	goto	u830
  1684   00263A                     u831:
  1685   00263A  EF23  F013         	goto	l1306
  1686   00263E                     u830:
  1687   00263E  5003               	movf	___awmod@divisor^0,w,c
  1688   002640  5E01               	subwf	___awmod@dividend^0,f,c
  1689   002642  5004               	movf	(___awmod@divisor+1)^0,w,c
  1690   002644  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1691   002646                     l1306:
  1692   002646  90D8               	bcf	status,0,c
  1693   002648  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1694   00264A  3203               	rrcf	___awmod@divisor^0,f,c
  1695   00264C  2E05               	decfsz	___awmod@counter^0,f,c
  1696   00264E  EF14  F013         	goto	l1302
  1697   002652                     l1310:
  1698   002652  5006               	movf	___awmod@sign^0,w,c
  1699   002654  B4D8               	btfsc	status,2,c
  1700   002656  EF2F  F013         	goto	u841
  1701   00265A  EF31  F013         	goto	u840
  1702   00265E                     u841:
  1703   00265E  EF35  F013         	goto	l1314
  1704   002662                     u840:
  1705   002662  6C01               	negf	___awmod@dividend^0,c
  1706   002664  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1707   002666  B0D8               	btfsc	status,0,c
  1708   002668  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1709   00266A                     l1314:
  1710   00266A  C001  F001         	movff	___awmod@dividend,?___awmod
  1711   00266E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1712   002672  0012               	return		;funcret
  1713   002674                     __end_of___awmod:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function ___awdiv *****************
  1717 ;; Defined at:
  1718 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  dividend        2    0[COMRAM] int 
  1721 ;;  divisor         2    2[COMRAM] int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  quotient        2    6[COMRAM] int 
  1724 ;;  sign            1    5[COMRAM] unsigned char 
  1725 ;;  counter         1    4[COMRAM] unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  2    0[COMRAM] int 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1736 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1739 ;;Total ram usage:        8 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_PORT_Output
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text8
  1749   002500                     __ptext8:
  1750                           	callstack 0
  1751   002500                     ___awdiv:
  1752                           	callstack 29
  1753   002500  0E00               	movlw	0
  1754   002502  6E06               	movwf	___awdiv@sign^0,c
  1755   002504  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1756   002506  EF89  F012         	goto	u730
  1757   00250A  EF87  F012         	goto	u731
  1758   00250E                     u731:
  1759   00250E  EF8F  F012         	goto	l1246
  1760   002512                     u730:
  1761   002512  6C03               	negf	___awdiv@divisor^0,c
  1762   002514  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1763   002516  B0D8               	btfsc	status,0,c
  1764   002518  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1765   00251A  0E01               	movlw	1
  1766   00251C  6E06               	movwf	___awdiv@sign^0,c
  1767   00251E                     l1246:
  1768   00251E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1769   002520  EF96  F012         	goto	u740
  1770   002524  EF94  F012         	goto	u741
  1771   002528                     u741:
  1772   002528  EF9C  F012         	goto	l1252
  1773   00252C                     u740:
  1774   00252C  6C01               	negf	___awdiv@dividend^0,c
  1775   00252E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1776   002530  B0D8               	btfsc	status,0,c
  1777   002532  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1778   002534  0E01               	movlw	1
  1779   002536  1A06               	xorwf	___awdiv@sign^0,f,c
  1780   002538                     l1252:
  1781   002538  0E00               	movlw	0
  1782   00253A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1783   00253C  0E00               	movlw	0
  1784   00253E  6E07               	movwf	___awdiv@quotient^0,c
  1785   002540  5003               	movf	___awdiv@divisor^0,w,c
  1786   002542  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1787   002544  B4D8               	btfsc	status,2,c
  1788   002546  EFA7  F012         	goto	u751
  1789   00254A  EFA9  F012         	goto	u750
  1790   00254E                     u751:
  1791   00254E  EFD1  F012         	goto	l1274
  1792   002552                     u750:
  1793   002552  0E01               	movlw	1
  1794   002554  6E05               	movwf	___awdiv@counter^0,c
  1795   002556  EFB1  F012         	goto	l1260
  1796   00255A                     l1258:
  1797   00255A  90D8               	bcf	status,0,c
  1798   00255C  3603               	rlcf	___awdiv@divisor^0,f,c
  1799   00255E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1800   002560  2A05               	incf	___awdiv@counter^0,f,c
  1801   002562                     l1260:
  1802   002562  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1803   002564  EFB6  F012         	goto	u761
  1804   002568  EFB8  F012         	goto	u760
  1805   00256C                     u761:
  1806   00256C  EFAD  F012         	goto	l1258
  1807   002570                     u760:
  1808   002570                     l1262:
  1809   002570  90D8               	bcf	status,0,c
  1810   002572  3607               	rlcf	___awdiv@quotient^0,f,c
  1811   002574  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1812   002576  5003               	movf	___awdiv@divisor^0,w,c
  1813   002578  5C01               	subwf	___awdiv@dividend^0,w,c
  1814   00257A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1815   00257C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1816   00257E  A0D8               	btfss	status,0,c
  1817   002580  EFC4  F012         	goto	u771
  1818   002584  EFC6  F012         	goto	u770
  1819   002588                     u771:
  1820   002588  EFCB  F012         	goto	l1270
  1821   00258C                     u770:
  1822   00258C  5003               	movf	___awdiv@divisor^0,w,c
  1823   00258E  5E01               	subwf	___awdiv@dividend^0,f,c
  1824   002590  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1825   002592  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1826   002594  8007               	bsf	___awdiv@quotient^0,0,c
  1827   002596                     l1270:
  1828   002596  90D8               	bcf	status,0,c
  1829   002598  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1830   00259A  3203               	rrcf	___awdiv@divisor^0,f,c
  1831   00259C  2E05               	decfsz	___awdiv@counter^0,f,c
  1832   00259E  EFB8  F012         	goto	l1262
  1833   0025A2                     l1274:
  1834   0025A2  5006               	movf	___awdiv@sign^0,w,c
  1835   0025A4  B4D8               	btfsc	status,2,c
  1836   0025A6  EFD7  F012         	goto	u781
  1837   0025AA  EFD9  F012         	goto	u780
  1838   0025AE                     u781:
  1839   0025AE  EFDD  F012         	goto	l1278
  1840   0025B2                     u780:
  1841   0025B2  6C07               	negf	___awdiv@quotient^0,c
  1842   0025B4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1843   0025B6  B0D8               	btfsc	status,0,c
  1844   0025B8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1845   0025BA                     l1278:
  1846   0025BA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1847   0025BE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1848   0025C2  0012               	return		;funcret
  1849   0025C4                     __end_of___awdiv:
  1850                           	callstack 0
  1851                           
  1852                           	psect	smallconst
  1853   002000                     __psmallconst:
  1854                           	callstack 0
  1855   002000  00                 	db	0
  1856   002001  00                 	db	0	; dummy byte at the end
  1857   000000                     
  1858                           	psect	rparam
  1859   000000                     
  1860                           	psect	config
  1861                           
  1862                           ;Config register CONFIG1L @ 0x300000
  1863                           ;	External Oscillator Selection
  1864                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1865                           ;	Reset Oscillator Selection
  1866                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1867   300000                     	org	3145728
  1868   300000  F8                 	db	248
  1869                           
  1870                           ;Config register CONFIG1H @ 0x300001
  1871                           ;	Clock out Enable bit
  1872                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1873                           ;	PRLOCKED One-Way Set Enable bit
  1874                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1875                           ;	Clock Switch Enable bit
  1876                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1877                           ;	Fail-Safe Clock Monitor Enable bit
  1878                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1879   300001                     	org	3145729
  1880   300001  FF                 	db	255
  1881                           
  1882                           ;Config register CONFIG2L @ 0x300002
  1883                           ;	MCLR Enable bit
  1884                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1885                           ;	Power-up timer selection bits
  1886                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1887                           ;	Multi-vector enable bit
  1888                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1889                           ;	IVTLOCK bit One-way set enable bit
  1890                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1891                           ;	Low Power BOR Enable bit
  1892                           ;	LPBOREN = OFF, ULPBOR disabled
  1893                           ;	Brown-out Reset Enable bits
  1894                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1895   300002                     	org	3145730
  1896   300002  FF                 	db	255
  1897                           
  1898                           ;Config register CONFIG2H @ 0x300003
  1899                           ;	Brown-out Reset Voltage Selection bits
  1900                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1901                           ;	ZCD Disable bit
  1902                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1903                           ;	PPSLOCK bit One-Way Set Enable bit
  1904                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1905                           ;	Stack Full/Underflow Reset Enable bit
  1906                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1907                           ;	Debugger Enable bit
  1908                           ;	DEBUG = OFF, Background debugger disabled
  1909                           ;	Extended Instruction Set Enable bit
  1910                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1911   300003                     	org	3145731
  1912   300003  FF                 	db	255
  1913                           
  1914                           ;Config register CONFIG3L @ 0x300004
  1915                           ;	WDT Period selection bits
  1916                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1917                           ;	WDT operating mode
  1918                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1919   300004                     	org	3145732
  1920   300004  9F                 	db	159
  1921                           
  1922                           ;Config register CONFIG3H @ 0x300005
  1923                           ;	WDT Window Select bits
  1924                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1925                           ;	WDT input clock selector
  1926                           ;	WDTCCS = SC, Software Control
  1927   300005                     	org	3145733
  1928   300005  FF                 	db	255
  1929                           
  1930                           ;Config register CONFIG4L @ 0x300006
  1931                           ;	Boot Block Size selection bits
  1932                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1933                           ;	Boot Block enable bit
  1934                           ;	BBEN = OFF, Boot block disabled
  1935                           ;	Storage Area Flash enable bit
  1936                           ;	SAFEN = OFF, SAF disabled
  1937                           ;	Application Block write protection bit
  1938                           ;	WRTAPP = OFF, Application Block not write protected
  1939   300006                     	org	3145734
  1940   300006  FF                 	db	255
  1941                           
  1942                           ;Config register CONFIG4H @ 0x300007
  1943                           ;	Boot Block Write Protection bit
  1944                           ;	WRTB = OFF, Boot Block not write-protected
  1945                           ;	Configuration Register Write Protection bit
  1946                           ;	WRTC = OFF, Configuration registers not write-protected
  1947                           ;	Data EEPROM Write Protection bit
  1948                           ;	WRTD = OFF, Data EEPROM not write-protected
  1949                           ;	SAF Write protection bit
  1950                           ;	WRTSAF = OFF, SAF not Write Protected
  1951                           ;	Low Voltage Programming Enable bit
  1952                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1953   300007                     	org	3145735
  1954   300007  FF                 	db	255
  1955                           
  1956                           ;Config register CONFIG5L @ 0x300008
  1957                           ;	PFM and Data EEPROM Code Protection bit
  1958                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1959   300008                     	org	3145736
  1960   300008  FF                 	db	255
  1961                           
  1962                           ;Config register CONFIG5H @ 0x300009
  1963                           ;	unspecified, using default values
  1964   300009                     	org	3145737
  1965   300009  FF                 	db	255
  1966                           tosu	equ	0x3FFF
  1967                           tosh	equ	0x3FFE
  1968                           tosl	equ	0x3FFD
  1969                           stkptr	equ	0x3FFC
  1970                           pclatu	equ	0x3FFB
  1971                           pclath	equ	0x3FFA
  1972                           pcl	equ	0x3FF9
  1973                           tblptru	equ	0x3FF8
  1974                           tblptrh	equ	0x3FF7
  1975                           tblptrl	equ	0x3FF6
  1976                           tablat	equ	0x3FF5
  1977                           prodh	equ	0x3FF4
  1978                           prodl	equ	0x3FF3
  1979                           indf0	equ	0x3FEF
  1980                           postinc0	equ	0x3FEE
  1981                           postdec0	equ	0x3FED
  1982                           preinc0	equ	0x3FEC
  1983                           plusw0	equ	0x3FEB
  1984                           fsr0h	equ	0x3FEA
  1985                           fsr0l	equ	0x3FE9
  1986                           wreg	equ	0x3FE8
  1987                           indf1	equ	0x3FE7
  1988                           postinc1	equ	0x3FE6
  1989                           postdec1	equ	0x3FE5
  1990                           preinc1	equ	0x3FE4
  1991                           plusw1	equ	0x3FE3
  1992                           fsr1h	equ	0x3FE2
  1993                           fsr1l	equ	0x3FE1
  1994                           bsr	equ	0x3FE0
  1995                           indf2	equ	0x3FDF
  1996                           postinc2	equ	0x3FDE
  1997                           postdec2	equ	0x3FDD
  1998                           preinc2	equ	0x3FDC
  1999                           plusw2	equ	0x3FDB
  2000                           fsr2h	equ	0x3FDA
  2001                           fsr2l	equ	0x3FD9
  2002                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2819
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          5     5      0     105
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                         10     8      2    1957
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
     ___wmul
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      17       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      17      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 08 09:56:03 2024

           PORT_Output@i 000D                       l60 2310                       l53 2712  
                     l73 23F6                       l90 27B6                       l91 276C  
                     l87 24FE                       l97 27C8          ?_scan_operation 0001  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l100 2690  
                    l101 26A8                      l104 26EC                      l121 2174  
                    l140 2274                      l109 2174                      l150 22A6  
                    l151 22F6                      l152 22FC                      l146 228C  
                    l155 284E                      l147 2278                      l149 229C  
                    l561 2824                      l386 25C2                      l399 2672  
                    l940 2300                      l950 2344                      l942 2320  
                    l960 235E                      l952 2348                      l944 2324  
                    l970 2390                      l962 236C                      l954 234A  
                    l946 2332                      l980 23AA                      l972 2394  
                    l964 2370                      l956 234C                      l948 2336  
                    l982 23B8                      l974 2396                      l966 237E  
                    l958 235A                      l990 23D0                      l992 23E2  
                    l984 23BC                      l976 2398                      l968 2382  
                    l994 23EA                      l986 23CA                      l978 23A6  
                    l996 23EE                      l988 23CE                      l998 2406  
                    u200 236C                      u201 2368                      u210 237E  
                    u211 237A                      u300 2440                      u220 2390  
                    u301 243C                      u221 238C                      u310 2452  
                    u230 23A6                      u311 244E                      u231 23A2  
                    u320 2464                      u240 23B8                      u160 2320  
                    u400 277C                      u321 2460                      u241 23B4  
                    u161 231C                      u401 2778                      u330 2476  
                    u250 23CA                      u170 2332                      u410 278E  
                    u331 2472                      u251 23C6                      u171 232E  
                    u411 278A                      u340 248C                      u260 23E2  
                    u180 2344                      u420 27A0                      u341 2488  
                    u261 23DE                      u181 2340                      u421 279C  
                    u350 249E                      u270 2406                      u190 235A  
                    u430 27B2                      u351 249A                      u271 2402  
                    u191 2356                      u431 27AE                      u360 24B0  
                    u280 2418                      u440 27C6                      u361 24AC  
                    u281 2414                      u441 27C2                      u370 24CC  
                    u290 242A                      u371 24C8                      u291 2426  
                    u380 24E0                      u381 24DC                      u390 24F6  
                    u391 24F2                      u800 25F0                      u801 25EC  
                    u730 2512                      u810 260A                      u731 250E  
                    u811 2606                      u740 252C                      u820 2628  
                    u900 26BA                      u741 2528                      u821 2624  
                    u901 26B6                      u750 2552                      u830 263E  
                    u910 26D6                      u751 254E                      u831 263A  
                    u911 26D2                      u760 2570                      u840 2662  
                    u920 2028                      u761 256C                      u841 265E  
                    u921 2024                      u770 258C                      u930 2084  
                    u850 27E0                      u771 2588                      u931 2080  
                    u851 27DC                      u780 25B2                      u940 209C  
                    u860 27FC                      u781 25AE                      u941 2098  
                    u861 27F8                      u790 25D6                      u950 20B6  
                    u870 2812                      u791 25D2                      u951 20B2  
                    u871 280E                      u960 20D0                      u880 268A  
                    u961 20CC                      u881 2686                      u970 20EA  
                    u890 26A2                      u971 20E6                      u891 269E  
                    u980 2104                      u981 2100                      u990 211E  
                    u991 211A             ___awmod@sign 0006                      wreg 3FE8  
                   l1000 240A                     l1010 2430                     l1002 2418  
                   l1020 2456                     l1012 2432                     l1004 241C  
                   l1030 247C                     l1022 2464                     l1014 2440  
                   l1006 242A                     l1040 24A2                     l1032 247E  
                   l1024 2468                     l1016 2444                     l1008 242E  
                   l1050 24E0                     l1042 24B0                     l1034 248C  
                   l1026 2476                     l1018 2452                     l1300 261A  
                   l1052 24E4                     l1044 24B4                     l1036 2490  
                   l1028 247A                     l1060 2764                     l1302 2628  
                   l1310 2652                     l1054 24F6                     l1038 249E  
                   l1046 24BA                     l1070 27A0                     l1062 277C  
                   l1240 2504                     l1312 2662                     l1304 263E  
                   l1232 2826                     l1400 211E                     l1320 27D0  
                   l1056 24FC                     l1048 24CC                     l1072 27A4  
                   l1064 2780                     l1250 2534                     l1242 2512  
                   l1314 266A                     l1306 2646                     l1234 2846  
                   l1410 215A                     l1402 2126                     l1330 27FC  
                   l1322 27E0                     l1074 27B2                     l1066 278E  
                   l1260 2562                     l1252 2538                     l1244 251A  
                   l1308 264C                     l1420 21A4                     l1412 216C  
                   l1404 2138                     l1332 2812                     l1324 27E8  
                   l1340 2822                     l1076 27C6                     l1068 2792  
                   l1270 2596                     l1262 2570                     l1254 2540  
                   l1246 251E                     l1238 2500                     l1430 21EA  
                   l1422 21B6                     l1414 2184                     l1406 2140  
                   l1334 2816                     l1326 27EC                     l1318 27CC  
                   l1350 26A2                     l1272 259C                     l1264 2576  
                   l1256 2552                     l1248 252C                     l1440 2226  
                   l1432 21F2                     l1424 21BE                     l1416 218C  
                   l1408 2152                     l1336 2818                     l1328 27EE  
                   l1352 26BA                     l1344 2676                     l1266 258C  
                   l1258 255A                     l1274 25A2                     l1290 25E2  
                   l1282 25C4                     l1450 226C                     l1442 2238  
                   l1434 2204                     l1426 21D0                     l1418 219C  
                   l1370 2044                     l1362 2002                     l1338 281C  
                   l1354 26C4                     l1346 267A                     l1276 25B2  
                   l1268 2594                     l1292 25F0                     l1284 25C8  
                   l1460 22AE                     l1452 2288                     l1444 2240  
                   l1436 220C                     l1428 21D8                     l1380 209C  
                   l1372 205C                     l1364 201A                     l1356 26D6  
                   l1348 268A                     l1278 25BA                     l1294 25F8  
                   l1286 25D6                     l1470 22D6                     l1462 22BC  
                   l1454 229E                     l1446 2252                     l1438 221E  
                   l1390 20D8                     l1382 20A4                     l1374 2074  
                   l1366 2028                     l1358 26E2                     l1296 260A  
                   l1288 25DE                     l1472 22F8                     l1464 22BE  
                   l1448 225A                     l1392 20EA                     l1384 20B6  
                   l1376 2084                     l1368 2042                     l1480 270E  
                   l1298 2612                     l1466 22C0                     l1394 20F2  
                   l1386 20BE                     l1378 208C                     l1490 2734  
                   l1482 2710                     l1468 22D4                     l1396 2104  
                   l1388 20D0                     l1492 273C                     l1484 2726  
                   l1476 26EE                     l1398 210C                     l1494 274E  
                   l1486 272E                     l1478 26F0                     l1488 2734  
                   u1000 2138                     u1001 2134                     u1010 2152  
                   u1011 214E                     u1100 2238                     u1020 216C  
                   u1101 2234                     u1021 2168                     u1110 2252  
                   u1030 2184                     u1111 224E                     u1031 2180  
                   u1120 226C                     u1040 219C                     u1121 2268  
                   u1041 2198                     u1130 2288                     u1050 21B6  
                   u1131 2284                     u1051 21B2                     u1140 229C  
                   u1060 21D0                     u1141 2298                     u1061 21CC  
                   u1150 22F6                     u1070 21EA                     u1151 22F2  
                   u1071 21E6                     u1080 2204                     u1081 2200  
                   u1090 221E                     u1091 221A                     u1167 22B4  
                   u1177 22CC         PORT_Output@enter 000C                     _main 26EE  
                   prodh 3FF4                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 25C4  
        __end_of___lbdiv 2826          __end_of___awmod 2674          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTB 3FCB                    _PORTC 3FCC  
                  _PORTD 3FCD                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISC 3FC4                    _TRISD 3FC5        PORT_Output@answer 0009  
                  status 3FD8          ___lbdiv@divisor 0001          ___lbdiv@counter 0003  
           ?_scan_number 0001          __initialization 2850             __end_of_main 2764  
                 ??_main 0013            __activetblptr 0000         ___awdiv@dividend 0001  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELC 3A60  
                 _ANSELD 3A70                   ___wmul 2826                ??___awdiv 0005  
              ??___lbdiv 0002                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 0001          ___awmod@counter 0005  
   scan_number@LED_Count 0004             __mediumconst 0000             ?_PORT_Output 0009  
       ___lbdiv@dividend 0002               __accesstop 0060  __end_of__initialization 2850  
          ___rparam_used 0001         ??_scan_operation 0001           __pcstackCOMRAM 0001  
       scan_number@count 0002         scan_number@input 0005         ___lbdiv@quotient 0004  
            _X_Input_REG 0017              _Y_Input_REG 0016               __pnvCOMRAM 0013  
                ?___wmul 0001        __end_of_calculate 26EE      PORT_Output@display1 000F  
    PORT_Output@display2 0010                  __Hparam 0000               calculate@x 0008  
             calculate@y 0005                  __Lparam 0000                  ___awdiv 2500  
                ___lbdiv 27CA                  ___awmod 25C4             __psmallconst 2000  
                __pcinit 2850                  __ramtop 2000                  __ptext0 26EE  
                __ptext1 2764                  __ptext2 22FE                  __ptext3 2674  
                __ptext4 27CA                  __ptext5 2002                  __ptext6 2826  
                __ptext7 25C4                  __ptext8 2500         ___awmod@dividend 0001  
   end_of_initialization 2850                _PORTAbits 3FCA                _PORTBbits 3FCB  
              _PORTCbits 3FCC           __end_of___wmul 2850            _Operation_REG 0015  
      scan_number@button 0001      start_initialization 2850        scan_number@output 0003  
               ??___wmul 0005              _calculation 0014    PORT_Output@second_dig 0012  
              _calculate 2674            ??_scan_number 0001                 ?___awdiv 0001  
               ?___lbdiv 0001                 ?___awmod 0001              __smallconst 2000  
         ___wmul@product 0005               ?_calculate 0005          calculate@output 0007  
    __end_of_scan_number 2500        ___wmul@multiplier 0001            ??_PORT_Output 000B  
   PORT_Output@first_dig 0011              calculate@op 0006                 __Hrparam 0000  
               __Lrparam 0000      __end_of_PORT_Output 22FE              ??_calculate 0007  
            _scan_number 22FE                 isa$xinst 0000           _scan_operation 2764  
     _Display_Result_REG 0013     scan_operation@op_key 0001   __end_of_scan_operation 27CA  
            _PORT_Output 2002  
