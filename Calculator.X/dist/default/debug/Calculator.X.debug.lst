

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 08 08:47:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _TRISC	set	16324
    57   000000                     _TRISD	set	16325
    58   000000                     _TRISB	set	16323
    59                           
    60                           	psect	nvCOMRAM
    61   000013                     __pnvCOMRAM:
    62                           	callstack 0
    63   000013                     _Display_Result_REG:
    64                           	callstack 0
    65   000013                     	ds	1
    66   000014                     _calculation:
    67                           	callstack 0
    68   000014                     	ds	1
    69   000015                     _Operation_REG:
    70                           	callstack 0
    71   000015                     	ds	1
    72   000016                     _Y_Input_REG:
    73                           	callstack 0
    74   000016                     	ds	1
    75   000017                     _X_Input_REG:
    76                           	callstack 0
    77   000017                     	ds	1
    78   000000                     _PORTB	set	16331
    79   000000                     _PORTCbits	set	16332
    80   000000                     _ANSELA	set	14912
    81   000000                     _TRISA	set	16322
    82   000000                     _ANSELB	set	14928
    83   000000                     _ANSELC	set	14944
    84   000000                     _ANSELD	set	14960
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _PORTC	set	16332
    88   000000                     _PORTD	set	16333
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   002880                     __pcinit:
    94                           	callstack 0
    95   002880                     start_initialization:
    96                           	callstack 0
    97   002880                     __initialization:
    98                           	callstack 0
    99   002880                     end_of_initialization:
   100                           	callstack 0
   101   002880                     __end_of__initialization:
   102                           	callstack 0
   103   002880  0100               	movlb	0
   104   002882  EF82  F013         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ??_scan_number:
   110   000001                     ??_scan_operation:
   111   000001                     ?___wmul:
   112                           	callstack 0
   113   000001                     ?___awdiv:
   114                           	callstack 0
   115   000001                     ?___awmod:
   116                           	callstack 0
   117   000001                     ___lbdiv@divisor:
   118                           	callstack 0
   119   000001                     ___wmul@multiplier:
   120                           	callstack 0
   121   000001                     ___awdiv@dividend:
   122                           	callstack 0
   123   000001                     ___awmod@dividend:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ___lbdiv@dividend:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132   000002                     	ds	1
   133   000003                     scan_number@button:
   134                           	callstack 0
   135   000003                     scan_operation@op_key:
   136                           	callstack 0
   137   000003                     ___lbdiv@counter:
   138                           	callstack 0
   139   000003                     ___wmul@multiplicand:
   140                           	callstack 0
   141   000003                     ___awdiv@divisor:
   142                           	callstack 0
   143   000003                     ___awmod@divisor:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x2
   147   000003                     	ds	1
   148   000004                     scan_number@count:
   149                           	callstack 0
   150   000004                     ___lbdiv@quotient:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154   000004                     	ds	1
   155   000005                     ?_calculate:
   156                           	callstack 0
   157   000005                     scan_number@output:
   158                           	callstack 0
   159   000005                     calculate@y:
   160                           	callstack 0
   161   000005                     ___awdiv@counter:
   162                           	callstack 0
   163   000005                     ___awmod@counter:
   164                           	callstack 0
   165   000005                     ___wmul@product:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x4
   169   000005                     	ds	1
   170   000006                     scan_number@input:
   171                           	callstack 0
   172   000006                     calculate@op:
   173                           	callstack 0
   174   000006                     ___awdiv@sign:
   175                           	callstack 0
   176   000006                     ___awmod@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180   000006                     	ds	1
   181   000007                     calculate@output:
   182                           	callstack 0
   183   000007                     ___awdiv@quotient:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x6
   187   000007                     	ds	1
   188   000008                     calculate@x:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x7
   192   000008                     	ds	1
   193   000009                     PORT_Output@answer:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x8
   197   000009                     	ds	2
   198   00000B                     ??_PORT_Output:
   199                           
   200                           ; 1 bytes @ 0xA
   201   00000B                     	ds	1
   202   00000C                     PORT_Output@enter:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xB
   206   00000C                     	ds	1
   207   00000D                     PORT_Output@i:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xC
   211   00000D                     	ds	2
   212   00000F                     PORT_Output@display1:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xE
   216   00000F                     	ds	1
   217   000010                     PORT_Output@display2:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xF
   221   000010                     	ds	1
   222   000011                     PORT_Output@second_dig:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x10
   226   000011                     	ds	1
   227   000012                     PORT_Output@first_dig:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x11
   231   000012                     	ds	1
   232   000013                     
   233                           ; 1 bytes @ 0x12
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 26 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 2
   259 ;; This function calls:
   260 ;;		_PORT_Output
   261 ;;		_calculate
   262 ;;		_scan_number
   263 ;;		_scan_operation
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   002704                     __ptext0:
   271                           	callstack 0
   272   002704                     _main:
   273                           	callstack 29
   274   002704                     
   275                           ;main.c: 27:     TRISA = 0xFF;
   276   002704  68C2               	setf	194,c	;volatile
   277   002706                     
   278                           ;main.c: 28:     ANSELA = 0;
   279   002706  0E00               	movlw	0
   280   002708  013A               	movlb	58	; () banked
   281   00270A  6F40               	movwf	64,b	;volatile
   282                           
   283                           ;main.c: 29:     TRISB = 0;
   284   00270C  0E00               	movlw	0
   285   00270E  6EC3               	movwf	195,c	;volatile
   286                           
   287                           ;main.c: 30:     ANSELB = 0;
   288   002710  0E00               	movlw	0
   289   002712  6F50               	movwf	80,b	;volatile
   290                           
   291                           ;main.c: 31:     ANSELD = 0;
   292   002714  0E00               	movlw	0
   293   002716  6F70               	movwf	112,b	;volatile
   294                           
   295                           ;main.c: 32:     TRISD = 0;
   296   002718  0E00               	movlw	0
   297   00271A  6EC5               	movwf	197,c	;volatile
   298                           
   299                           ;main.c: 33:     TRISC = 0;
   300   00271C  0E00               	movlw	0
   301   00271E  6EC4               	movwf	196,c	;volatile
   302                           
   303                           ;main.c: 34:     ANSELC = 0;
   304   002720  0E00               	movlw	0
   305   002722  6F60               	movwf	96,b	;volatile
   306   002724                     
   307                           ; BSR set to: 58
   308                           ;main.c: 35:     PORTD = 0xFF;
   309   002724  68CD               	setf	205,c	;volatile
   310   002726                     
   311                           ; BSR set to: 58
   312                           ;main.c: 36:     PORTC = 0xFF;
   313   002726  68CC               	setf	204,c	;volatile
   314   002728                     l53:
   315                           
   316                           ;main.c: 39:     X_Input_REG = 0;
   317   002728  0E00               	movlw	0
   318   00272A  6E17               	movwf	_X_Input_REG^0,c
   319                           
   320                           ;main.c: 40:     Y_Input_REG = 0;
   321   00272C  0E00               	movlw	0
   322   00272E  6E16               	movwf	_Y_Input_REG^0,c
   323                           
   324                           ;main.c: 41:     Operation_REG = 0;
   325   002730  0E00               	movlw	0
   326   002732  6E15               	movwf	_Operation_REG^0,c
   327                           
   328                           ;main.c: 42:     calculation = 0;
   329   002734  0E00               	movlw	0
   330   002736  6E14               	movwf	_calculation^0,c
   331                           
   332                           ;main.c: 43:     Display_Result_REG = 0;
   333   002738  0E00               	movlw	0
   334   00273A  6E13               	movwf	_Display_Result_REG^0,c
   335   00273C                     
   336                           ;main.c: 44:     X_Input_REG = scan_number();
   337   00273C  EC87  F011         	call	_scan_number	;wreg free
   338   002740  6E17               	movwf	_X_Input_REG^0,c
   339   002742                     
   340                           ;main.c: 45:     PORTBbits.RB5 = 1;
   341   002742  8ACB               	bsf	203,5,c	;volatile
   342   002744                     
   343                           ;main.c: 46:     PORTCbits.RC7 = 0;
   344   002744  9ECC               	bcf	204,7,c	;volatile
   345   002746                     
   346                           ;main.c: 47:     Operation_REG = scan_operation();
   347   002746  EC43  F013         	call	_scan_operation	;wreg free
   348   00274A  6E15               	movwf	_Operation_REG^0,c
   349   00274C                     
   350                           ;main.c: 48:     Y_Input_REG = scan_number();
   351   00274C  EC87  F011         	call	_scan_number	;wreg free
   352   002750  6E16               	movwf	_Y_Input_REG^0,c
   353   002752                     
   354                           ;main.c: 49:     PORTCbits.RC7 = 1;
   355   002752  8ECC               	bsf	204,7,c	;volatile
   356   002754                     
   357                           ;main.c: 50:     PORTBbits.RB6 = 1;
   358   002754  8CCB               	bsf	203,6,c	;volatile
   359   002756                     
   360                           ;main.c: 51:     PORTCbits.RC6 = 0;
   361   002756  9CCC               	bcf	204,6,c	;volatile
   362   002758                     
   363                           ;main.c: 52:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   364   002758  C016  F005         	movff	_Y_Input_REG,calculate@y
   365   00275C  C015  F006         	movff	_Operation_REG,calculate@op
   366   002760  5017               	movf	_X_Input_REG^0,w,c
   367   002762  ECC0  F013         	call	_calculate
   368   002766  5005               	movf	?_calculate^0,w,c
   369   002768  6E14               	movwf	_calculation^0,c
   370   00276A                     
   371                           ;main.c: 53:     PORT_Output(calculation);
   372   00276A  5014               	movf	_calculation^0,w,c
   373   00276C  6E09               	movwf	PORT_Output@answer^0,c
   374   00276E  6A0A               	clrf	(PORT_Output@answer+1)^0,c
   375   002770  BE09               	btfsc	PORT_Output@answer^0,7,c
   376   002772  060A               	decf	(PORT_Output@answer+1)^0,f,c
   377   002774  EC01  F010         	call	_PORT_Output	;wreg free
   378   002778  EF94  F013         	goto	l53
   379   00277C  EFFE  F0FF         	goto	start
   380   002780                     __end_of_main:
   381                           	callstack 0
   382                           
   383 ;; *************** function _scan_operation *****************
   384 ;; Defined at:
   385 ;;		line 120 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  op_key          1    2[COMRAM] char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      char 
   392 ;; Registers used:
   393 ;;		wreg, status,2
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   403 ;;Total ram usage:        3 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413   002686                     __ptext1:
   414                           	callstack 0
   415   002686                     _scan_operation:
   416                           	callstack 30
   417   002686                     
   418                           ;main.c: 121:     signed char op_key = 0;
   419   002686  0E00               	movlw	0
   420   002688  6E03               	movwf	scan_operation@op_key^0,c
   421                           
   422                           ;main.c: 122:     while (op_key ==0) {
   423   00268A  EF6C  F013         	goto	l88
   424   00268E                     l89:
   425                           
   426                           ;main.c: 124:      PORTBbits.RB3 = 1;
   427   00268E  86CB               	bsf	203,3,c	;volatile
   428                           
   429                           ;main.c: 125:         if(PORTAbits.RA0 == 1) op_key = 1;
   430   002690  A0CA               	btfss	202,0,c	;volatile
   431   002692  EF4D  F013         	goto	u381
   432   002696  EF4F  F013         	goto	u380
   433   00269A                     u381:
   434   00269A  EF51  F013         	goto	l1062
   435   00269E                     u380:
   436   00269E  0E01               	movlw	1
   437   0026A0  6E03               	movwf	scan_operation@op_key^0,c
   438   0026A2                     l1062:
   439                           
   440                           ;main.c: 126:         if(PORTAbits.RA1 == 1) op_key = 2;
   441   0026A2  A2CA               	btfss	202,1,c	;volatile
   442   0026A4  EF56  F013         	goto	u391
   443   0026A8  EF58  F013         	goto	u390
   444   0026AC                     u391:
   445   0026AC  EF5A  F013         	goto	l1066
   446   0026B0                     u390:
   447   0026B0  0E02               	movlw	2
   448   0026B2  6E03               	movwf	scan_operation@op_key^0,c
   449   0026B4                     l1066:
   450                           
   451                           ;main.c: 127:         if(PORTAbits.RA2 == 1) op_key = 3;
   452   0026B4  A4CA               	btfss	202,2,c	;volatile
   453   0026B6  EF5F  F013         	goto	u401
   454   0026BA  EF61  F013         	goto	u400
   455   0026BE                     u401:
   456   0026BE  EF63  F013         	goto	l1070
   457   0026C2                     u400:
   458   0026C2  0E03               	movlw	3
   459   0026C4  6E03               	movwf	scan_operation@op_key^0,c
   460   0026C6                     l1070:
   461                           
   462                           ;main.c: 128:         if(PORTAbits.RA3 == 1) op_key = 4;
   463   0026C6  A6CA               	btfss	202,3,c	;volatile
   464   0026C8  EF68  F013         	goto	u411
   465   0026CC  EF6A  F013         	goto	u410
   466   0026D0                     u411:
   467   0026D0  EF6C  F013         	goto	l88
   468   0026D4                     u410:
   469   0026D4  0E04               	movlw	4
   470   0026D6  6E03               	movwf	scan_operation@op_key^0,c
   471   0026D8                     l88:
   472                           
   473                           ;main.c: 122:     while (op_key ==0) {
   474   0026D8  5003               	movf	scan_operation@op_key^0,w,c
   475   0026DA  B4D8               	btfsc	status,2,c
   476   0026DC  EF72  F013         	goto	u421
   477   0026E0  EF74  F013         	goto	u420
   478   0026E4                     u421:
   479   0026E4  EF47  F013         	goto	l89
   480   0026E8                     u420:
   481   0026E8                     
   482                           ;main.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
   483   0026E8  0E03               	movlw	3
   484   0026EA  6E02               	movwf	(??_scan_operation+1)^0,c
   485   0026EC  0E08               	movlw	8
   486   0026EE  6E01               	movwf	??_scan_operation^0,c
   487   0026F0  0E77               	movlw	119
   488   0026F2                     u1167:
   489   0026F2  2EE8               	decfsz	wreg,f,c
   490   0026F4  D7FE               	bra	u1167
   491   0026F6  2E01               	decfsz	??_scan_operation^0,f,c
   492   0026F8  D7FC               	bra	u1167
   493   0026FA  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   494   0026FC  D7FA               	bra	u1167
   495   0026FE  0000               	nop	
   496   002700                     
   497                           ;main.c: 131:         return op_key;
   498   002700  5003               	movf	scan_operation@op_key^0,w,c
   499   002702  0012               	return		;funcret
   500   002704                     __end_of_scan_operation:
   501                           	callstack 0
   502                           
   503 ;; *************** function _scan_number *****************
   504 ;; Defined at:
   505 ;;		line 58 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  input           1    5[COMRAM] char 
   510 ;;  output          1    4[COMRAM] char 
   511 ;;  count           1    3[COMRAM] char 
   512 ;;  button          1    2[COMRAM] char 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      char 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, prodl, prodh
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   526 ;;Total ram usage:        6 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536   00230E                     __ptext2:
   537                           	callstack 0
   538   00230E                     _scan_number:
   539                           	callstack 30
   540   00230E                     
   541                           ;main.c: 59:     signed char input = 10;
   542   00230E  0E0A               	movlw	10
   543   002310  6E06               	movwf	scan_number@input^0,c
   544                           
   545                           ;main.c: 61:     signed char button = 0;
   546   002312  0E00               	movlw	0
   547   002314  6E03               	movwf	scan_number@button^0,c
   548                           
   549                           ;main.c: 62:     signed char count = 2;
   550   002316  0E02               	movlw	2
   551   002318  6E04               	movwf	scan_number@count^0,c
   552                           
   553                           ;main.c: 64:     while (input == 10)
   554   00231A  EFEF  F011         	goto	l990
   555   00231E                     l60:
   556                           
   557                           ;main.c: 65:     {;main.c: 66:         PORTBbits.RB0 = 1;
   558   00231E  80CB               	bsf	203,0,c	;volatile
   559                           
   560                           ;main.c: 67:         if (PORTAbits.RA0 == 1)input = 1;
   561   002320  A0CA               	btfss	202,0,c	;volatile
   562   002322  EF95  F011         	goto	u161
   563   002326  EF97  F011         	goto	u160
   564   00232A                     u161:
   565   00232A  EF99  F011         	goto	l944
   566   00232E                     u160:
   567   00232E  0E01               	movlw	1
   568   002330  6E06               	movwf	scan_number@input^0,c
   569   002332                     l944:
   570                           
   571                           ;main.c: 68:         if(PORTAbits.RA1 == 1) input = 4;
   572   002332  A2CA               	btfss	202,1,c	;volatile
   573   002334  EF9E  F011         	goto	u171
   574   002338  EFA0  F011         	goto	u170
   575   00233C                     u171:
   576   00233C  EFA2  F011         	goto	l948
   577   002340                     u170:
   578   002340  0E04               	movlw	4
   579   002342  6E06               	movwf	scan_number@input^0,c
   580   002344                     l948:
   581                           
   582                           ;main.c: 69:         if(PORTAbits.RA2 == 1) input = 7;
   583   002344  A4CA               	btfss	202,2,c	;volatile
   584   002346  EFA7  F011         	goto	u181
   585   00234A  EFA9  F011         	goto	u180
   586   00234E                     u181:
   587   00234E  EFAB  F011         	goto	l952
   588   002352                     u180:
   589   002352  0E07               	movlw	7
   590   002354  6E06               	movwf	scan_number@input^0,c
   591   002356                     l952:
   592                           
   593                           ;main.c: 70:         PORTBbits.RB0 = 0;
   594   002356  90CB               	bcf	203,0,c	;volatile
   595   002358                     
   596                           ;main.c: 72:          PORTBbits.RB1 = 1;
   597   002358  82CB               	bsf	203,1,c	;volatile
   598   00235A                     
   599                           ;main.c: 73:         if (PORTAbits.RA0 == 1)input = 2;
   600   00235A  A0CA               	btfss	202,0,c	;volatile
   601   00235C  EFB2  F011         	goto	u191
   602   002360  EFB4  F011         	goto	u190
   603   002364                     u191:
   604   002364  EFB6  F011         	goto	l960
   605   002368                     u190:
   606   002368  0E02               	movlw	2
   607   00236A  6E06               	movwf	scan_number@input^0,c
   608   00236C                     l960:
   609                           
   610                           ;main.c: 74:         if(PORTAbits.RA1 == 1) input = 5;
   611   00236C  A2CA               	btfss	202,1,c	;volatile
   612   00236E  EFBB  F011         	goto	u201
   613   002372  EFBD  F011         	goto	u200
   614   002376                     u201:
   615   002376  EFBF  F011         	goto	l964
   616   00237A                     u200:
   617   00237A  0E05               	movlw	5
   618   00237C  6E06               	movwf	scan_number@input^0,c
   619   00237E                     l964:
   620                           
   621                           ;main.c: 75:         if(PORTAbits.RA2 == 1) input = 8;
   622   00237E  A4CA               	btfss	202,2,c	;volatile
   623   002380  EFC4  F011         	goto	u211
   624   002384  EFC6  F011         	goto	u210
   625   002388                     u211:
   626   002388  EFC8  F011         	goto	l968
   627   00238C                     u210:
   628   00238C  0E08               	movlw	8
   629   00238E  6E06               	movwf	scan_number@input^0,c
   630   002390                     l968:
   631                           
   632                           ;main.c: 76:         if(PORTAbits.RA3 == 1) input = 0;
   633   002390  A6CA               	btfss	202,3,c	;volatile
   634   002392  EFCD  F011         	goto	u221
   635   002396  EFCF  F011         	goto	u220
   636   00239A                     u221:
   637   00239A  EFD1  F011         	goto	l972
   638   00239E                     u220:
   639   00239E  0E00               	movlw	0
   640   0023A0  6E06               	movwf	scan_number@input^0,c
   641   0023A2                     l972:
   642                           
   643                           ;main.c: 77:         PORTBbits.RB1 = 0;
   644   0023A2  92CB               	bcf	203,1,c	;volatile
   645   0023A4                     
   646                           ;main.c: 79:          PORTBbits.RB2 = 1;
   647   0023A4  84CB               	bsf	203,2,c	;volatile
   648   0023A6                     
   649                           ;main.c: 80:         if (PORTAbits.RA0 == 1)input = 3;
   650   0023A6  A0CA               	btfss	202,0,c	;volatile
   651   0023A8  EFD8  F011         	goto	u231
   652   0023AC  EFDA  F011         	goto	u230
   653   0023B0                     u231:
   654   0023B0  EFDC  F011         	goto	l980
   655   0023B4                     u230:
   656   0023B4  0E03               	movlw	3
   657   0023B6  6E06               	movwf	scan_number@input^0,c
   658   0023B8                     l980:
   659                           
   660                           ;main.c: 81:         if(PORTAbits.RA1 == 1) input = 6;
   661   0023B8  A2CA               	btfss	202,1,c	;volatile
   662   0023BA  EFE1  F011         	goto	u241
   663   0023BE  EFE3  F011         	goto	u240
   664   0023C2                     u241:
   665   0023C2  EFE5  F011         	goto	l984
   666   0023C6                     u240:
   667   0023C6  0E06               	movlw	6
   668   0023C8  6E06               	movwf	scan_number@input^0,c
   669   0023CA                     l984:
   670                           
   671                           ;main.c: 82:         if(PORTAbits.RA2 == 1) input = 9;
   672   0023CA  A4CA               	btfss	202,2,c	;volatile
   673   0023CC  EFEA  F011         	goto	u251
   674   0023D0  EFEC  F011         	goto	u250
   675   0023D4                     u251:
   676   0023D4  EFEE  F011         	goto	l988
   677   0023D8                     u250:
   678   0023D8  0E09               	movlw	9
   679   0023DA  6E06               	movwf	scan_number@input^0,c
   680   0023DC                     l988:
   681                           
   682                           ;main.c: 83:         PORTBbits.RB2 = 0;
   683   0023DC  94CB               	bcf	203,2,c	;volatile
   684   0023DE                     l990:
   685                           
   686                           ;main.c: 64:     while (input == 10)
   687   0023DE  0E0A               	movlw	10
   688   0023E0  1806               	xorwf	scan_number@input^0,w,c
   689   0023E2  B4D8               	btfsc	status,2,c
   690   0023E4  EFF6  F011         	goto	u261
   691   0023E8  EFF8  F011         	goto	u260
   692   0023EC                     u261:
   693   0023EC  EF8F  F011         	goto	l60
   694   0023F0                     u260:
   695   0023F0                     
   696                           ;main.c: 86:     _delay((unsigned long)((200)*(8000000/4000.0)));
   697   0023F0  0E03               	movlw	3
   698   0023F2  6E02               	movwf	(??_scan_number+1)^0,c
   699   0023F4  0E08               	movlw	8
   700   0023F6  6E01               	movwf	??_scan_number^0,c
   701   0023F8  0E77               	movlw	119
   702   0023FA                     u1177:
   703   0023FA  2EE8               	decfsz	wreg,f,c
   704   0023FC  D7FE               	bra	u1177
   705   0023FE  2E01               	decfsz	??_scan_number^0,f,c
   706   002400  D7FC               	bra	u1177
   707   002402  2E02               	decfsz	(??_scan_number+1)^0,f,c
   708   002404  D7FA               	bra	u1177
   709   002406  0000               	nop	
   710   002408                     
   711                           ;main.c: 88:     input *=10;
   712   002408  0E0A               	movlw	10
   713   00240A  0206               	mulwf	scan_number@input^0,c
   714   00240C  50F3               	movf	prodl,w,c
   715   00240E  6E06               	movwf	scan_number@input^0,c
   716   002410                     
   717                           ;main.c: 89:     output = input;
   718   002410  C006  F005         	movff	scan_number@input,scan_number@output
   719   002414                     
   720                           ;main.c: 91:     input = 10;
   721   002414  0E0A               	movlw	10
   722   002416  6E06               	movwf	scan_number@input^0,c
   723                           
   724                           ;main.c: 92:     while (input == 10)
   725   002418  EF70  F012         	goto	l1048
   726   00241C                     l73:
   727                           
   728                           ;main.c: 93:     {;main.c: 94:         PORTBbits.RB0 = 1;
   729   00241C  80CB               	bsf	203,0,c	;volatile
   730                           
   731                           ;main.c: 95:         if (PORTAbits.RA0 == 1)input = 1;
   732   00241E  A0CA               	btfss	202,0,c	;volatile
   733   002420  EF14  F012         	goto	u271
   734   002424  EF16  F012         	goto	u270
   735   002428                     u271:
   736   002428  EF18  F012         	goto	l1002
   737   00242C                     u270:
   738   00242C  0E01               	movlw	1
   739   00242E  6E06               	movwf	scan_number@input^0,c
   740   002430                     l1002:
   741                           
   742                           ;main.c: 96:         if(PORTAbits.RA1 == 1) input = 4;
   743   002430  A2CA               	btfss	202,1,c	;volatile
   744   002432  EF1D  F012         	goto	u281
   745   002436  EF1F  F012         	goto	u280
   746   00243A                     u281:
   747   00243A  EF21  F012         	goto	l1006
   748   00243E                     u280:
   749   00243E  0E04               	movlw	4
   750   002440  6E06               	movwf	scan_number@input^0,c
   751   002442                     l1006:
   752                           
   753                           ;main.c: 97:         if(PORTAbits.RA2 == 1) input = 7;
   754   002442  A4CA               	btfss	202,2,c	;volatile
   755   002444  EF26  F012         	goto	u291
   756   002448  EF28  F012         	goto	u290
   757   00244C                     u291:
   758   00244C  EF2A  F012         	goto	l1010
   759   002450                     u290:
   760   002450  0E07               	movlw	7
   761   002452  6E06               	movwf	scan_number@input^0,c
   762   002454                     l1010:
   763                           
   764                           ;main.c: 98:         PORTBbits.RB0 = 0;
   765   002454  90CB               	bcf	203,0,c	;volatile
   766   002456                     
   767                           ;main.c: 100:          PORTBbits.RB1 = 1;
   768   002456  82CB               	bsf	203,1,c	;volatile
   769   002458                     
   770                           ;main.c: 101:         if(PORTAbits.RA0 == 1) input = 2;
   771   002458  A0CA               	btfss	202,0,c	;volatile
   772   00245A  EF31  F012         	goto	u301
   773   00245E  EF33  F012         	goto	u300
   774   002462                     u301:
   775   002462  EF35  F012         	goto	l1018
   776   002466                     u300:
   777   002466  0E02               	movlw	2
   778   002468  6E06               	movwf	scan_number@input^0,c
   779   00246A                     l1018:
   780                           
   781                           ;main.c: 102:         if(PORTAbits.RA1 == 1) input = 5;
   782   00246A  A2CA               	btfss	202,1,c	;volatile
   783   00246C  EF3A  F012         	goto	u311
   784   002470  EF3C  F012         	goto	u310
   785   002474                     u311:
   786   002474  EF3E  F012         	goto	l1022
   787   002478                     u310:
   788   002478  0E05               	movlw	5
   789   00247A  6E06               	movwf	scan_number@input^0,c
   790   00247C                     l1022:
   791                           
   792                           ;main.c: 103:         if(PORTAbits.RA2 == 1) input = 8;
   793   00247C  A4CA               	btfss	202,2,c	;volatile
   794   00247E  EF43  F012         	goto	u321
   795   002482  EF45  F012         	goto	u320
   796   002486                     u321:
   797   002486  EF47  F012         	goto	l1026
   798   00248A                     u320:
   799   00248A  0E08               	movlw	8
   800   00248C  6E06               	movwf	scan_number@input^0,c
   801   00248E                     l1026:
   802                           
   803                           ;main.c: 104:         if(PORTAbits.RA3 == 1) input = 0;
   804   00248E  A6CA               	btfss	202,3,c	;volatile
   805   002490  EF4C  F012         	goto	u331
   806   002494  EF4E  F012         	goto	u330
   807   002498                     u331:
   808   002498  EF50  F012         	goto	l1030
   809   00249C                     u330:
   810   00249C  0E00               	movlw	0
   811   00249E  6E06               	movwf	scan_number@input^0,c
   812   0024A0                     l1030:
   813                           
   814                           ;main.c: 105:         PORTBbits.RB1 = 0;
   815   0024A0  92CB               	bcf	203,1,c	;volatile
   816   0024A2                     
   817                           ;main.c: 107:          PORTBbits.RB2 = 1;
   818   0024A2  84CB               	bsf	203,2,c	;volatile
   819   0024A4                     
   820                           ;main.c: 108:         if (PORTAbits.RA0 == 1)input = 3;
   821   0024A4  A0CA               	btfss	202,0,c	;volatile
   822   0024A6  EF57  F012         	goto	u341
   823   0024AA  EF59  F012         	goto	u340
   824   0024AE                     u341:
   825   0024AE  EF5B  F012         	goto	l1038
   826   0024B2                     u340:
   827   0024B2  0E03               	movlw	3
   828   0024B4  6E06               	movwf	scan_number@input^0,c
   829   0024B6                     l1038:
   830                           
   831                           ;main.c: 109:         if(PORTAbits.RA1 == 1) input = 6;
   832   0024B6  A2CA               	btfss	202,1,c	;volatile
   833   0024B8  EF60  F012         	goto	u351
   834   0024BC  EF62  F012         	goto	u350
   835   0024C0                     u351:
   836   0024C0  EF64  F012         	goto	l1042
   837   0024C4                     u350:
   838   0024C4  0E06               	movlw	6
   839   0024C6  6E06               	movwf	scan_number@input^0,c
   840   0024C8                     l1042:
   841                           
   842                           ;main.c: 110:         if(PORTAbits.RA2 == 1) input = 9;
   843   0024C8  A4CA               	btfss	202,2,c	;volatile
   844   0024CA  EF69  F012         	goto	u361
   845   0024CE  EF6B  F012         	goto	u360
   846   0024D2                     u361:
   847   0024D2  EF6D  F012         	goto	l1046
   848   0024D6                     u360:
   849   0024D6  0E09               	movlw	9
   850   0024D8  6E06               	movwf	scan_number@input^0,c
   851   0024DA                     l1046:
   852                           
   853                           ;main.c: 111:         PORTBbits.RB2 = 0;
   854   0024DA  94CB               	bcf	203,2,c	;volatile
   855                           
   856                           ;main.c: 113:         PORTB = 0;
   857   0024DC  0E00               	movlw	0
   858   0024DE  6ECB               	movwf	203,c	;volatile
   859   0024E0                     l1048:
   860                           
   861                           ;main.c: 92:     while (input == 10)
   862   0024E0  0E0A               	movlw	10
   863   0024E2  1806               	xorwf	scan_number@input^0,w,c
   864   0024E4  B4D8               	btfsc	status,2,c
   865   0024E6  EF77  F012         	goto	u371
   866   0024EA  EF79  F012         	goto	u370
   867   0024EE                     u371:
   868   0024EE  EF0E  F012         	goto	l73
   869   0024F2                     u370:
   870   0024F2                     
   871                           ;main.c: 115:     output += input;
   872   0024F2  5006               	movf	scan_number@input^0,w,c
   873   0024F4  2605               	addwf	scan_number@output^0,f,c
   874   0024F6                     
   875                           ;main.c: 116:     _delay((unsigned long)((200)*(8000000/4000.0)));
   876   0024F6  0E03               	movlw	3
   877   0024F8  6E02               	movwf	(??_scan_number+1)^0,c
   878   0024FA  0E08               	movlw	8
   879   0024FC  6E01               	movwf	??_scan_number^0,c
   880   0024FE  0E77               	movlw	119
   881   002500                     u1187:
   882   002500  2EE8               	decfsz	wreg,f,c
   883   002502  D7FE               	bra	u1187
   884   002504  2E01               	decfsz	??_scan_number^0,f,c
   885   002506  D7FC               	bra	u1187
   886   002508  2E02               	decfsz	(??_scan_number+1)^0,f,c
   887   00250A  D7FA               	bra	u1187
   888   00250C  0000               	nop	
   889   00250E                     
   890                           ;main.c: 117:     return output;
   891   00250E  5005               	movf	scan_number@output^0,w,c
   892   002510  0012               	return		;funcret
   893   002512                     __end_of_scan_number:
   894                           	callstack 0
   895                           
   896 ;; *************** function _calculate *****************
   897 ;; Defined at:
   898 ;;		line 134 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  x               1    wreg     unsigned char 
   901 ;;  y               1    4[COMRAM] unsigned char 
   902 ;;  op              1    5[COMRAM] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  x               1    7[COMRAM] unsigned char 
   905 ;;  output          1    6[COMRAM] char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2    4[COMRAM] int 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   919 ;;Total ram usage:        4 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 1
   922 ;; This function calls:
   923 ;;		___lbdiv
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930   002780                     __ptext3:
   931                           	callstack 0
   932   002780                     _calculate:
   933                           	callstack 29
   934                           
   935                           ;incstack = 0
   936                           ;calculate@x stored from wreg
   937   002780  6E08               	movwf	calculate@x^0,c
   938   002782                     
   939                           ;main.c: 135:     signed char output = 0;
   940   002782  0E00               	movlw	0
   941   002784  6E07               	movwf	calculate@output^0,c
   942   002786                     
   943                           ;main.c: 136:     if(op == 1)
   944   002786  0406               	decf	calculate@op^0,w,c
   945   002788  A4D8               	btfss	status,2,c
   946   00278A  EFC9  F013         	goto	u871
   947   00278E  EFCB  F013         	goto	u870
   948   002792                     u871:
   949   002792  EFCE  F013         	goto	l98
   950   002796                     u870:
   951   002796                     
   952                           ;main.c: 137:         output = x + y;
   953   002796  5008               	movf	calculate@x^0,w,c
   954   002798  2405               	addwf	calculate@y^0,w,c
   955   00279A  6E07               	movwf	calculate@output^0,c
   956   00279C                     l98:
   957                           
   958                           ;main.c: 138:     if(op == 2)
   959   00279C  0E02               	movlw	2
   960   00279E  1806               	xorwf	calculate@op^0,w,c
   961   0027A0  A4D8               	btfss	status,2,c
   962   0027A2  EFD5  F013         	goto	u881
   963   0027A6  EFD7  F013         	goto	u880
   964   0027AA                     u881:
   965   0027AA  EFDA  F013         	goto	l99
   966   0027AE                     u880:
   967   0027AE                     
   968                           ;main.c: 139:         output = x-y;
   969   0027AE  5005               	movf	calculate@y^0,w,c
   970   0027B0  5C08               	subwf	calculate@x^0,w,c
   971   0027B2  6E07               	movwf	calculate@output^0,c
   972   0027B4                     l99:
   973                           
   974                           ;main.c: 140:     if(op == 3)
   975   0027B4  0E03               	movlw	3
   976   0027B6  1806               	xorwf	calculate@op^0,w,c
   977   0027B8  A4D8               	btfss	status,2,c
   978   0027BA  EFE1  F013         	goto	u891
   979   0027BE  EFE3  F013         	goto	u890
   980   0027C2                     u891:
   981   0027C2  EFE8  F013         	goto	l1364
   982   0027C6                     u890:
   983   0027C6                     
   984                           ;main.c: 141:         output = x*y;
   985   0027C6  5008               	movf	calculate@x^0,w,c
   986   0027C8  0205               	mulwf	calculate@y^0,c
   987   0027CA  006F FFCC  F007    	movff	prodl,calculate@output
   988   0027D0                     l1364:
   989                           
   990                           ;main.c: 142:     if(op == 4)
   991   0027D0  0E04               	movlw	4
   992   0027D2  1806               	xorwf	calculate@op^0,w,c
   993   0027D4  A4D8               	btfss	status,2,c
   994   0027D6  EFEF  F013         	goto	u901
   995   0027DA  EFF1  F013         	goto	u900
   996   0027DE                     u901:
   997   0027DE  EFF7  F013         	goto	l1368
   998   0027E2                     u900:
   999   0027E2                     
  1000                           ;main.c: 143:         output = x/y;
  1001   0027E2  C005  F001         	movff	calculate@y,___lbdiv@divisor
  1002   0027E6  5008               	movf	calculate@x^0,w,c
  1003   0027E8  ECFD  F013         	call	___lbdiv
  1004   0027EC  6E07               	movwf	calculate@output^0,c
  1005   0027EE                     l1368:
  1006                           
  1007                           ;main.c: 144:     return output;
  1008   0027EE  5007               	movf	calculate@output^0,w,c
  1009   0027F0  6E05               	movwf	?_calculate^0,c
  1010   0027F2  6A06               	clrf	(?_calculate+1)^0,c
  1011   0027F4  BE05               	btfsc	?_calculate^0,7,c
  1012   0027F6  0606               	decf	(?_calculate+1)^0,f,c
  1013   0027F8  0012               	return		;funcret
  1014   0027FA                     __end_of_calculate:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function ___lbdiv *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  dividend        1    wreg     unsigned char 
  1022 ;;  divisor         1    0[COMRAM] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  dividend        1    1[COMRAM] unsigned char 
  1025 ;;  quotient        1    3[COMRAM] unsigned char 
  1026 ;;  counter         1    2[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1036 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;Total ram usage:        4 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_calculate
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050   0027FA                     __ptext4:
  1051                           	callstack 0
  1052   0027FA                     ___lbdiv:
  1053                           	callstack 29
  1054                           
  1055                           ;incstack = 0
  1056                           ;___lbdiv@dividend stored from wreg
  1057   0027FA  6E02               	movwf	___lbdiv@dividend^0,c
  1058   0027FC  0E00               	movlw	0
  1059   0027FE  6E04               	movwf	___lbdiv@quotient^0,c
  1060   002800  5001               	movf	___lbdiv@divisor^0,w,c
  1061   002802  B4D8               	btfsc	status,2,c
  1062   002804  EF06  F014         	goto	u841
  1063   002808  EF08  F014         	goto	u840
  1064   00280C                     u841:
  1065   00280C  EF29  F014         	goto	l1350
  1066   002810                     u840:
  1067   002810  0E01               	movlw	1
  1068   002812  6E03               	movwf	___lbdiv@counter^0,c
  1069   002814  EF0F  F014         	goto	l1338
  1070   002818                     l1334:
  1071   002818  90D8               	bcf	status,0,c
  1072   00281A  3601               	rlcf	___lbdiv@divisor^0,f,c
  1073   00281C  2A03               	incf	___lbdiv@counter^0,f,c
  1074   00281E                     l1338:
  1075   00281E  AE01               	btfss	___lbdiv@divisor^0,7,c
  1076   002820  EF14  F014         	goto	u851
  1077   002824  EF16  F014         	goto	u850
  1078   002828                     u851:
  1079   002828  EF0C  F014         	goto	l1334
  1080   00282C                     u850:
  1081   00282C                     l1340:
  1082   00282C  90D8               	bcf	status,0,c
  1083   00282E  3604               	rlcf	___lbdiv@quotient^0,f,c
  1084   002830  5001               	movf	___lbdiv@divisor^0,w,c
  1085   002832  5C02               	subwf	___lbdiv@dividend^0,w,c
  1086   002834  A0D8               	btfss	status,0,c
  1087   002836  EF1F  F014         	goto	u861
  1088   00283A  EF21  F014         	goto	u860
  1089   00283E                     u861:
  1090   00283E  EF24  F014         	goto	l1346
  1091   002842                     u860:
  1092   002842  5001               	movf	___lbdiv@divisor^0,w,c
  1093   002844  5E02               	subwf	___lbdiv@dividend^0,f,c
  1094   002846  8004               	bsf	___lbdiv@quotient^0,0,c
  1095   002848                     l1346:
  1096   002848  90D8               	bcf	status,0,c
  1097   00284A  3201               	rrcf	___lbdiv@divisor^0,f,c
  1098   00284C  2E03               	decfsz	___lbdiv@counter^0,f,c
  1099   00284E  EF16  F014         	goto	l1340
  1100   002852                     l1350:
  1101   002852  5004               	movf	___lbdiv@quotient^0,w,c
  1102   002854  0012               	return		;funcret
  1103   002856                     __end_of___lbdiv:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _PORT_Output *****************
  1107 ;; Defined at:
  1108 ;;		line 147 in file "main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  answer          2    8[COMRAM] int 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  i               2   12[COMRAM] int 
  1113 ;;  first_dig       1   17[COMRAM] char 
  1114 ;;  second_dig      1   16[COMRAM] char 
  1115 ;;  display2        1   15[COMRAM] unsigned char 
  1116 ;;  display1        1   14[COMRAM] unsigned char 
  1117 ;;  enter           1   11[COMRAM] char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1131 ;;Total ram usage:       10 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 1
  1134 ;; This function calls:
  1135 ;;		___awdiv
  1136 ;;		___awmod
  1137 ;;		___wmul
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text5
  1144   002002                     __ptext5:
  1145                           	callstack 0
  1146   002002                     _PORT_Output:
  1147                           	callstack 29
  1148   002002                     
  1149                           ;main.c: 149:     signed char second_dig = 0;
  1150   002002  0E00               	movlw	0
  1151   002004  6E11               	movwf	PORT_Output@second_dig^0,c
  1152                           
  1153                           ;main.c: 150:     signed char enter = 0;
  1154   002006  0E00               	movlw	0
  1155   002008  6E0C               	movwf	PORT_Output@enter^0,c
  1156                           
  1157                           ;main.c: 151:     int i = 0;
  1158   00200A  0E00               	movlw	0
  1159   00200C  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1160   00200E  0E00               	movlw	0
  1161   002010  6E0D               	movwf	PORT_Output@i^0,c
  1162                           
  1163                           ;main.c: 152:     char display1 = 0;
  1164   002012  0E00               	movlw	0
  1165   002014  6E0F               	movwf	PORT_Output@display1^0,c
  1166                           
  1167                           ;main.c: 153:     char display2 = 0;
  1168   002016  0E00               	movlw	0
  1169   002018  6E10               	movwf	PORT_Output@display2^0,c
  1170   00201A                     
  1171                           ;main.c: 155:     if(answer<0){
  1172   00201A  BE0A               	btfsc	(PORT_Output@answer+1)^0,7,c
  1173   00201C  EF14  F010         	goto	u910
  1174   002020  EF12  F010         	goto	u911
  1175   002024                     u911:
  1176   002024  EF22  F010         	goto	l1380
  1177   002028                     u910:
  1178   002028                     
  1179                           ;main.c: 156:         answer*= -1;
  1180   002028  C009  F001         	movff	PORT_Output@answer,___wmul@multiplier
  1181   00202C  C00A  F002         	movff	PORT_Output@answer+1,___wmul@multiplier+1
  1182   002030  0EFF               	movlw	255
  1183   002032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1184   002034  6803               	setf	___wmul@multiplicand^0,c
  1185   002036  EC2B  F014         	call	___wmul	;wreg free
  1186   00203A  C001  F009         	movff	?___wmul,PORT_Output@answer
  1187   00203E  C002  F00A         	movff	?___wmul+1,PORT_Output@answer+1
  1188   002042                     
  1189                           ;main.c: 157:         PORTCbits.RC7 = 0;
  1190   002042  9ECC               	bcf	204,7,c	;volatile
  1191   002044                     l1380:
  1192                           
  1193                           ;main.c: 159:     first_dig = answer/10;
  1194   002044  C009  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1195   002048  C00A  F002         	movff	PORT_Output@answer+1,___awdiv@dividend+1
  1196   00204C  0E00               	movlw	0
  1197   00204E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1198   002050  0E0A               	movlw	10
  1199   002052  6E03               	movwf	___awdiv@divisor^0,c
  1200   002054  EC89  F012         	call	___awdiv	;wreg free
  1201   002058  5001               	movf	?___awdiv^0,w,c
  1202   00205A  6E12               	movwf	PORT_Output@first_dig^0,c
  1203   00205C                     
  1204                           ;main.c: 160:     second_dig = answer % 10;
  1205   00205C  C009  F001         	movff	PORT_Output@answer,___awmod@dividend
  1206   002060  C00A  F002         	movff	PORT_Output@answer+1,___awmod@dividend+1
  1207   002064  0E00               	movlw	0
  1208   002066  6E04               	movwf	(___awmod@divisor+1)^0,c
  1209   002068  0E0A               	movlw	10
  1210   00206A  6E03               	movwf	___awmod@divisor^0,c
  1211   00206C  ECEB  F012         	call	___awmod	;wreg free
  1212   002070  5001               	movf	?___awmod^0,w,c
  1213   002072  6E11               	movwf	PORT_Output@second_dig^0,c
  1214   002074                     
  1215                           ;main.c: 162:     if(first_dig == 0) display1 = 0xC0;
  1216   002074  5012               	movf	PORT_Output@first_dig^0,w,c
  1217   002076  A4D8               	btfss	status,2,c
  1218   002078  EF40  F010         	goto	u921
  1219   00207C  EF42  F010         	goto	u920
  1220   002080                     u921:
  1221   002080  EF46  F010         	goto	l1388
  1222   002084                     u920:
  1223   002084  0EC0               	movlw	192
  1224   002086  6E0F               	movwf	PORT_Output@display1^0,c
  1225   002088  EFC2  F010         	goto	l107
  1226   00208C                     l1388:
  1227   00208C  0412               	decf	PORT_Output@first_dig^0,w,c
  1228   00208E  B4D8               	btfsc	status,2,c
  1229   002090  EF4C  F010         	goto	u931
  1230   002094  EF4E  F010         	goto	u930
  1231   002098                     u931:
  1232   002098  EF56  F010         	goto	l1392
  1233   00209C                     u930:
  1234   00209C  2812               	incf	PORT_Output@first_dig^0,w,c
  1235   00209E  A4D8               	btfss	status,2,c
  1236   0020A0  EF54  F010         	goto	u941
  1237   0020A4  EF56  F010         	goto	u940
  1238   0020A8                     u941:
  1239   0020A8  EF5A  F010         	goto	l1394
  1240   0020AC                     u940:
  1241   0020AC                     l1392:
  1242   0020AC  0EF9               	movlw	249
  1243   0020AE  6E0F               	movwf	PORT_Output@display1^0,c
  1244   0020B0  EFC2  F010         	goto	l107
  1245   0020B4                     l1394:
  1246   0020B4  0E02               	movlw	2
  1247   0020B6  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1248   0020B8  A4D8               	btfss	status,2,c
  1249   0020BA  EF61  F010         	goto	u951
  1250   0020BE  EF63  F010         	goto	u950
  1251   0020C2                     u951:
  1252   0020C2  EF67  F010         	goto	l1398
  1253   0020C6                     u950:
  1254   0020C6  0EA4               	movlw	164
  1255   0020C8  6E0F               	movwf	PORT_Output@display1^0,c
  1256   0020CA  EFC2  F010         	goto	l107
  1257   0020CE                     l1398:
  1258   0020CE  0E03               	movlw	3
  1259   0020D0  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1260   0020D2  A4D8               	btfss	status,2,c
  1261   0020D4  EF6E  F010         	goto	u961
  1262   0020D8  EF70  F010         	goto	u960
  1263   0020DC                     u961:
  1264   0020DC  EF74  F010         	goto	l1402
  1265   0020E0                     u960:
  1266   0020E0  0EB0               	movlw	176
  1267   0020E2  6E0F               	movwf	PORT_Output@display1^0,c
  1268   0020E4  EFC2  F010         	goto	l107
  1269   0020E8                     l1402:
  1270   0020E8  0E04               	movlw	4
  1271   0020EA  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1272   0020EC  A4D8               	btfss	status,2,c
  1273   0020EE  EF7B  F010         	goto	u971
  1274   0020F2  EF7D  F010         	goto	u970
  1275   0020F6                     u971:
  1276   0020F6  EF81  F010         	goto	l1406
  1277   0020FA                     u970:
  1278   0020FA  0E99               	movlw	153
  1279   0020FC  6E0F               	movwf	PORT_Output@display1^0,c
  1280   0020FE  EFC2  F010         	goto	l107
  1281   002102                     l1406:
  1282   002102  0E05               	movlw	5
  1283   002104  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1284   002106  A4D8               	btfss	status,2,c
  1285   002108  EF88  F010         	goto	u981
  1286   00210C  EF8A  F010         	goto	u980
  1287   002110                     u981:
  1288   002110  EF8E  F010         	goto	l1410
  1289   002114                     u980:
  1290   002114  0E92               	movlw	146
  1291   002116  6E0F               	movwf	PORT_Output@display1^0,c
  1292   002118  EFC2  F010         	goto	l107
  1293   00211C                     l1410:
  1294   00211C  0E06               	movlw	6
  1295   00211E  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1296   002120  A4D8               	btfss	status,2,c
  1297   002122  EF95  F010         	goto	u991
  1298   002126  EF97  F010         	goto	u990
  1299   00212A                     u991:
  1300   00212A  EF9B  F010         	goto	l1414
  1301   00212E                     u990:
  1302   00212E  0E82               	movlw	130
  1303   002130  6E0F               	movwf	PORT_Output@display1^0,c
  1304   002132  EFC2  F010         	goto	l107
  1305   002136                     l1414:
  1306   002136  0E07               	movlw	7
  1307   002138  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1308   00213A  A4D8               	btfss	status,2,c
  1309   00213C  EFA2  F010         	goto	u1001
  1310   002140  EFA4  F010         	goto	u1000
  1311   002144                     u1001:
  1312   002144  EFA8  F010         	goto	l1418
  1313   002148                     u1000:
  1314   002148  0EF8               	movlw	248
  1315   00214A  6E0F               	movwf	PORT_Output@display1^0,c
  1316   00214C  EFC2  F010         	goto	l107
  1317   002150                     l1418:
  1318   002150  0E08               	movlw	8
  1319   002152  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1320   002154  A4D8               	btfss	status,2,c
  1321   002156  EFAF  F010         	goto	u1011
  1322   00215A  EFB1  F010         	goto	u1010
  1323   00215E                     u1011:
  1324   00215E  EFB5  F010         	goto	l1422
  1325   002162                     u1010:
  1326   002162  0E80               	movlw	128
  1327   002164  6E0F               	movwf	PORT_Output@display1^0,c
  1328   002166  EFC2  F010         	goto	l107
  1329   00216A                     l1422:
  1330   00216A  0E09               	movlw	9
  1331   00216C  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1332   00216E  A4D8               	btfss	status,2,c
  1333   002170  EFBC  F010         	goto	u1021
  1334   002174  EFBE  F010         	goto	u1020
  1335   002178                     u1021:
  1336   002178  EFC2  F010         	goto	l121
  1337   00217C                     u1020:
  1338   00217C  0E98               	movlw	152
  1339   00217E  6E0F               	movwf	PORT_Output@display1^0,c
  1340   002180  EFC2  F010         	goto	l107
  1341   002184                     l121:
  1342   002184                     l107:
  1343                           
  1344                           ;main.c: 173:     if(second_dig == 0) display2 = 0xC0;
  1345   002184  5011               	movf	PORT_Output@second_dig^0,w,c
  1346   002186  A4D8               	btfss	status,2,c
  1347   002188  EFC8  F010         	goto	u1031
  1348   00218C  EFCA  F010         	goto	u1030
  1349   002190                     u1031:
  1350   002190  EFCE  F010         	goto	l1428
  1351   002194                     u1030:
  1352   002194  0EC0               	movlw	192
  1353   002196  6E10               	movwf	PORT_Output@display2^0,c
  1354   002198  EF4E  F011         	goto	l146
  1355   00219C                     l1428:
  1356   00219C  0411               	decf	PORT_Output@second_dig^0,w,c
  1357   00219E  A4D8               	btfss	status,2,c
  1358   0021A0  EFD4  F010         	goto	u1041
  1359   0021A4  EFD6  F010         	goto	u1040
  1360   0021A8                     u1041:
  1361   0021A8  EFDA  F010         	goto	l1432
  1362   0021AC                     u1040:
  1363   0021AC  0EF9               	movlw	249
  1364   0021AE  6E10               	movwf	PORT_Output@display2^0,c
  1365   0021B0  EF4E  F011         	goto	l146
  1366   0021B4                     l1432:
  1367   0021B4  0E02               	movlw	2
  1368   0021B6  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1369   0021B8  A4D8               	btfss	status,2,c
  1370   0021BA  EFE1  F010         	goto	u1051
  1371   0021BE  EFE3  F010         	goto	u1050
  1372   0021C2                     u1051:
  1373   0021C2  EFE7  F010         	goto	l1436
  1374   0021C6                     u1050:
  1375   0021C6  0EA4               	movlw	164
  1376   0021C8  6E10               	movwf	PORT_Output@display2^0,c
  1377   0021CA  EF4E  F011         	goto	l146
  1378   0021CE                     l1436:
  1379   0021CE  0E03               	movlw	3
  1380   0021D0  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1381   0021D2  A4D8               	btfss	status,2,c
  1382   0021D4  EFEE  F010         	goto	u1061
  1383   0021D8  EFF0  F010         	goto	u1060
  1384   0021DC                     u1061:
  1385   0021DC  EFF4  F010         	goto	l1440
  1386   0021E0                     u1060:
  1387   0021E0  0EB0               	movlw	176
  1388   0021E2  6E10               	movwf	PORT_Output@display2^0,c
  1389   0021E4  EF4E  F011         	goto	l146
  1390   0021E8                     l1440:
  1391   0021E8  0E04               	movlw	4
  1392   0021EA  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1393   0021EC  A4D8               	btfss	status,2,c
  1394   0021EE  EFFB  F010         	goto	u1071
  1395   0021F2  EFFD  F010         	goto	u1070
  1396   0021F6                     u1071:
  1397   0021F6  EF01  F011         	goto	l1444
  1398   0021FA                     u1070:
  1399   0021FA  0E99               	movlw	153
  1400   0021FC  6E10               	movwf	PORT_Output@display2^0,c
  1401   0021FE  EF4E  F011         	goto	l146
  1402   002202                     l1444:
  1403   002202  0E05               	movlw	5
  1404   002204  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1405   002206  A4D8               	btfss	status,2,c
  1406   002208  EF08  F011         	goto	u1081
  1407   00220C  EF0A  F011         	goto	u1080
  1408   002210                     u1081:
  1409   002210  EF0E  F011         	goto	l1448
  1410   002214                     u1080:
  1411   002214  0E92               	movlw	146
  1412   002216  6E10               	movwf	PORT_Output@display2^0,c
  1413   002218  EF4E  F011         	goto	l146
  1414   00221C                     l1448:
  1415   00221C  0E06               	movlw	6
  1416   00221E  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1417   002220  A4D8               	btfss	status,2,c
  1418   002222  EF15  F011         	goto	u1091
  1419   002226  EF17  F011         	goto	u1090
  1420   00222A                     u1091:
  1421   00222A  EF1B  F011         	goto	l1452
  1422   00222E                     u1090:
  1423   00222E  0E82               	movlw	130
  1424   002230  6E10               	movwf	PORT_Output@display2^0,c
  1425   002232  EF4E  F011         	goto	l146
  1426   002236                     l1452:
  1427   002236  0E07               	movlw	7
  1428   002238  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1429   00223A  A4D8               	btfss	status,2,c
  1430   00223C  EF22  F011         	goto	u1101
  1431   002240  EF24  F011         	goto	u1100
  1432   002244                     u1101:
  1433   002244  EF28  F011         	goto	l1456
  1434   002248                     u1100:
  1435   002248  0EF8               	movlw	248
  1436   00224A  6E10               	movwf	PORT_Output@display2^0,c
  1437   00224C  EF4E  F011         	goto	l146
  1438   002250                     l1456:
  1439   002250  0E08               	movlw	8
  1440   002252  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1441   002254  A4D8               	btfss	status,2,c
  1442   002256  EF2F  F011         	goto	u1111
  1443   00225A  EF31  F011         	goto	u1110
  1444   00225E                     u1111:
  1445   00225E  EF35  F011         	goto	l1460
  1446   002262                     u1110:
  1447   002262  0E80               	movlw	128
  1448   002264  6E10               	movwf	PORT_Output@display2^0,c
  1449   002266  EF4E  F011         	goto	l146
  1450   00226A                     l1460:
  1451   00226A  0E09               	movlw	9
  1452   00226C  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1453   00226E  A4D8               	btfss	status,2,c
  1454   002270  EF3C  F011         	goto	u1121
  1455   002274  EF3E  F011         	goto	u1120
  1456   002278                     u1121:
  1457   002278  EF42  F011         	goto	l140
  1458   00227C                     u1120:
  1459   00227C  0E98               	movlw	152
  1460   00227E  6E10               	movwf	PORT_Output@display2^0,c
  1461   002280  EF4E  F011         	goto	l146
  1462   002284                     l140:
  1463   002284  EF4E  F011         	goto	l146
  1464   002288                     l147:
  1465                           
  1466                           ;main.c: 185:         PORTBbits.RB2 = 1;
  1467   002288  84CB               	bsf	203,2,c	;volatile
  1468                           
  1469                           ;main.c: 186:         if(PORTAbits.RA3 == 1) enter =1;
  1470   00228A  A6CA               	btfss	202,3,c	;volatile
  1471   00228C  EF4A  F011         	goto	u1131
  1472   002290  EF4C  F011         	goto	u1130
  1473   002294                     u1131:
  1474   002294  EF4E  F011         	goto	l146
  1475   002298                     u1130:
  1476   002298  0E01               	movlw	1
  1477   00229A  6E0C               	movwf	PORT_Output@enter^0,c
  1478   00229C                     l146:
  1479                           
  1480                           ;main.c: 184:     while(enter == 0){
  1481   00229C  500C               	movf	PORT_Output@enter^0,w,c
  1482   00229E  B4D8               	btfsc	status,2,c
  1483   0022A0  EF54  F011         	goto	u1141
  1484   0022A4  EF56  F011         	goto	u1140
  1485   0022A8                     u1141:
  1486   0022A8  EF44  F011         	goto	l147
  1487   0022AC                     u1140:
  1488   0022AC                     
  1489                           ;main.c: 189:     PORTCbits.RC6 = 1;
  1490   0022AC  8CCC               	bsf	204,6,c	;volatile
  1491   0022AE                     
  1492                           ;main.c: 190:     for(i = 1; i<1000; i++)
  1493   0022AE  0E00               	movlw	0
  1494   0022B0  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1495   0022B2  0E01               	movlw	1
  1496   0022B4  6E0D               	movwf	PORT_Output@i^0,c
  1497   0022B6                     l150:
  1498                           
  1499                           ;main.c: 191:     {;main.c: 192:         PORTBbits.RB5 = 1;
  1500   0022B6  8ACB               	bsf	203,5,c	;volatile
  1501                           
  1502                           ;main.c: 193:         PORTD = display1;
  1503   0022B8  0060  F03F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1504   0022BE                     
  1505                           ;main.c: 194:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1506   0022BE  0E03               	movlw	3
  1507   0022C0  6E0B               	movwf	??_PORT_Output^0,c
  1508   0022C2  0E98               	movlw	152
  1509   0022C4                     u1197:
  1510   0022C4  2EE8               	decfsz	wreg,f,c
  1511   0022C6  D7FE               	bra	u1197
  1512   0022C8  2E0B               	decfsz	??_PORT_Output^0,f,c
  1513   0022CA  D7FC               	bra	u1197
  1514   0022CC                     
  1515                           ;main.c: 195:         PORTBbits.RB5 = 0;
  1516   0022CC  9ACB               	bcf	203,5,c	;volatile
  1517   0022CE                     
  1518                           ;main.c: 196:         PORTBbits.RB6 = 1;
  1519   0022CE  8CCB               	bsf	203,6,c	;volatile
  1520   0022D0                     
  1521                           ;main.c: 197:         PORTD = display2;
  1522   0022D0  0060  F043  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1523                           
  1524                           ;main.c: 198:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1525   0022D6  0E03               	movlw	3
  1526   0022D8  6E0B               	movwf	??_PORT_Output^0,c
  1527   0022DA  0E98               	movlw	152
  1528   0022DC                     u1207:
  1529   0022DC  2EE8               	decfsz	wreg,f,c
  1530   0022DE  D7FE               	bra	u1207
  1531   0022E0  2E0B               	decfsz	??_PORT_Output^0,f,c
  1532   0022E2  D7FC               	bra	u1207
  1533   0022E4                     
  1534                           ;main.c: 199:         PORTBbits.RB6 = 0;
  1535   0022E4  9CCB               	bcf	203,6,c	;volatile
  1536   0022E6                     
  1537                           ;main.c: 201:     }
  1538   0022E6  4A0D               	infsnz	PORT_Output@i^0,f,c
  1539   0022E8  2A0E               	incf	(PORT_Output@i+1)^0,f,c
  1540   0022EA  BE0E               	btfsc	(PORT_Output@i+1)^0,7,c
  1541   0022EC  EF81  F011         	goto	u1151
  1542   0022F0  0EE8               	movlw	232
  1543   0022F2  5C0D               	subwf	PORT_Output@i^0,w,c
  1544   0022F4  0E03               	movlw	3
  1545   0022F6  580E               	subwfb	(PORT_Output@i+1)^0,w,c
  1546   0022F8  A0D8               	btfss	status,0,c
  1547   0022FA  EF81  F011         	goto	u1151
  1548   0022FE  EF83  F011         	goto	u1150
  1549   002302                     u1151:
  1550   002302  EF5B  F011         	goto	l150
  1551   002306                     u1150:
  1552   002306                     
  1553                           ;main.c: 202:     PORTD = 0xFF;
  1554   002306  68CD               	setf	205,c	;volatile
  1555   002308                     
  1556                           ;main.c: 203:     PORTB = 0;
  1557   002308  0E00               	movlw	0
  1558   00230A  6ECB               	movwf	203,c	;volatile
  1559   00230C  0012               	return		;funcret
  1560   00230E                     __end_of_PORT_Output:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function ___wmul *****************
  1564 ;; Defined at:
  1565 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  multiplier      2    0[COMRAM] unsigned int 
  1568 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  product         2    4[COMRAM] unsigned int 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2    0[COMRAM] unsigned int 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, prodl, prodh
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1584 ;;Total ram usage:        6 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_PORT_Output
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text6
  1594   002856                     __ptext6:
  1595                           	callstack 0
  1596   002856                     ___wmul:
  1597                           	callstack 29
  1598   002856  5001               	movf	___wmul@multiplier^0,w,c
  1599   002858  0203               	mulwf	___wmul@multiplicand^0,c
  1600   00285A  006F FFCC  F005    	movff	prodl,___wmul@product
  1601   002860  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1602   002866  5001               	movf	___wmul@multiplier^0,w,c
  1603   002868  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1604   00286A  50F3               	movf	243,w,c
  1605   00286C  2606               	addwf	(___wmul@product+1)^0,f,c
  1606   00286E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1607   002870  0203               	mulwf	___wmul@multiplicand^0,c
  1608   002872  50F3               	movf	243,w,c
  1609   002874  2606               	addwf	(___wmul@product+1)^0,f,c
  1610   002876  C005  F001         	movff	___wmul@product,?___wmul
  1611   00287A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1612   00287E  0012               	return		;funcret
  1613   002880                     __end_of___wmul:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function ___awmod *****************
  1617 ;; Defined at:
  1618 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  dividend        2    0[COMRAM] int 
  1621 ;;  divisor         2    2[COMRAM] int 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  sign            1    5[COMRAM] unsigned char 
  1624 ;;  counter         1    4[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    0[COMRAM] int 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1638 ;;Total ram usage:        6 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_PORT_Output
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text7
  1648   0025D6                     __ptext7:
  1649                           	callstack 0
  1650   0025D6                     ___awmod:
  1651                           	callstack 29
  1652   0025D6  0E00               	movlw	0
  1653   0025D8  6E06               	movwf	___awmod@sign^0,c
  1654   0025DA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1655   0025DC  EFF4  F012         	goto	u780
  1656   0025E0  EFF2  F012         	goto	u781
  1657   0025E4                     u781:
  1658   0025E4  EFFA  F012         	goto	l1300
  1659   0025E8                     u780:
  1660   0025E8  6C01               	negf	___awmod@dividend^0,c
  1661   0025EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1662   0025EC  B0D8               	btfsc	status,0,c
  1663   0025EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1664   0025F0  0E01               	movlw	1
  1665   0025F2  6E06               	movwf	___awmod@sign^0,c
  1666   0025F4                     l1300:
  1667   0025F4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1668   0025F6  EF01  F013         	goto	u790
  1669   0025FA  EFFF  F012         	goto	u791
  1670   0025FE                     u791:
  1671   0025FE  EF05  F013         	goto	l1304
  1672   002602                     u790:
  1673   002602  6C03               	negf	___awmod@divisor^0,c
  1674   002604  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1675   002606  B0D8               	btfsc	status,0,c
  1676   002608  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1677   00260A                     l1304:
  1678   00260A  5003               	movf	___awmod@divisor^0,w,c
  1679   00260C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1680   00260E  B4D8               	btfsc	status,2,c
  1681   002610  EF0C  F013         	goto	u801
  1682   002614  EF0E  F013         	goto	u800
  1683   002618                     u801:
  1684   002618  EF32  F013         	goto	l1320
  1685   00261C                     u800:
  1686   00261C  0E01               	movlw	1
  1687   00261E  6E05               	movwf	___awmod@counter^0,c
  1688   002620  EF16  F013         	goto	l1310
  1689   002624                     l1308:
  1690   002624  90D8               	bcf	status,0,c
  1691   002626  3603               	rlcf	___awmod@divisor^0,f,c
  1692   002628  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1693   00262A  2A05               	incf	___awmod@counter^0,f,c
  1694   00262C                     l1310:
  1695   00262C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1696   00262E  EF1B  F013         	goto	u811
  1697   002632  EF1D  F013         	goto	u810
  1698   002636                     u811:
  1699   002636  EF12  F013         	goto	l1308
  1700   00263A                     u810:
  1701   00263A                     l1312:
  1702   00263A  5003               	movf	___awmod@divisor^0,w,c
  1703   00263C  5C01               	subwf	___awmod@dividend^0,w,c
  1704   00263E  5004               	movf	(___awmod@divisor+1)^0,w,c
  1705   002640  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1706   002642  A0D8               	btfss	status,0,c
  1707   002644  EF26  F013         	goto	u821
  1708   002648  EF28  F013         	goto	u820
  1709   00264C                     u821:
  1710   00264C  EF2C  F013         	goto	l1316
  1711   002650                     u820:
  1712   002650  5003               	movf	___awmod@divisor^0,w,c
  1713   002652  5E01               	subwf	___awmod@dividend^0,f,c
  1714   002654  5004               	movf	(___awmod@divisor+1)^0,w,c
  1715   002656  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1716   002658                     l1316:
  1717   002658  90D8               	bcf	status,0,c
  1718   00265A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1719   00265C  3203               	rrcf	___awmod@divisor^0,f,c
  1720   00265E  2E05               	decfsz	___awmod@counter^0,f,c
  1721   002660  EF1D  F013         	goto	l1312
  1722   002664                     l1320:
  1723   002664  5006               	movf	___awmod@sign^0,w,c
  1724   002666  B4D8               	btfsc	status,2,c
  1725   002668  EF38  F013         	goto	u831
  1726   00266C  EF3A  F013         	goto	u830
  1727   002670                     u831:
  1728   002670  EF3E  F013         	goto	l1324
  1729   002674                     u830:
  1730   002674  6C01               	negf	___awmod@dividend^0,c
  1731   002676  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1732   002678  B0D8               	btfsc	status,0,c
  1733   00267A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1734   00267C                     l1324:
  1735   00267C  C001  F001         	movff	___awmod@dividend,?___awmod
  1736   002680  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1737   002684  0012               	return		;funcret
  1738   002686                     __end_of___awmod:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function ___awdiv *****************
  1742 ;; Defined at:
  1743 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  dividend        2    0[COMRAM] int 
  1746 ;;  divisor         2    2[COMRAM] int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  quotient        2    6[COMRAM] int 
  1749 ;;  sign            1    5[COMRAM] unsigned char 
  1750 ;;  counter         1    4[COMRAM] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2    0[COMRAM] int 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1764 ;;Total ram usage:        8 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_PORT_Output
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text8
  1774   002512                     __ptext8:
  1775                           	callstack 0
  1776   002512                     ___awdiv:
  1777                           	callstack 29
  1778   002512  0E00               	movlw	0
  1779   002514  6E06               	movwf	___awdiv@sign^0,c
  1780   002516  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1781   002518  EF92  F012         	goto	u720
  1782   00251C  EF90  F012         	goto	u721
  1783   002520                     u721:
  1784   002520  EF98  F012         	goto	l1256
  1785   002524                     u720:
  1786   002524  6C03               	negf	___awdiv@divisor^0,c
  1787   002526  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1788   002528  B0D8               	btfsc	status,0,c
  1789   00252A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1790   00252C  0E01               	movlw	1
  1791   00252E  6E06               	movwf	___awdiv@sign^0,c
  1792   002530                     l1256:
  1793   002530  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1794   002532  EF9F  F012         	goto	u730
  1795   002536  EF9D  F012         	goto	u731
  1796   00253A                     u731:
  1797   00253A  EFA5  F012         	goto	l1262
  1798   00253E                     u730:
  1799   00253E  6C01               	negf	___awdiv@dividend^0,c
  1800   002540  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1801   002542  B0D8               	btfsc	status,0,c
  1802   002544  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1803   002546  0E01               	movlw	1
  1804   002548  1A06               	xorwf	___awdiv@sign^0,f,c
  1805   00254A                     l1262:
  1806   00254A  0E00               	movlw	0
  1807   00254C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1808   00254E  0E00               	movlw	0
  1809   002550  6E07               	movwf	___awdiv@quotient^0,c
  1810   002552  5003               	movf	___awdiv@divisor^0,w,c
  1811   002554  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1812   002556  B4D8               	btfsc	status,2,c
  1813   002558  EFB0  F012         	goto	u741
  1814   00255C  EFB2  F012         	goto	u740
  1815   002560                     u741:
  1816   002560  EFDA  F012         	goto	l1284
  1817   002564                     u740:
  1818   002564  0E01               	movlw	1
  1819   002566  6E05               	movwf	___awdiv@counter^0,c
  1820   002568  EFBA  F012         	goto	l1270
  1821   00256C                     l1268:
  1822   00256C  90D8               	bcf	status,0,c
  1823   00256E  3603               	rlcf	___awdiv@divisor^0,f,c
  1824   002570  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1825   002572  2A05               	incf	___awdiv@counter^0,f,c
  1826   002574                     l1270:
  1827   002574  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1828   002576  EFBF  F012         	goto	u751
  1829   00257A  EFC1  F012         	goto	u750
  1830   00257E                     u751:
  1831   00257E  EFB6  F012         	goto	l1268
  1832   002582                     u750:
  1833   002582                     l1272:
  1834   002582  90D8               	bcf	status,0,c
  1835   002584  3607               	rlcf	___awdiv@quotient^0,f,c
  1836   002586  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1837   002588  5003               	movf	___awdiv@divisor^0,w,c
  1838   00258A  5C01               	subwf	___awdiv@dividend^0,w,c
  1839   00258C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1840   00258E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1841   002590  A0D8               	btfss	status,0,c
  1842   002592  EFCD  F012         	goto	u761
  1843   002596  EFCF  F012         	goto	u760
  1844   00259A                     u761:
  1845   00259A  EFD4  F012         	goto	l1280
  1846   00259E                     u760:
  1847   00259E  5003               	movf	___awdiv@divisor^0,w,c
  1848   0025A0  5E01               	subwf	___awdiv@dividend^0,f,c
  1849   0025A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1850   0025A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1851   0025A6  8007               	bsf	___awdiv@quotient^0,0,c
  1852   0025A8                     l1280:
  1853   0025A8  90D8               	bcf	status,0,c
  1854   0025AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1855   0025AC  3203               	rrcf	___awdiv@divisor^0,f,c
  1856   0025AE  2E05               	decfsz	___awdiv@counter^0,f,c
  1857   0025B0  EFC1  F012         	goto	l1272
  1858   0025B4                     l1284:
  1859   0025B4  5006               	movf	___awdiv@sign^0,w,c
  1860   0025B6  B4D8               	btfsc	status,2,c
  1861   0025B8  EFE0  F012         	goto	u771
  1862   0025BC  EFE2  F012         	goto	u770
  1863   0025C0                     u771:
  1864   0025C0  EFE6  F012         	goto	l1288
  1865   0025C4                     u770:
  1866   0025C4  6C07               	negf	___awdiv@quotient^0,c
  1867   0025C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1868   0025C8  B0D8               	btfsc	status,0,c
  1869   0025CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1870   0025CC                     l1288:
  1871   0025CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1872   0025D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1873   0025D4  0012               	return		;funcret
  1874   0025D6                     __end_of___awdiv:
  1875                           	callstack 0
  1876                           
  1877                           	psect	smallconst
  1878   002000                     __psmallconst:
  1879                           	callstack 0
  1880   002000  00                 	db	0
  1881   002001  00                 	db	0	; dummy byte at the end
  1882   000000                     
  1883                           	psect	rparam
  1884   000000                     
  1885                           	psect	config
  1886                           
  1887                           ;Config register CONFIG1L @ 0x300000
  1888                           ;	External Oscillator Selection
  1889                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1890                           ;	Reset Oscillator Selection
  1891                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1892   300000                     	org	3145728
  1893   300000  F8                 	db	248
  1894                           
  1895                           ;Config register CONFIG1H @ 0x300001
  1896                           ;	Clock out Enable bit
  1897                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1898                           ;	PRLOCKED One-Way Set Enable bit
  1899                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1900                           ;	Clock Switch Enable bit
  1901                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1902                           ;	Fail-Safe Clock Monitor Enable bit
  1903                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1904   300001                     	org	3145729
  1905   300001  FF                 	db	255
  1906                           
  1907                           ;Config register CONFIG2L @ 0x300002
  1908                           ;	MCLR Enable bit
  1909                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1910                           ;	Power-up timer selection bits
  1911                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1912                           ;	Multi-vector enable bit
  1913                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1914                           ;	IVTLOCK bit One-way set enable bit
  1915                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1916                           ;	Low Power BOR Enable bit
  1917                           ;	LPBOREN = OFF, ULPBOR disabled
  1918                           ;	Brown-out Reset Enable bits
  1919                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1920   300002                     	org	3145730
  1921   300002  FF                 	db	255
  1922                           
  1923                           ;Config register CONFIG2H @ 0x300003
  1924                           ;	Brown-out Reset Voltage Selection bits
  1925                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1926                           ;	ZCD Disable bit
  1927                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1928                           ;	PPSLOCK bit One-Way Set Enable bit
  1929                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1930                           ;	Stack Full/Underflow Reset Enable bit
  1931                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1932                           ;	Debugger Enable bit
  1933                           ;	DEBUG = OFF, Background debugger disabled
  1934                           ;	Extended Instruction Set Enable bit
  1935                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1936   300003                     	org	3145731
  1937   300003  FF                 	db	255
  1938                           
  1939                           ;Config register CONFIG3L @ 0x300004
  1940                           ;	WDT Period selection bits
  1941                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1942                           ;	WDT operating mode
  1943                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1944   300004                     	org	3145732
  1945   300004  9F                 	db	159
  1946                           
  1947                           ;Config register CONFIG3H @ 0x300005
  1948                           ;	WDT Window Select bits
  1949                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1950                           ;	WDT input clock selector
  1951                           ;	WDTCCS = SC, Software Control
  1952   300005                     	org	3145733
  1953   300005  FF                 	db	255
  1954                           
  1955                           ;Config register CONFIG4L @ 0x300006
  1956                           ;	Boot Block Size selection bits
  1957                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1958                           ;	Boot Block enable bit
  1959                           ;	BBEN = OFF, Boot block disabled
  1960                           ;	Storage Area Flash enable bit
  1961                           ;	SAFEN = OFF, SAF disabled
  1962                           ;	Application Block write protection bit
  1963                           ;	WRTAPP = OFF, Application Block not write protected
  1964   300006                     	org	3145734
  1965   300006  FF                 	db	255
  1966                           
  1967                           ;Config register CONFIG4H @ 0x300007
  1968                           ;	Boot Block Write Protection bit
  1969                           ;	WRTB = OFF, Boot Block not write-protected
  1970                           ;	Configuration Register Write Protection bit
  1971                           ;	WRTC = OFF, Configuration registers not write-protected
  1972                           ;	Data EEPROM Write Protection bit
  1973                           ;	WRTD = OFF, Data EEPROM not write-protected
  1974                           ;	SAF Write protection bit
  1975                           ;	WRTSAF = OFF, SAF not Write Protected
  1976                           ;	Low Voltage Programming Enable bit
  1977                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1978   300007                     	org	3145735
  1979   300007  FF                 	db	255
  1980                           
  1981                           ;Config register CONFIG5L @ 0x300008
  1982                           ;	PFM and Data EEPROM Code Protection bit
  1983                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1984   300008                     	org	3145736
  1985   300008  FF                 	db	255
  1986                           
  1987                           ;Config register CONFIG5H @ 0x300009
  1988                           ;	unspecified, using default values
  1989   300009                     	org	3145737
  1990   300009  FF                 	db	255
  1991                           tosu	equ	0x3FFF
  1992                           tosh	equ	0x3FFE
  1993                           tosl	equ	0x3FFD
  1994                           stkptr	equ	0x3FFC
  1995                           pclatu	equ	0x3FFB
  1996                           pclath	equ	0x3FFA
  1997                           pcl	equ	0x3FF9
  1998                           tblptru	equ	0x3FF8
  1999                           tblptrh	equ	0x3FF7
  2000                           tblptrl	equ	0x3FF6
  2001                           tablat	equ	0x3FF5
  2002                           prodh	equ	0x3FF4
  2003                           prodl	equ	0x3FF3
  2004                           indf0	equ	0x3FEF
  2005                           postinc0	equ	0x3FEE
  2006                           postdec0	equ	0x3FED
  2007                           preinc0	equ	0x3FEC
  2008                           plusw0	equ	0x3FEB
  2009                           fsr0h	equ	0x3FEA
  2010                           fsr0l	equ	0x3FE9
  2011                           wreg	equ	0x3FE8
  2012                           indf1	equ	0x3FE7
  2013                           postinc1	equ	0x3FE6
  2014                           postdec1	equ	0x3FE5
  2015                           preinc1	equ	0x3FE4
  2016                           plusw1	equ	0x3FE3
  2017                           fsr1h	equ	0x3FE2
  2018                           fsr1l	equ	0x3FE1
  2019                           bsr	equ	0x3FE0
  2020                           indf2	equ	0x3FDF
  2021                           postinc2	equ	0x3FDE
  2022                           postdec2	equ	0x3FDD
  2023                           preinc2	equ	0x3FDC
  2024                           plusw2	equ	0x3FDB
  2025                           fsr2h	equ	0x3FDA
  2026                           fsr2l	equ	0x3FD9
  2027                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2765
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                         10     8      2    1979
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
     ___wmul
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      17       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      17      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 08 08:47:47 2024

           PORT_Output@i 000D                       l60 231E                       l53 2728  
                     l73 241C                       l85 2510                       l95 2702  
                     l88 26D8                       l89 268E                       l98 279C  
                     l99 27B4          ?_scan_operation 0001             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l102 27F8                      l121 2184  
                    l107 2184                      l140 2284                      l150 22B6  
                    l151 2306                      l152 230C                      l146 229C  
                    l155 287E                      l147 2288                      l149 22AC  
                    l561 2854                      l386 25D4                      l399 2684  
                    l940 230E                      l950 2352                      l942 232E  
                    l960 236C                      l952 2356                      l944 2332  
                    l970 239E                      l962 237A                      l954 2358  
                    l946 2340                      l980 23B8                      l972 23A2  
                    l964 237E                      l956 235A                      l948 2344  
                    l982 23C6                      l974 23A4                      l966 238C  
                    l958 2368                      l990 23DE                      l992 23F0  
                    l984 23CA                      l976 23A6                      l968 2390  
                    l994 2408                      l986 23D8                      l978 23B4  
                    l996 2410                      l988 23DC                      l998 2414  
                    u200 237A                      u201 2376                      u210 238C  
                    u211 2388                      u300 2466                      u220 239E  
                    u301 2462                      u221 239A                      u310 2478  
                    u230 23B4                      u311 2474                      u231 23B0  
                    u320 248A                      u240 23C6                      u160 232E  
                    u400 26C2                      u321 2486                      u241 23C2  
                    u161 232A                      u401 26BE                      u330 249C  
                    u250 23D8                      u170 2340                      u410 26D4  
                    u331 2498                      u251 23D4                      u171 233C  
                    u411 26D0                      u340 24B2                      u260 23F0  
                    u180 2352                      u420 26E8                      u341 24AE  
                    u261 23EC                      u181 234E                      u421 26E4  
                    u350 24C4                      u270 242C                      u190 2368  
                    u351 24C0                      u271 2428                      u191 2364  
                    u360 24D6                      u280 243E                      u361 24D2  
                    u281 243A                      u370 24F2                      u290 2450  
                    u371 24EE                      u291 244C                      u380 269E  
                    u381 269A                      u390 26B0                      u391 26AC  
                    u720 2524                      u800 261C                      u721 2520  
                    u801 2618                      u730 253E                      u810 263A  
                    u731 253A                      u811 2636                      u740 2564  
                    u820 2650                      u900 27E2                      u741 2560  
                    u821 264C                      u901 27DE                      u750 2582  
                    u830 2674                      u910 2028                      u751 257E  
                    u831 2670                      u911 2024                      u760 259E  
                    u920 2084                      u840 2810                      u761 259A  
                    u921 2080                      u841 280C                      u770 25C4  
                    u930 209C                      u850 282C                      u771 25C0  
                    u931 2098                      u851 2828                      u780 25E8  
                    u940 20AC                      u860 2842                      u781 25E4  
                    u941 20A8                      u861 283E                      u790 2602  
                    u950 20C6                      u870 2796                      u791 25FE  
                    u951 20C2                      u871 2792                      u960 20E0  
                    u880 27AE                      u961 20DC                      u881 27AA  
                    u970 20FA                      u890 27C6                      u971 20F6  
                    u891 27C2                      u980 2114                      u981 2110  
                    u990 212E                      u991 212A             ___awmod@sign 0006  
                    wreg 3FE8                     l1000 242C                     l1010 2454  
                   l1002 2430                     l1020 2478                     l1012 2456  
                   l1004 243E                     l1030 24A0                     l1022 247C  
                   l1014 2458                     l1006 2442                     l1040 24C4  
                   l1032 24A2                     l1024 248A                     l1016 2466  
                   l1008 2450                     l1050 24F2                     l1042 24C8  
                   l1034 24A4                     l1026 248E                     l1018 246A  
                   l1300 25F4                     l1052 24F6                     l1044 24D6  
                   l1036 24B2                     l1028 249C                     l1060 269E  
                   l1310 262C                     l1302 2602                     l1054 250E  
                   l1046 24DA                     l1038 24B6                     l1070 26C6  
                   l1062 26A2                     l1312 263A                     l1320 2664  
                   l1304 260A                     l1400 20E0                     l1048 24E0  
                   l1072 26D4                     l1064 26B0                     l1250 2516  
                   l1322 2674                     l1314 2650                     l1306 261C  
                   l1242 2856                     l1410 211C                     l1402 20E8  
                   l1330 2800                     l1074 26E8                     l1066 26B4  
                   l1058 2686                     l1260 2546                     l1252 2524  
                   l1324 267C                     l1316 2658                     l1308 2624  
                   l1244 2876                     l1420 2162                     l1412 212E  
                   l1404 20FA                     l1340 282C                     l1332 2810  
                   l1076 2700                     l1068 26C2                     l1500 2744  
                   l1270 2574                     l1262 254A                     l1254 252C  
                   l1318 265E                     l1430 21AC                     l1422 216A  
                   l1414 2136                     l1406 2102                     l1342 2842  
                   l1334 2818                     l1350 2852                     l1510 2756  
                   l1502 2746                     l1280 25A8                     l1272 2582  
                   l1264 2552                     l1256 2530                     l1248 2512  
                   l1440 21E8                     l1432 21B4                     l1424 217C  
                   l1416 2148                     l1408 2114                     l1344 2846  
                   l1336 281C                     l1328 27FC                     l1360 27AE  
                   l1512 2758                     l1504 274C                     l1282 25AE  
                   l1274 2588                     l1266 2564                     l1258 253E  
                   l1450 222E                     l1442 21FA                     l1434 21C6  
                   l1426 2194                     l1418 2150                     l1346 2848  
                   l1338 281E                     l1362 27C6                     l1354 2782  
                   l1514 276A                     l1506 2752                     l1276 259E  
                   l1268 256C                     l1284 25B4                     l1292 25D6  
                   l1460 226A                     l1452 2236                     l1444 2202  
                   l1436 21CE                     l1428 219C                     l1380 2044  
                   l1372 2002                     l1348 284C                     l1364 27D0  
                   l1356 2786                     l1508 2754                     l1286 25C4  
                   l1278 25A6                     l1294 25DA                     l1462 227C  
                   l1454 2248                     l1446 2214                     l1438 21E0  
                   l1390 209C                     l1382 205C                     l1374 201A  
                   l1366 27E2                     l1358 2796                     l1288 25CC  
                   l1296 25E8                     l1480 22E4                     l1472 22BE  
                   l1464 2298                     l1456 2250                     l1448 221C  
                   l1392 20AC                     l1384 2074                     l1376 2028  
                   l1368 27EE                     l1298 25F0                     l1482 22E6  
                   l1474 22CC                     l1466 22AE                     l1458 2262  
                   l1394 20B4                     l1386 2084                     l1378 2042  
                   l1490 2706                     l1484 2308                     l1476 22CE  
                   l1396 20C6                     l1388 208C                     l1492 2724  
                   l1478 22D0                     l1398 20CE                     l1494 2726  
                   l1496 273C                     l1488 2704                     l1498 2742  
                   u1000 2148                     u1001 2144                     u1010 2162  
                   u1011 215E                     u1100 2248                     u1020 217C  
                   u1101 2244                     u1021 2178                     u1110 2262  
                   u1030 2194                     u1111 225E                     u1031 2190  
                   u1120 227C                     u1040 21AC                     u1121 2278  
                   u1041 21A8                     u1130 2298                     u1050 21C6  
                   u1131 2294                     u1051 21C2                     u1140 22AC  
                   u1060 21E0                     u1141 22A8                     u1061 21DC  
                   u1150 2306                     u1070 21FA                     u1151 2302  
                   u1207 22DC                     u1071 21F6                     u1080 2214  
                   u1081 2210                     u1090 222E                     u1091 222A  
                   u1167 26F2                     u1177 23FA                     u1187 2500  
                   u1197 22C4         PORT_Output@enter 000C                     _main 2704  
                   prodh 3FF4                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 25D6  
        __end_of___lbdiv 2856          __end_of___awmod 2686          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTB 3FCB                    _PORTC 3FCC  
                  _PORTD 3FCD                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISC 3FC4                    _TRISD 3FC5        PORT_Output@answer 0009  
                  status 3FD8          ___lbdiv@divisor 0001          ___lbdiv@counter 0003  
           ?_scan_number 0001          __initialization 2880             __end_of_main 2780  
                 ??_main 0013            __activetblptr 0000         ___awdiv@dividend 0001  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELC 3A60  
                 _ANSELD 3A70                   ___wmul 2856                ??___awdiv 0005  
              ??___lbdiv 0002                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 0001          ___awmod@counter 0005  
           __mediumconst 0000             ?_PORT_Output 0009         ___lbdiv@dividend 0002  
             __accesstop 0060  __end_of__initialization 2880            ___rparam_used 0001  
       ??_scan_operation 0001           __pcstackCOMRAM 0001         scan_number@count 0004  
       scan_number@input 0006         ___lbdiv@quotient 0004              _X_Input_REG 0017  
            _Y_Input_REG 0016               __pnvCOMRAM 0013                  ?___wmul 0001  
      __end_of_calculate 27FA      PORT_Output@display1 000F      PORT_Output@display2 0010  
                __Hparam 0000               calculate@x 0008               calculate@y 0005  
                __Lparam 0000                  ___awdiv 2512                  ___lbdiv 27FA  
                ___awmod 25D6             __psmallconst 2000                  __pcinit 2880  
                __ramtop 2000                  __ptext0 2704                  __ptext1 2686  
                __ptext2 230E                  __ptext3 2780                  __ptext4 27FA  
                __ptext5 2002                  __ptext6 2856                  __ptext7 25D6  
                __ptext8 2512         ___awmod@dividend 0001     end_of_initialization 2880  
              _PORTAbits 3FCA                _PORTBbits 3FCB                _PORTCbits 3FCC  
         __end_of___wmul 2880            _Operation_REG 0015        scan_number@button 0003  
    start_initialization 2880        scan_number@output 0005                 ??___wmul 0005  
            _calculation 0014    PORT_Output@second_dig 0011                _calculate 2780  
          ??_scan_number 0001                 ?___awdiv 0001                 ?___lbdiv 0001  
               ?___awmod 0001              __smallconst 2000           ___wmul@product 0005  
             ?_calculate 0005          calculate@output 0007      __end_of_scan_number 2512  
      ___wmul@multiplier 0001            ??_PORT_Output 000B     PORT_Output@first_dig 0012  
            calculate@op 0006                 __Hrparam 0000                 __Lrparam 0000  
    __end_of_PORT_Output 230E              ??_calculate 0007              _scan_number 230E  
               isa$xinst 0000           _scan_operation 2686       _Display_Result_REG 0013  
   scan_operation@op_key 0003   __end_of_scan_operation 2704              _PORT_Output 2002  
