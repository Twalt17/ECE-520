

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 13:12:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	nvCOMRAM
    57   00000D                     __pnvCOMRAM:
    58                           	callstack 0
    59   00000D                     _calculation:
    60                           	callstack 0
    61   00000D                     	ds	1
    62   00000E                     _Operation_REG:
    63                           	callstack 0
    64   00000E                     	ds	1
    65   00000F                     _Y_Input_REG:
    66                           	callstack 0
    67   00000F                     	ds	1
    68   000010                     _X_Input_REG:
    69                           	callstack 0
    70   000010                     	ds	1
    71   000000                     _ANSELA	set	14912
    72   000000                     _TRISA	set	16322
    73   000000                     _TRISD	set	16325
    74   000000                     _TRISB	set	16323
    75   000000                     _ANSELB	set	14928
    76   000000                     _ANSELD	set	14960
    77   000000                     _PORTAbits	set	16330
    78   000000                     _PORTBbits	set	16331
    79   000000                     _PORTD	set	16333
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   00251A                     __pcinit:
    85                           	callstack 0
    86   00251A                     start_initialization:
    87                           	callstack 0
    88   00251A                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (1 bytes)
    92   00251A  6A11               	clrf	__pbssCOMRAM& (0+255),c
    93   00251C                     end_of_initialization:
    94                           	callstack 0
    95   00251C                     __end_of__initialization:
    96                           	callstack 0
    97   00251C  0100               	movlb	0
    98   00251E  EF6B  F012         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000011                     __pbssCOMRAM:
   102                           	callstack 0
   103   000011                     _Display_Result_REG:
   104                           	callstack 0
   105   000011                     	ds	1
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     ??_scan_number:
   111   000001                     ??_scan_operation:
   112   000001                     ?___awdiv:
   113                           	callstack 0
   114   000001                     ?___awmod:
   115                           	callstack 0
   116   000001                     ___lbdiv@divisor:
   117                           	callstack 0
   118   000001                     ___awdiv@dividend:
   119                           	callstack 0
   120   000001                     ___awmod@dividend:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124   000001                     	ds	1
   125   000002                     ___lbdiv@dividend:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x1
   129   000002                     	ds	1
   130   000003                     scan_number@button:
   131                           	callstack 0
   132   000003                     scan_operation@op_key:
   133                           	callstack 0
   134   000003                     ___lbdiv@counter:
   135                           	callstack 0
   136   000003                     ___awdiv@divisor:
   137                           	callstack 0
   138   000003                     ___awmod@divisor:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x2
   142   000003                     	ds	1
   143   000004                     scan_number@count:
   144                           	callstack 0
   145   000004                     ___lbdiv@quotient:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x3
   149   000004                     	ds	1
   150   000005                     scan_number@output:
   151                           	callstack 0
   152   000005                     calculate@y:
   153                           	callstack 0
   154   000005                     ___awdiv@counter:
   155                           	callstack 0
   156   000005                     ___awmod@counter:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x4
   160   000005                     	ds	1
   161   000006                     scan_number@input:
   162                           	callstack 0
   163   000006                     calculate@op:
   164                           	callstack 0
   165   000006                     ___awdiv@sign:
   166                           	callstack 0
   167   000006                     ___awmod@sign:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x5
   171   000006                     	ds	1
   172   000007                     calculate@x:
   173                           	callstack 0
   174   000007                     ___awdiv@quotient:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178   000007                     	ds	2
   179   000009                     PORT_Output@i:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x8
   183   000009                     	ds	1
   184   00000A                     PORT_Output@first_dig:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x9
   188   00000A                     	ds	1
   189   00000B                     PORT_Output@second_dig:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0xA
   193   00000B                     	ds	1
   194   00000C                     PORT_Output@answer:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0xB
   198   00000C                     	ds	1
   199   00000D                     
   200                           ; 1 bytes @ 0xC
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 25 in file "main.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called: 2
   226 ;; This function calls:
   227 ;;		_PORT_Output
   228 ;;		_calculate
   229 ;;		_scan_number
   230 ;;		_scan_operation
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text0
   237   0024D6                     __ptext0:
   238                           	callstack 0
   239   0024D6                     _main:
   240                           	callstack 29
   241   0024D6                     
   242                           ;main.c: 26:     TRISA = 0xFF;
   243   0024D6  68C2               	setf	194,c	;volatile
   244   0024D8                     
   245                           ;main.c: 27:     ANSELA = 0;
   246   0024D8  0E00               	movlw	0
   247   0024DA  013A               	movlb	58	; () banked
   248   0024DC  6F40               	movwf	64,b	;volatile
   249                           
   250                           ;main.c: 28:     TRISB = 0;
   251   0024DE  0E00               	movlw	0
   252   0024E0  6EC3               	movwf	195,c	;volatile
   253                           
   254                           ;main.c: 29:     ANSELB = 0;
   255   0024E2  0E00               	movlw	0
   256   0024E4  6F50               	movwf	80,b	;volatile
   257                           
   258                           ;main.c: 30:     ANSELD = 0;
   259   0024E6  0E00               	movlw	0
   260   0024E8  6F70               	movwf	112,b	;volatile
   261                           
   262                           ;main.c: 31:     TRISD = 0;
   263   0024EA  0E00               	movlw	0
   264   0024EC  6EC5               	movwf	197,c	;volatile
   265   0024EE                     
   266                           ; BSR set to: 58
   267                           ;main.c: 33:     X_Input_REG = scan_number();
   268   0024EE  EC01  F010         	call	_scan_number	;wreg free
   269   0024F2  6E10               	movwf	_X_Input_REG^0,c
   270   0024F4                     
   271                           ;main.c: 34:     Operation_REG = scan_operation();
   272   0024F4  ECA9  F011         	call	_scan_operation	;wreg free
   273   0024F8  6E0E               	movwf	_Operation_REG^0,c
   274   0024FA                     
   275                           ;main.c: 35:     Y_Input_REG = scan_number();
   276   0024FA  EC01  F010         	call	_scan_number	;wreg free
   277   0024FE  6E0F               	movwf	_Y_Input_REG^0,c
   278   002500                     
   279                           ;main.c: 36:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   280   002500  C00F  F005         	movff	_Y_Input_REG,calculate@y
   281   002504  C00E  F006         	movff	_Operation_REG,calculate@op
   282   002508  5010               	movf	_X_Input_REG^0,w,c
   283   00250A  EC41  F012         	call	_calculate
   284   00250E  6E0D               	movwf	_calculation^0,c
   285   002510                     
   286                           ;main.c: 37:     PORT_Output(calculation);
   287   002510  500D               	movf	_calculation^0,w,c
   288   002512  EC16  F012         	call	_PORT_Output
   289   002516  EFFE  F0FF         	goto	start
   290   00251A                     __end_of_main:
   291                           	callstack 0
   292                           
   293 ;; *************** function _scan_operation *****************
   294 ;; Defined at:
   295 ;;		line 99 in file "main.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  op_key          1    2[COMRAM] unsigned char 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      unsigned char 
   302 ;; Registers used:
   303 ;;		wreg, status,2
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   312 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   313 ;;Total ram usage:        3 bytes
   314 ;; Hardware stack levels used: 1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text1
   323   002352                     __ptext1:
   324                           	callstack 0
   325   002352                     _scan_operation:
   326                           	callstack 30
   327   002352                     
   328                           ;main.c: 100:     unsigned char op_key = 0;
   329   002352  0E00               	movlw	0
   330   002354  6E03               	movwf	scan_operation@op_key^0,c
   331                           
   332                           ;main.c: 101:     while (op_key ==0) {
   333   002356  EFD2  F011         	goto	l73
   334   00235A                     l74:
   335                           
   336                           ;main.c: 102:      PORTBbits.RB0 = 1;
   337   00235A  80CB               	bsf	203,0,c	;volatile
   338                           
   339                           ;main.c: 103:         if(PORTAbits.RA0 == 1) op_key = 1;
   340   00235C  A0CA               	btfss	202,0,c	;volatile
   341   00235E  EFB3  F011         	goto	u361
   342   002362  EFB5  F011         	goto	u360
   343   002366                     u361:
   344   002366  EFB7  F011         	goto	l989
   345   00236A                     u360:
   346   00236A  0E01               	movlw	1
   347   00236C  6E03               	movwf	scan_operation@op_key^0,c
   348   00236E                     l989:
   349                           
   350                           ;main.c: 104:         if(PORTAbits.RA1 == 1) op_key = 2;
   351   00236E  A2CA               	btfss	202,1,c	;volatile
   352   002370  EFBC  F011         	goto	u371
   353   002374  EFBE  F011         	goto	u370
   354   002378                     u371:
   355   002378  EFC0  F011         	goto	l993
   356   00237C                     u370:
   357   00237C  0E02               	movlw	2
   358   00237E  6E03               	movwf	scan_operation@op_key^0,c
   359   002380                     l993:
   360                           
   361                           ;main.c: 105:         if(PORTAbits.RA2 == 1) op_key = 3;
   362   002380  A4CA               	btfss	202,2,c	;volatile
   363   002382  EFC5  F011         	goto	u381
   364   002386  EFC7  F011         	goto	u380
   365   00238A                     u381:
   366   00238A  EFC9  F011         	goto	l997
   367   00238E                     u380:
   368   00238E  0E03               	movlw	3
   369   002390  6E03               	movwf	scan_operation@op_key^0,c
   370   002392                     l997:
   371                           
   372                           ;main.c: 106:         if(PORTAbits.RA3 == 1) op_key = 4;
   373   002392  A6CA               	btfss	202,3,c	;volatile
   374   002394  EFCE  F011         	goto	u391
   375   002398  EFD0  F011         	goto	u390
   376   00239C                     u391:
   377   00239C  EFD2  F011         	goto	l73
   378   0023A0                     u390:
   379   0023A0  0E04               	movlw	4
   380   0023A2  6E03               	movwf	scan_operation@op_key^0,c
   381   0023A4                     l73:
   382                           
   383                           ;main.c: 101:     while (op_key ==0) {
   384   0023A4  5003               	movf	scan_operation@op_key^0,w,c
   385   0023A6  B4D8               	btfsc	status,2,c
   386   0023A8  EFD8  F011         	goto	u401
   387   0023AC  EFDA  F011         	goto	u400
   388   0023B0                     u401:
   389   0023B0  EFAD  F011         	goto	l74
   390   0023B4                     u400:
   391   0023B4                     
   392                           ;main.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
   393   0023B4  0E03               	movlw	3
   394   0023B6  6E02               	movwf	(??_scan_operation+1)^0,c
   395   0023B8  0E08               	movlw	8
   396   0023BA  6E01               	movwf	??_scan_operation^0,c
   397   0023BC  0E77               	movlw	119
   398   0023BE                     u647:
   399   0023BE  2EE8               	decfsz	wreg,f,c
   400   0023C0  D7FE               	bra	u647
   401   0023C2  2E01               	decfsz	??_scan_operation^0,f,c
   402   0023C4  D7FC               	bra	u647
   403   0023C6  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   404   0023C8  D7FA               	bra	u647
   405   0023CA  0000               	nop	
   406   0023CC                     
   407                           ;main.c: 109:         return op_key;
   408   0023CC  5003               	movf	scan_operation@op_key^0,w,c
   409   0023CE  0012               	return		;funcret
   410   0023D0                     __end_of_scan_operation:
   411                           	callstack 0
   412                           
   413 ;; *************** function _scan_number *****************
   414 ;; Defined at:
   415 ;;		line 41 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  input           1    5[COMRAM] unsigned char 
   420 ;;  output          1    4[COMRAM] unsigned char 
   421 ;;  count           1    3[COMRAM] unsigned char 
   422 ;;  button          1    2[COMRAM] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      unsigned char 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, prodl, prodh
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   436 ;;Total ram usage:        6 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text2
   446   002002                     __ptext2:
   447                           	callstack 0
   448   002002                     _scan_number:
   449                           	callstack 30
   450   002002                     
   451                           ;main.c: 42:     unsigned char input = 10;
   452   002002  0E0A               	movlw	10
   453   002004  6E06               	movwf	scan_number@input^0,c
   454                           
   455                           ;main.c: 44:     unsigned char button = 0;
   456   002006  0E00               	movlw	0
   457   002008  6E03               	movwf	scan_number@button^0,c
   458                           
   459                           ;main.c: 45:     unsigned char count = 2;
   460   00200A  0E02               	movlw	2
   461   00200C  6E04               	movwf	scan_number@count^0,c
   462                           
   463                           ;main.c: 47:     while (input == 10)
   464   00200E  EF60  F010         	goto	l921
   465   002012                     l47:
   466                           
   467                           ;main.c: 48:     {;main.c: 49:         PORTBbits.RB0 = 1;
   468   002012  80CB               	bsf	203,0,c	;volatile
   469                           
   470                           ;main.c: 50:         if (PORTAbits.RA0 == 1)input = 1;
   471   002014  A0CA               	btfss	202,0,c	;volatile
   472   002016  EF0F  F010         	goto	u161
   473   00201A  EF11  F010         	goto	u160
   474   00201E                     u161:
   475   00201E  EF13  F010         	goto	l879
   476   002022                     u160:
   477   002022  0E01               	movlw	1
   478   002024  6E06               	movwf	scan_number@input^0,c
   479   002026                     l879:
   480                           
   481                           ;main.c: 51:         if(PORTAbits.RA1 == 1) input = 2;
   482   002026  A2CA               	btfss	202,1,c	;volatile
   483   002028  EF18  F010         	goto	u171
   484   00202C  EF1A  F010         	goto	u170
   485   002030                     u171:
   486   002030  EF1C  F010         	goto	l883
   487   002034                     u170:
   488   002034  0E02               	movlw	2
   489   002036  6E06               	movwf	scan_number@input^0,c
   490   002038                     l883:
   491                           
   492                           ;main.c: 52:         if(PORTAbits.RA2 == 1) input = 3;
   493   002038  A4CA               	btfss	202,2,c	;volatile
   494   00203A  EF21  F010         	goto	u181
   495   00203E  EF23  F010         	goto	u180
   496   002042                     u181:
   497   002042  EF25  F010         	goto	l887
   498   002046                     u180:
   499   002046  0E03               	movlw	3
   500   002048  6E06               	movwf	scan_number@input^0,c
   501   00204A                     l887:
   502                           
   503                           ;main.c: 53:         PORTBbits.RB0 = 0;
   504   00204A  90CB               	bcf	203,0,c	;volatile
   505   00204C                     
   506                           ;main.c: 55:          PORTBbits.RB1 = 1;
   507   00204C  82CB               	bsf	203,1,c	;volatile
   508   00204E                     
   509                           ;main.c: 56:         if (PORTAbits.RA0 == 1)input = 4;
   510   00204E  A0CA               	btfss	202,0,c	;volatile
   511   002050  EF2C  F010         	goto	u191
   512   002054  EF2E  F010         	goto	u190
   513   002058                     u191:
   514   002058  EF30  F010         	goto	l895
   515   00205C                     u190:
   516   00205C  0E04               	movlw	4
   517   00205E  6E06               	movwf	scan_number@input^0,c
   518   002060                     l895:
   519                           
   520                           ;main.c: 57:         if(PORTAbits.RA1 == 1) input = 5;
   521   002060  A2CA               	btfss	202,1,c	;volatile
   522   002062  EF35  F010         	goto	u201
   523   002066  EF37  F010         	goto	u200
   524   00206A                     u201:
   525   00206A  EF39  F010         	goto	l899
   526   00206E                     u200:
   527   00206E  0E05               	movlw	5
   528   002070  6E06               	movwf	scan_number@input^0,c
   529   002072                     l899:
   530                           
   531                           ;main.c: 58:         if(PORTAbits.RA2 == 1) input = 6;
   532   002072  A4CA               	btfss	202,2,c	;volatile
   533   002074  EF3E  F010         	goto	u211
   534   002078  EF40  F010         	goto	u210
   535   00207C                     u211:
   536   00207C  EF42  F010         	goto	l903
   537   002080                     u210:
   538   002080  0E06               	movlw	6
   539   002082  6E06               	movwf	scan_number@input^0,c
   540   002084                     l903:
   541                           
   542                           ;main.c: 59:         PORTBbits.RB1 = 0;
   543   002084  92CB               	bcf	203,1,c	;volatile
   544   002086                     
   545                           ;main.c: 61:          PORTBbits.RB2 = 1;
   546   002086  84CB               	bsf	203,2,c	;volatile
   547   002088                     
   548                           ;main.c: 62:         if (PORTAbits.RA0 == 1)input = 7;
   549   002088  A0CA               	btfss	202,0,c	;volatile
   550   00208A  EF49  F010         	goto	u221
   551   00208E  EF4B  F010         	goto	u220
   552   002092                     u221:
   553   002092  EF4D  F010         	goto	l911
   554   002096                     u220:
   555   002096  0E07               	movlw	7
   556   002098  6E06               	movwf	scan_number@input^0,c
   557   00209A                     l911:
   558                           
   559                           ;main.c: 63:         if(PORTAbits.RA1 == 1) input = 8;
   560   00209A  A2CA               	btfss	202,1,c	;volatile
   561   00209C  EF52  F010         	goto	u231
   562   0020A0  EF54  F010         	goto	u230
   563   0020A4                     u231:
   564   0020A4  EF56  F010         	goto	l915
   565   0020A8                     u230:
   566   0020A8  0E08               	movlw	8
   567   0020AA  6E06               	movwf	scan_number@input^0,c
   568   0020AC                     l915:
   569                           
   570                           ;main.c: 64:         if(PORTAbits.RA2 == 1) input = 9;
   571   0020AC  A4CA               	btfss	202,2,c	;volatile
   572   0020AE  EF5B  F010         	goto	u241
   573   0020B2  EF5D  F010         	goto	u240
   574   0020B6                     u241:
   575   0020B6  EF5F  F010         	goto	l919
   576   0020BA                     u240:
   577   0020BA  0E09               	movlw	9
   578   0020BC  6E06               	movwf	scan_number@input^0,c
   579   0020BE                     l919:
   580                           
   581                           ;main.c: 65:         PORTBbits.RB2 = 0;
   582   0020BE  94CB               	bcf	203,2,c	;volatile
   583   0020C0                     l921:
   584                           
   585                           ;main.c: 47:     while (input == 10)
   586   0020C0  0E0A               	movlw	10
   587   0020C2  1806               	xorwf	scan_number@input^0,w,c
   588   0020C4  B4D8               	btfsc	status,2,c
   589   0020C6  EF67  F010         	goto	u251
   590   0020CA  EF69  F010         	goto	u250
   591   0020CE                     u251:
   592   0020CE  EF09  F010         	goto	l47
   593   0020D2                     u250:
   594   0020D2                     
   595                           ;main.c: 68:     _delay((unsigned long)((100)*(8000000/4000.0)));
   596   0020D2  0E02               	movlw	2
   597   0020D4  6E02               	movwf	(??_scan_number+1)^0,c
   598   0020D6  0E04               	movlw	4
   599   0020D8  6E01               	movwf	??_scan_number^0,c
   600   0020DA  0EBA               	movlw	186
   601   0020DC                     u657:
   602   0020DC  2EE8               	decfsz	wreg,f,c
   603   0020DE  D7FE               	bra	u657
   604   0020E0  2E01               	decfsz	??_scan_number^0,f,c
   605   0020E2  D7FC               	bra	u657
   606   0020E4  2E02               	decfsz	(??_scan_number+1)^0,f,c
   607   0020E6  D7FA               	bra	u657
   608   0020E8  D000               	nop2	
   609   0020EA                     
   610                           ;main.c: 70:     input *=10;
   611   0020EA  0E0A               	movlw	10
   612   0020EC  0206               	mulwf	scan_number@input^0,c
   613   0020EE  50F3               	movf	prodl,w,c
   614   0020F0  6E06               	movwf	scan_number@input^0,c
   615   0020F2                     
   616                           ;main.c: 71:     output = input;
   617   0020F2  C006  F005         	movff	scan_number@input,scan_number@output
   618   0020F6                     
   619                           ;main.c: 73:     input = 10;
   620   0020F6  0E0A               	movlw	10
   621   0020F8  6E06               	movwf	scan_number@input^0,c
   622                           
   623                           ;main.c: 74:     while (input == 10)
   624   0020FA  EFD6  F010         	goto	l975
   625   0020FE                     l59:
   626                           
   627                           ;main.c: 75:     {;main.c: 76:         PORTBbits.RB0 = 1;
   628   0020FE  80CB               	bsf	203,0,c	;volatile
   629                           
   630                           ;main.c: 77:         if (PORTAbits.RA0 == 1)input = 1;
   631   002100  A0CA               	btfss	202,0,c	;volatile
   632   002102  EF85  F010         	goto	u261
   633   002106  EF87  F010         	goto	u260
   634   00210A                     u261:
   635   00210A  EF89  F010         	goto	l933
   636   00210E                     u260:
   637   00210E  0E01               	movlw	1
   638   002110  6E06               	movwf	scan_number@input^0,c
   639   002112                     l933:
   640                           
   641                           ;main.c: 78:         if(PORTAbits.RA1 == 1) input = 2;
   642   002112  A2CA               	btfss	202,1,c	;volatile
   643   002114  EF8E  F010         	goto	u271
   644   002118  EF90  F010         	goto	u270
   645   00211C                     u271:
   646   00211C  EF92  F010         	goto	l937
   647   002120                     u270:
   648   002120  0E02               	movlw	2
   649   002122  6E06               	movwf	scan_number@input^0,c
   650   002124                     l937:
   651                           
   652                           ;main.c: 79:         if(PORTAbits.RA2 == 1) input = 3;
   653   002124  A4CA               	btfss	202,2,c	;volatile
   654   002126  EF97  F010         	goto	u281
   655   00212A  EF99  F010         	goto	u280
   656   00212E                     u281:
   657   00212E  EF9B  F010         	goto	l941
   658   002132                     u280:
   659   002132  0E03               	movlw	3
   660   002134  6E06               	movwf	scan_number@input^0,c
   661   002136                     l941:
   662                           
   663                           ;main.c: 80:         PORTBbits.RB0 = 0;
   664   002136  90CB               	bcf	203,0,c	;volatile
   665   002138                     
   666                           ;main.c: 82:          PORTBbits.RB1 = 1;
   667   002138  82CB               	bsf	203,1,c	;volatile
   668   00213A                     
   669                           ;main.c: 83:         if (PORTAbits.RA0 == 1)input = 4;
   670   00213A  A0CA               	btfss	202,0,c	;volatile
   671   00213C  EFA2  F010         	goto	u291
   672   002140  EFA4  F010         	goto	u290
   673   002144                     u291:
   674   002144  EFA6  F010         	goto	l949
   675   002148                     u290:
   676   002148  0E04               	movlw	4
   677   00214A  6E06               	movwf	scan_number@input^0,c
   678   00214C                     l949:
   679                           
   680                           ;main.c: 84:         if(PORTAbits.RA1 == 1) input = 5;
   681   00214C  A2CA               	btfss	202,1,c	;volatile
   682   00214E  EFAB  F010         	goto	u301
   683   002152  EFAD  F010         	goto	u300
   684   002156                     u301:
   685   002156  EFAF  F010         	goto	l953
   686   00215A                     u300:
   687   00215A  0E05               	movlw	5
   688   00215C  6E06               	movwf	scan_number@input^0,c
   689   00215E                     l953:
   690                           
   691                           ;main.c: 85:         if(PORTAbits.RA2 == 1) input = 6;
   692   00215E  A4CA               	btfss	202,2,c	;volatile
   693   002160  EFB4  F010         	goto	u311
   694   002164  EFB6  F010         	goto	u310
   695   002168                     u311:
   696   002168  EFB8  F010         	goto	l957
   697   00216C                     u310:
   698   00216C  0E06               	movlw	6
   699   00216E  6E06               	movwf	scan_number@input^0,c
   700   002170                     l957:
   701                           
   702                           ;main.c: 86:         PORTBbits.RB1 = 0;
   703   002170  92CB               	bcf	203,1,c	;volatile
   704   002172                     
   705                           ;main.c: 88:          PORTBbits.RB2 = 1;
   706   002172  84CB               	bsf	203,2,c	;volatile
   707   002174                     
   708                           ;main.c: 89:         if (PORTAbits.RA0 == 1)input = 7;
   709   002174  A0CA               	btfss	202,0,c	;volatile
   710   002176  EFBF  F010         	goto	u321
   711   00217A  EFC1  F010         	goto	u320
   712   00217E                     u321:
   713   00217E  EFC3  F010         	goto	l965
   714   002182                     u320:
   715   002182  0E07               	movlw	7
   716   002184  6E06               	movwf	scan_number@input^0,c
   717   002186                     l965:
   718                           
   719                           ;main.c: 90:         if(PORTAbits.RA1 == 1) input = 8;
   720   002186  A2CA               	btfss	202,1,c	;volatile
   721   002188  EFC8  F010         	goto	u331
   722   00218C  EFCA  F010         	goto	u330
   723   002190                     u331:
   724   002190  EFCC  F010         	goto	l969
   725   002194                     u330:
   726   002194  0E08               	movlw	8
   727   002196  6E06               	movwf	scan_number@input^0,c
   728   002198                     l969:
   729                           
   730                           ;main.c: 91:         if(PORTAbits.RA2 == 1) input = 9;
   731   002198  A4CA               	btfss	202,2,c	;volatile
   732   00219A  EFD1  F010         	goto	u341
   733   00219E  EFD3  F010         	goto	u340
   734   0021A2                     u341:
   735   0021A2  EFD5  F010         	goto	l973
   736   0021A6                     u340:
   737   0021A6  0E09               	movlw	9
   738   0021A8  6E06               	movwf	scan_number@input^0,c
   739   0021AA                     l973:
   740                           
   741                           ;main.c: 92:         PORTBbits.RB2 = 0;
   742   0021AA  94CB               	bcf	203,2,c	;volatile
   743   0021AC                     l975:
   744                           
   745                           ;main.c: 74:     while (input == 10)
   746   0021AC  0E0A               	movlw	10
   747   0021AE  1806               	xorwf	scan_number@input^0,w,c
   748   0021B0  B4D8               	btfsc	status,2,c
   749   0021B2  EFDD  F010         	goto	u351
   750   0021B6  EFDF  F010         	goto	u350
   751   0021BA                     u351:
   752   0021BA  EF7F  F010         	goto	l59
   753   0021BE                     u350:
   754   0021BE                     
   755                           ;main.c: 94:     output += input;
   756   0021BE  5006               	movf	scan_number@input^0,w,c
   757   0021C0  2605               	addwf	scan_number@output^0,f,c
   758   0021C2                     
   759                           ;main.c: 95:     _delay((unsigned long)((100)*(8000000/4000.0)));
   760   0021C2  0E02               	movlw	2
   761   0021C4  6E02               	movwf	(??_scan_number+1)^0,c
   762   0021C6  0E04               	movlw	4
   763   0021C8  6E01               	movwf	??_scan_number^0,c
   764   0021CA  0EBA               	movlw	186
   765   0021CC                     u667:
   766   0021CC  2EE8               	decfsz	wreg,f,c
   767   0021CE  D7FE               	bra	u667
   768   0021D0  2E01               	decfsz	??_scan_number^0,f,c
   769   0021D2  D7FC               	bra	u667
   770   0021D4  2E02               	decfsz	(??_scan_number+1)^0,f,c
   771   0021D6  D7FA               	bra	u667
   772   0021D8  D000               	nop2	
   773   0021DA                     
   774                           ;main.c: 96:     return output;
   775   0021DA  5005               	movf	scan_number@output^0,w,c
   776   0021DC  0012               	return		;funcret
   777   0021DE                     __end_of_scan_number:
   778                           	callstack 0
   779                           
   780 ;; *************** function _calculate *****************
   781 ;; Defined at:
   782 ;;		line 112 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  x               1    wreg     unsigned char 
   785 ;;  y               1    4[COMRAM] unsigned char 
   786 ;;  op              1    5[COMRAM] unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  x               1    6[COMRAM] unsigned char 
   789 ;;  output          1    0        unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      unsigned char 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   802 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   803 ;;Total ram usage:        3 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 1
   806 ;; This function calls:
   807 ;;		___lbdiv
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814   002482                     __ptext3:
   815                           	callstack 0
   816   002482                     _calculate:
   817                           	callstack 29
   818                           
   819                           ;incstack = 0
   820                           ;calculate@x stored from wreg
   821   002482  6E07               	movwf	calculate@x^0,c
   822   002484                     
   823                           ;main.c: 114:     if(op == 1)
   824   002484  0406               	decf	calculate@op^0,w,c
   825   002486  A4D8               	btfss	status,2,c
   826   002488  EF48  F012         	goto	u601
   827   00248C  EF4A  F012         	goto	u600
   828   002490                     u601:
   829   002490  EF4A  F012         	goto	l83
   830   002494                     u600:
   831   002494                     l83:
   832                           
   833                           ;main.c: 116:     if(op ==2)
   834   002494  0E02               	movlw	2
   835   002496  1806               	xorwf	calculate@op^0,w,c
   836   002498  A4D8               	btfss	status,2,c
   837   00249A  EF51  F012         	goto	u611
   838   00249E  EF53  F012         	goto	u610
   839   0024A2                     u611:
   840   0024A2  EF53  F012         	goto	l84
   841   0024A6                     u610:
   842   0024A6                     l84:
   843                           
   844                           ;main.c: 118:     if(op == 3)
   845   0024A6  0E03               	movlw	3
   846   0024A8  1806               	xorwf	calculate@op^0,w,c
   847   0024AA  A4D8               	btfss	status,2,c
   848   0024AC  EF5A  F012         	goto	u621
   849   0024B0  EF5C  F012         	goto	u620
   850   0024B4                     u621:
   851   0024B4  EF5C  F012         	goto	l1167
   852   0024B8                     u620:
   853   0024B8                     l1167:
   854                           
   855                           ;main.c: 120:     if(op == 4)
   856   0024B8  0E04               	movlw	4
   857   0024BA  1806               	xorwf	calculate@op^0,w,c
   858   0024BC  A4D8               	btfss	status,2,c
   859   0024BE  EF63  F012         	goto	u631
   860   0024C2  EF65  F012         	goto	u630
   861   0024C6                     u631:
   862   0024C6  EF6A  F012         	goto	l87
   863   0024CA                     u630:
   864   0024CA  C005  F001         	movff	calculate@y,___lbdiv@divisor
   865   0024CE  5007               	movf	calculate@x^0,w,c
   866   0024D0  ECE8  F011         	call	___lbdiv
   867   0024D4                     l87:
   868   0024D4  0012               	return		;funcret
   869   0024D6                     __end_of_calculate:
   870                           	callstack 0
   871                           
   872 ;; *************** function ___lbdiv *****************
   873 ;; Defined at:
   874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  dividend        1    wreg     unsigned char 
   877 ;;  divisor         1    0[COMRAM] unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  dividend        1    1[COMRAM] unsigned char 
   880 ;;  quotient        1    3[COMRAM] unsigned char 
   881 ;;  counter         1    2[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      unsigned char 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;Total ram usage:        4 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_calculate
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text4
   905   0023D0                     __ptext4:
   906                           	callstack 0
   907   0023D0                     ___lbdiv:
   908                           	callstack 29
   909                           
   910                           ;incstack = 0
   911                           ;___lbdiv@dividend stored from wreg
   912   0023D0  6E02               	movwf	___lbdiv@dividend^0,c
   913   0023D2  0E00               	movlw	0
   914   0023D4  6E04               	movwf	___lbdiv@quotient^0,c
   915   0023D6  5001               	movf	___lbdiv@divisor^0,w,c
   916   0023D8  B4D8               	btfsc	status,2,c
   917   0023DA  EFF1  F011         	goto	u571
   918   0023DE  EFF3  F011         	goto	u570
   919   0023E2                     u571:
   920   0023E2  EF14  F012         	goto	l1153
   921   0023E6                     u570:
   922   0023E6  0E01               	movlw	1
   923   0023E8  6E03               	movwf	___lbdiv@counter^0,c
   924   0023EA  EFFA  F011         	goto	l1141
   925   0023EE                     l1137:
   926   0023EE  90D8               	bcf	status,0,c
   927   0023F0  3601               	rlcf	___lbdiv@divisor^0,f,c
   928   0023F2  2A03               	incf	___lbdiv@counter^0,f,c
   929   0023F4                     l1141:
   930   0023F4  AE01               	btfss	___lbdiv@divisor^0,7,c
   931   0023F6  EFFF  F011         	goto	u581
   932   0023FA  EF01  F012         	goto	u580
   933   0023FE                     u581:
   934   0023FE  EFF7  F011         	goto	l1137
   935   002402                     u580:
   936   002402                     l1143:
   937   002402  90D8               	bcf	status,0,c
   938   002404  3604               	rlcf	___lbdiv@quotient^0,f,c
   939   002406  5001               	movf	___lbdiv@divisor^0,w,c
   940   002408  5C02               	subwf	___lbdiv@dividend^0,w,c
   941   00240A  A0D8               	btfss	status,0,c
   942   00240C  EF0A  F012         	goto	u591
   943   002410  EF0C  F012         	goto	u590
   944   002414                     u591:
   945   002414  EF0F  F012         	goto	l1149
   946   002418                     u590:
   947   002418  5001               	movf	___lbdiv@divisor^0,w,c
   948   00241A  5E02               	subwf	___lbdiv@dividend^0,f,c
   949   00241C  8004               	bsf	___lbdiv@quotient^0,0,c
   950   00241E                     l1149:
   951   00241E  90D8               	bcf	status,0,c
   952   002420  3201               	rrcf	___lbdiv@divisor^0,f,c
   953   002422  2E03               	decfsz	___lbdiv@counter^0,f,c
   954   002424  EF01  F012         	goto	l1143
   955   002428                     l1153:
   956   002428  5004               	movf	___lbdiv@quotient^0,w,c
   957   00242A  0012               	return		;funcret
   958   00242C                     __end_of___lbdiv:
   959                           	callstack 0
   960                           
   961 ;; *************** function _PORT_Output *****************
   962 ;; Defined at:
   963 ;;		line 124 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  answer          1    wreg     unsigned char 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  answer          1   11[COMRAM] unsigned char 
   968 ;;  second_dig      1   10[COMRAM] unsigned char 
   969 ;;  first_dig       1    9[COMRAM] unsigned char 
   970 ;;  i               1    8[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   984 ;;Total ram usage:        4 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 1
   987 ;; This function calls:
   988 ;;		___awdiv
   989 ;;		___awmod
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text5
   996   00242C                     __ptext5:
   997                           	callstack 0
   998   00242C                     _PORT_Output:
   999                           	callstack 29
  1000                           
  1001                           ;incstack = 0
  1002                           ;PORT_Output@answer stored from wreg
  1003   00242C  6E0C               	movwf	PORT_Output@answer^0,c
  1004   00242E                     
  1005                           ;main.c: 126:     unsigned char second_dig = 0;
  1006   00242E  0E00               	movlw	0
  1007   002430  6E0B               	movwf	PORT_Output@second_dig^0,c
  1008                           
  1009                           ;main.c: 127:     unsigned char i = 0;
  1010   002432  0E00               	movlw	0
  1011   002434  6E09               	movwf	PORT_Output@i^0,c
  1012   002436                     
  1013                           ;main.c: 131:     first_dig = answer/10;
  1014   002436  C00C  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1015   00243A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1016   00243C  0E00               	movlw	0
  1017   00243E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1018   002440  0E0A               	movlw	10
  1019   002442  6E03               	movwf	___awdiv@divisor^0,c
  1020   002444  ECEF  F010         	call	___awdiv	;wreg free
  1021   002448  5001               	movf	?___awdiv^0,w,c
  1022   00244A  6E0A               	movwf	PORT_Output@first_dig^0,c
  1023                           
  1024                           ;main.c: 132:     second_dig = answer % 10;
  1025   00244C  C00C  F001         	movff	PORT_Output@answer,___awmod@dividend
  1026   002450  6A02               	clrf	(___awmod@dividend+1)^0,c
  1027   002452  0E00               	movlw	0
  1028   002454  6E04               	movwf	(___awmod@divisor+1)^0,c
  1029   002456  0E0A               	movlw	10
  1030   002458  6E03               	movwf	___awmod@divisor^0,c
  1031   00245A  EC51  F011         	call	___awmod	;wreg free
  1032   00245E  5001               	movf	?___awmod^0,w,c
  1033   002460  6E0B               	movwf	PORT_Output@second_dig^0,c
  1034   002462                     
  1035                           ;main.c: 133:     for(i = 1; i<10000; i++)
  1036   002462  0E01               	movlw	1
  1037   002464  6E09               	movwf	PORT_Output@i^0,c
  1038   002466                     l91:
  1039                           
  1040                           ;main.c: 134:     {;main.c: 135:         PORTBbits.RB5 = 1;
  1041   002466  8ACB               	bsf	203,5,c	;volatile
  1042                           
  1043                           ;main.c: 136:         PORTD = first_dig;
  1044   002468  0060  F02B  FFCD   	movff	PORT_Output@first_dig,16333	;volatile
  1045                           
  1046                           ;main.c: 137:         PORTBbits.RB5 = 0;
  1047   00246E  9ACB               	bcf	203,5,c	;volatile
  1048                           
  1049                           ;main.c: 138:         PORTBbits.RB6 = 1;
  1050   002470  8CCB               	bsf	203,6,c	;volatile
  1051                           
  1052                           ;main.c: 139:         PORTD = second_dig;
  1053   002472  0060  F02F  FFCD   	movff	PORT_Output@second_dig,16333	;volatile
  1054                           
  1055                           ;main.c: 140:         PORTBbits.RB6 = 0;
  1056   002478  9CCB               	bcf	203,6,c	;volatile
  1057   00247A                     
  1058                           ;main.c: 141:     }
  1059   00247A  2A09               	incf	PORT_Output@i^0,f,c
  1060   00247C  EF33  F012         	goto	l91
  1061   002480  0012               	return		;funcret
  1062   002482                     __end_of_PORT_Output:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function ___awmod *****************
  1066 ;; Defined at:
  1067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  dividend        2    0[COMRAM] int 
  1070 ;;  divisor         2    2[COMRAM] int 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  sign            1    5[COMRAM] unsigned char 
  1073 ;;  counter         1    4[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    0[COMRAM] int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1087 ;;Total ram usage:        6 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_PORT_Output
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text6
  1097   0022A2                     __ptext6:
  1098                           	callstack 0
  1099   0022A2                     ___awmod:
  1100                           	callstack 29
  1101   0022A2  0E00               	movlw	0
  1102   0022A4  6E06               	movwf	___awmod@sign^0,c
  1103   0022A6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1104   0022A8  EF5A  F011         	goto	u510
  1105   0022AC  EF58  F011         	goto	u511
  1106   0022B0                     u511:
  1107   0022B0  EF60  F011         	goto	l1103
  1108   0022B4                     u510:
  1109   0022B4  6C01               	negf	___awmod@dividend^0,c
  1110   0022B6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1111   0022B8  B0D8               	btfsc	status,0,c
  1112   0022BA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1113   0022BC  0E01               	movlw	1
  1114   0022BE  6E06               	movwf	___awmod@sign^0,c
  1115   0022C0                     l1103:
  1116   0022C0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1117   0022C2  EF67  F011         	goto	u520
  1118   0022C6  EF65  F011         	goto	u521
  1119   0022CA                     u521:
  1120   0022CA  EF6B  F011         	goto	l1107
  1121   0022CE                     u520:
  1122   0022CE  6C03               	negf	___awmod@divisor^0,c
  1123   0022D0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1124   0022D2  B0D8               	btfsc	status,0,c
  1125   0022D4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1126   0022D6                     l1107:
  1127   0022D6  5003               	movf	___awmod@divisor^0,w,c
  1128   0022D8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1129   0022DA  B4D8               	btfsc	status,2,c
  1130   0022DC  EF72  F011         	goto	u531
  1131   0022E0  EF74  F011         	goto	u530
  1132   0022E4                     u531:
  1133   0022E4  EF98  F011         	goto	l1123
  1134   0022E8                     u530:
  1135   0022E8  0E01               	movlw	1
  1136   0022EA  6E05               	movwf	___awmod@counter^0,c
  1137   0022EC  EF7C  F011         	goto	l1113
  1138   0022F0                     l1111:
  1139   0022F0  90D8               	bcf	status,0,c
  1140   0022F2  3603               	rlcf	___awmod@divisor^0,f,c
  1141   0022F4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1142   0022F6  2A05               	incf	___awmod@counter^0,f,c
  1143   0022F8                     l1113:
  1144   0022F8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1145   0022FA  EF81  F011         	goto	u541
  1146   0022FE  EF83  F011         	goto	u540
  1147   002302                     u541:
  1148   002302  EF78  F011         	goto	l1111
  1149   002306                     u540:
  1150   002306                     l1115:
  1151   002306  5003               	movf	___awmod@divisor^0,w,c
  1152   002308  5C01               	subwf	___awmod@dividend^0,w,c
  1153   00230A  5004               	movf	(___awmod@divisor+1)^0,w,c
  1154   00230C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1155   00230E  A0D8               	btfss	status,0,c
  1156   002310  EF8C  F011         	goto	u551
  1157   002314  EF8E  F011         	goto	u550
  1158   002318                     u551:
  1159   002318  EF92  F011         	goto	l1119
  1160   00231C                     u550:
  1161   00231C  5003               	movf	___awmod@divisor^0,w,c
  1162   00231E  5E01               	subwf	___awmod@dividend^0,f,c
  1163   002320  5004               	movf	(___awmod@divisor+1)^0,w,c
  1164   002322  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1165   002324                     l1119:
  1166   002324  90D8               	bcf	status,0,c
  1167   002326  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1168   002328  3203               	rrcf	___awmod@divisor^0,f,c
  1169   00232A  2E05               	decfsz	___awmod@counter^0,f,c
  1170   00232C  EF83  F011         	goto	l1115
  1171   002330                     l1123:
  1172   002330  5006               	movf	___awmod@sign^0,w,c
  1173   002332  B4D8               	btfsc	status,2,c
  1174   002334  EF9E  F011         	goto	u561
  1175   002338  EFA0  F011         	goto	u560
  1176   00233C                     u561:
  1177   00233C  EFA4  F011         	goto	l1127
  1178   002340                     u560:
  1179   002340  6C01               	negf	___awmod@dividend^0,c
  1180   002342  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1181   002344  B0D8               	btfsc	status,0,c
  1182   002346  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1183   002348                     l1127:
  1184   002348  C001  F001         	movff	___awmod@dividend,?___awmod
  1185   00234C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1186   002350  0012               	return		;funcret
  1187   002352                     __end_of___awmod:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function ___awdiv *****************
  1191 ;; Defined at:
  1192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  dividend        2    0[COMRAM] int 
  1195 ;;  divisor         2    2[COMRAM] int 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  quotient        2    6[COMRAM] int 
  1198 ;;  sign            1    5[COMRAM] unsigned char 
  1199 ;;  counter         1    4[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  2    0[COMRAM] int 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1210 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1213 ;;Total ram usage:        8 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_PORT_Output
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text7
  1223   0021DE                     __ptext7:
  1224                           	callstack 0
  1225   0021DE                     ___awdiv:
  1226                           	callstack 29
  1227   0021DE  0E00               	movlw	0
  1228   0021E0  6E06               	movwf	___awdiv@sign^0,c
  1229   0021E2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1230   0021E4  EFF8  F010         	goto	u450
  1231   0021E8  EFF6  F010         	goto	u451
  1232   0021EC                     u451:
  1233   0021EC  EFFE  F010         	goto	l1059
  1234   0021F0                     u450:
  1235   0021F0  6C03               	negf	___awdiv@divisor^0,c
  1236   0021F2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1237   0021F4  B0D8               	btfsc	status,0,c
  1238   0021F6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1239   0021F8  0E01               	movlw	1
  1240   0021FA  6E06               	movwf	___awdiv@sign^0,c
  1241   0021FC                     l1059:
  1242   0021FC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1243   0021FE  EF05  F011         	goto	u460
  1244   002202  EF03  F011         	goto	u461
  1245   002206                     u461:
  1246   002206  EF0B  F011         	goto	l1065
  1247   00220A                     u460:
  1248   00220A  6C01               	negf	___awdiv@dividend^0,c
  1249   00220C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1250   00220E  B0D8               	btfsc	status,0,c
  1251   002210  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1252   002212  0E01               	movlw	1
  1253   002214  1A06               	xorwf	___awdiv@sign^0,f,c
  1254   002216                     l1065:
  1255   002216  0E00               	movlw	0
  1256   002218  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1257   00221A  0E00               	movlw	0
  1258   00221C  6E07               	movwf	___awdiv@quotient^0,c
  1259   00221E  5003               	movf	___awdiv@divisor^0,w,c
  1260   002220  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1261   002222  B4D8               	btfsc	status,2,c
  1262   002224  EF16  F011         	goto	u471
  1263   002228  EF18  F011         	goto	u470
  1264   00222C                     u471:
  1265   00222C  EF40  F011         	goto	l1087
  1266   002230                     u470:
  1267   002230  0E01               	movlw	1
  1268   002232  6E05               	movwf	___awdiv@counter^0,c
  1269   002234  EF20  F011         	goto	l1073
  1270   002238                     l1071:
  1271   002238  90D8               	bcf	status,0,c
  1272   00223A  3603               	rlcf	___awdiv@divisor^0,f,c
  1273   00223C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1274   00223E  2A05               	incf	___awdiv@counter^0,f,c
  1275   002240                     l1073:
  1276   002240  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1277   002242  EF25  F011         	goto	u481
  1278   002246  EF27  F011         	goto	u480
  1279   00224A                     u481:
  1280   00224A  EF1C  F011         	goto	l1071
  1281   00224E                     u480:
  1282   00224E                     l1075:
  1283   00224E  90D8               	bcf	status,0,c
  1284   002250  3607               	rlcf	___awdiv@quotient^0,f,c
  1285   002252  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1286   002254  5003               	movf	___awdiv@divisor^0,w,c
  1287   002256  5C01               	subwf	___awdiv@dividend^0,w,c
  1288   002258  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1289   00225A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1290   00225C  A0D8               	btfss	status,0,c
  1291   00225E  EF33  F011         	goto	u491
  1292   002262  EF35  F011         	goto	u490
  1293   002266                     u491:
  1294   002266  EF3A  F011         	goto	l1083
  1295   00226A                     u490:
  1296   00226A  5003               	movf	___awdiv@divisor^0,w,c
  1297   00226C  5E01               	subwf	___awdiv@dividend^0,f,c
  1298   00226E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1299   002270  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1300   002272  8007               	bsf	___awdiv@quotient^0,0,c
  1301   002274                     l1083:
  1302   002274  90D8               	bcf	status,0,c
  1303   002276  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1304   002278  3203               	rrcf	___awdiv@divisor^0,f,c
  1305   00227A  2E05               	decfsz	___awdiv@counter^0,f,c
  1306   00227C  EF27  F011         	goto	l1075
  1307   002280                     l1087:
  1308   002280  5006               	movf	___awdiv@sign^0,w,c
  1309   002282  B4D8               	btfsc	status,2,c
  1310   002284  EF46  F011         	goto	u501
  1311   002288  EF48  F011         	goto	u500
  1312   00228C                     u501:
  1313   00228C  EF4C  F011         	goto	l1091
  1314   002290                     u500:
  1315   002290  6C07               	negf	___awdiv@quotient^0,c
  1316   002292  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1317   002294  B0D8               	btfsc	status,0,c
  1318   002296  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1319   002298                     l1091:
  1320   002298  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1321   00229C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1322   0022A0  0012               	return		;funcret
  1323   0022A2                     __end_of___awdiv:
  1324                           	callstack 0
  1325                           
  1326                           	psect	smallconst
  1327   002000                     __psmallconst:
  1328                           	callstack 0
  1329   002000  00                 	db	0
  1330   002001  00                 	db	0	; dummy byte at the end
  1331   000000                     
  1332                           	psect	rparam
  1333   000000                     tosu	equ	0x3FFF
  1334                           tosh	equ	0x3FFE
  1335                           tosl	equ	0x3FFD
  1336                           stkptr	equ	0x3FFC
  1337                           pclatu	equ	0x3FFB
  1338                           pclath	equ	0x3FFA
  1339                           pcl	equ	0x3FF9
  1340                           tblptru	equ	0x3FF8
  1341                           tblptrh	equ	0x3FF7
  1342                           tblptrl	equ	0x3FF6
  1343                           tablat	equ	0x3FF5
  1344                           prodh	equ	0x3FF4
  1345                           prodl	equ	0x3FF3
  1346                           indf0	equ	0x3FEF
  1347                           postinc0	equ	0x3FEE
  1348                           postdec0	equ	0x3FED
  1349                           preinc0	equ	0x3FEC
  1350                           plusw0	equ	0x3FEB
  1351                           fsr0h	equ	0x3FEA
  1352                           fsr0l	equ	0x3FE9
  1353                           wreg	equ	0x3FE8
  1354                           indf1	equ	0x3FE7
  1355                           postinc1	equ	0x3FE6
  1356                           postdec1	equ	0x3FE5
  1357                           preinc1	equ	0x3FE4
  1358                           plusw1	equ	0x3FE3
  1359                           fsr1h	equ	0x3FE2
  1360                           fsr1l	equ	0x3FE1
  1361                           bsr	equ	0x3FE0
  1362                           indf2	equ	0x3FDF
  1363                           postinc2	equ	0x3FDE
  1364                           postdec2	equ	0x3FDD
  1365                           preinc2	equ	0x3FDC
  1366                           plusw2	equ	0x3FDB
  1367                           fsr2h	equ	0x3FDA
  1368                           fsr2l	equ	0x3FD9
  1369                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1759
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     659
                                              4 COMRAM     3     1      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          4     4      0     995
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      77        0.0%
BITBIGSFRlhhh      551      0       0      72        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      11       1       17.9%
BITBIGSFRhhhh       32      0       0      68        0.0%
BITBIGSFRlhhl       1F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRhl          1      0       0      71        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      76        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 13:12:21 2024

           PORT_Output@i 0009                       l43 2516                       l70 21DC  
                     l47 2012                       l80 23CE                       l73 23A4  
                     l74 235A                       l91 2466                       l83 2494  
                     l59 20FE                       l84 24A6                       l87 24D4  
        ?_scan_operation 0001             ___awdiv@sign 0006                      l340 2350  
                    l502 242A                      l327 22A0                      l901 2080  
                    l911 209A                      l903 2084                      l913 20A8  
                    l905 2086                      l921 20C0                      l931 210E  
                    l923 20D2                      l915 20AC                      l907 2088  
                    l941 2136                      l933 2112                      l925 20EA  
                    l917 20BA                      l909 2096                      l951 215A  
                    l943 2138                      l935 2120                      l927 20F2  
                    l919 20BE                      l961 2174                      l953 215E  
                    l945 213A                      l937 2124                      l929 20F6  
                    l881 2034                      l971 21A6                      l963 2182  
                    l955 216C                      l947 2148                      l939 2132  
                    l891 204E                      l883 2038                      l875 2002  
                    l981 21DA                      l973 21AA                      l965 2186  
                    l957 2170                      l949 214C                      l893 205C  
                    l885 2046                      l877 2022                      l967 2194  
                    l959 2172                      l975 21AC                      l895 2060  
                    l887 204A                      l879 2026                      l991 237C  
                    l977 21BE                      l969 2198                      l897 206E  
                    l889 204C                      l993 2380                      l985 2352  
                    l979 21C2                      l899 2072                      l995 238E  
                    l987 236A                      l997 2392                      l989 236E  
                    l999 23A0                      u200 206E                      u201 206A  
                    u210 2080                      u211 207C                      u300 215A  
                    u220 2096                      u301 2156                      u221 2092  
                    u310 216C                      u230 20A8                      u311 2168  
                    u231 20A4                      u320 2182                      u240 20BA  
                    u160 2022                      u400 23B4                      u321 217E  
                    u241 20B6                      u161 201E                      u401 23B0  
                    u330 2194                      u250 20D2                      u170 2034  
                    u331 2190                      u251 20CE                      u171 2030  
                    u500 2290                      u340 21A6                      u260 210E  
                    u180 2046                      u501 228C                      u341 21A2  
                    u261 210A                      u181 2042                      u510 22B4  
                    u350 21BE                      u270 2120                      u190 205C  
                    u511 22B0                      u351 21BA                      u271 211C  
                    u191 2058                      u520 22CE                      u600 2494  
                    u280 2132                      u360 236A                      u521 22CA  
                    u601 2490                      u281 212E                      u361 2366  
                    u450 21F0                      u530 22E8                      u610 24A6  
                    u290 2148                      u370 237C                      u451 21EC  
                    u531 22E4                      u611 24A2                      u291 2144  
                    u371 2378                      u460 220A                      u540 2306  
                    u620 24B8                      u380 238E                      u461 2206  
                    u541 2302                      u621 24B4                      u381 238A  
                    u470 2230                      u550 231C                      u630 24CA  
                    u390 23A0                      u471 222C                      u551 2318  
                    u631 24C6                      u391 239C                      u480 224E  
                    u560 2340                      u481 224A                      u561 233C  
                    u490 226A                      u570 23E6                      u491 2266  
                    u571 23E2                      u580 2402                      u581 23FE  
                    u590 2418                      u591 2414                      u647 23BE  
                    u657 20DC                      u667 21CC             ___awmod@sign 0006  
                    wreg 3FE8                     l1001 23B4                     l1003 23CC  
                   l1101 22BC                     l1111 22F0                     l1103 22C0  
                   l1121 232A                     l1113 22F8                     l1105 22CE  
                   l1051 21DE                     l1115 2306                     l1123 2330  
                   l1107 22D6                     l1131 23D2                     l1061 220A  
                   l1053 21E2                     l1125 2340                     l1117 231C  
                   l1109 22E8                     l1141 23F4                     l1133 23D6  
                   l1071 2238                     l1063 2212                     l1055 21F0  
                   l1127 2348                     l1119 2324                     l1151 2422  
                   l1143 2402                     l1135 23E6                     l1081 2272  
                   l1073 2240                     l1065 2216                     l1057 21F8  
                   l1145 2418                     l1137 23EE                     l1153 2428  
                   l1161 2494                     l1091 2298                     l1083 2274  
                   l1075 224E                     l1067 221E                     l1059 21FC  
                   l1171 242E                     l1147 241C                     l1139 23F2  
                   l1163 24A6                     l1085 227A                     l1077 2254  
                   l1069 2230                     l1181 247A                     l1149 241E  
                   l1165 24B8                     l1157 2484                     l1079 226A  
                   l1087 2280                     l1095 22A2                     l1175 2436  
                   l1167 24B8                     l1159 2484                     l1191 24F4  
                   l1089 2290                     l1097 22A6                     l1177 2462  
                   l1169 24CA                     l1193 24FA                     l1185 24D6  
                   l1099 22B4                     l1195 2500                     l1187 24D8  
                   l1197 2510                     l1189 24EE                     _main 24D6  
                   prodl 3FF3                     start FFFC             ___param_bank 0000  
                  ?_main 0001          __end_of___awdiv 22A2          __end_of___lbdiv 242C  
        __end_of___awmod 2352          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTD 3FCD                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISD 3FC5        PORT_Output@answer 000C                    status 3FD8  
        ___lbdiv@divisor 0001          ___lbdiv@counter 0003             ?_scan_number 0001  
        __initialization 251A             __end_of_main 251A                   ??_main 000D  
          __activetblptr 0000         ___awdiv@dividend 0001                   _ANSELA 3A40  
                 _ANSELB 3A50                   _ANSELD 3A70                ??___awdiv 0005  
              ??___lbdiv 0002                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 0001          ___awmod@counter 0005  
           __mediumconst 0000             ?_PORT_Output 0001         ___lbdiv@dividend 0002  
             __accesstop 0060  __end_of__initialization 251C            ___rparam_used 0001  
       ??_scan_operation 0001           __pcstackCOMRAM 0001         scan_number@count 0004  
       scan_number@input 0006         ___lbdiv@quotient 0004              _X_Input_REG 0010  
            _Y_Input_REG 000F               __pnvCOMRAM 000D        __end_of_calculate 24D6  
                __Hparam 0000               calculate@x 0007               calculate@y 0005  
                __Lparam 0000                  ___awdiv 21DE                  ___lbdiv 23D0  
                ___awmod 22A2             __psmallconst 2000                  __pcinit 251A  
                __ramtop 2000                  __ptext0 24D6                  __ptext1 2352  
                __ptext2 2002                  __ptext3 2482                  __ptext4 23D0  
                __ptext5 242C                  __ptext6 22A2                  __ptext7 21DE  
       ___awmod@dividend 0001     end_of_initialization 251C                _PORTAbits 3FCA  
              _PORTBbits 3FCB            _Operation_REG 000E        scan_number@button 0003  
    start_initialization 251A        scan_number@output 0005              _calculation 000D  
            __pbssCOMRAM 0011    PORT_Output@second_dig 000B                _calculate 2482  
          ??_scan_number 0001                 ?___awdiv 0001                 ?___lbdiv 0001  
               ?___awmod 0001              __smallconst 2000               ?_calculate 0005  
    __end_of_scan_number 21DE            ??_PORT_Output 0009     PORT_Output@first_dig 000A  
            calculate@op 0006                 __Hrparam 0000                 __Lrparam 0000  
    __end_of_PORT_Output 2482              ??_calculate 0007              _scan_number 2002  
               isa$xinst 0000           _scan_operation 2352       _Display_Result_REG 0011  
   scan_operation@op_key 0003   __end_of_scan_operation 23D0              _PORT_Output 242C  
