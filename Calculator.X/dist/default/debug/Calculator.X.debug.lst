

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 16:20:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _TRISC	set	16324
    56   000000                     _TRISD	set	16325
    57   000000                     _TRISB	set	16323
    58                           
    59                           	psect	nvCOMRAM
    60   00000F                     __pnvCOMRAM:
    61                           	callstack 0
    62   00000F                     _Display_Result_REG:
    63                           	callstack 0
    64   00000F                     	ds	1
    65   000010                     _calculation:
    66                           	callstack 0
    67   000010                     	ds	1
    68   000011                     _Operation_REG:
    69                           	callstack 0
    70   000011                     	ds	1
    71   000012                     _Y_Input_REG:
    72                           	callstack 0
    73   000012                     	ds	1
    74   000013                     _X_Input_REG:
    75                           	callstack 0
    76   000013                     	ds	1
    77   000000                     _PORTB	set	16331
    78   000000                     _ANSELA	set	14912
    79   000000                     _TRISA	set	16322
    80   000000                     _ANSELB	set	14928
    81   000000                     _ANSELC	set	14944
    82   000000                     _ANSELD	set	14960
    83   000000                     _PORTAbits	set	16330
    84   000000                     _PORTBbits	set	16331
    85   000000                     _PORTD	set	16333
    86   000000                     _PORTCbits	set	16332
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   00274C                     __pcinit:
    92                           	callstack 0
    93   00274C                     start_initialization:
    94                           	callstack 0
    95   00274C                     __initialization:
    96                           	callstack 0
    97   00274C                     end_of_initialization:
    98                           	callstack 0
    99   00274C                     __end_of__initialization:
   100                           	callstack 0
   101   00274C  0100               	movlb	0
   102   00274E  EF46  F013         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMRAM
   105   000001                     __pcstackCOMRAM:
   106                           	callstack 0
   107   000001                     ??_scan_number:
   108   000001                     ??_scan_operation:
   109   000001                     ?___awdiv:
   110                           	callstack 0
   111   000001                     ?___awmod:
   112                           	callstack 0
   113   000001                     ___lbdiv@divisor:
   114                           	callstack 0
   115   000001                     ___awdiv@dividend:
   116                           	callstack 0
   117   000001                     ___awmod@dividend:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   000001                     	ds	1
   122   000002                     ___lbdiv@dividend:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x1
   126   000002                     	ds	1
   127   000003                     scan_number@button:
   128                           	callstack 0
   129   000003                     scan_operation@op_key:
   130                           	callstack 0
   131   000003                     ___lbdiv@counter:
   132                           	callstack 0
   133   000003                     ___awdiv@divisor:
   134                           	callstack 0
   135   000003                     ___awmod@divisor:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x2
   139   000003                     	ds	1
   140   000004                     scan_number@count:
   141                           	callstack 0
   142   000004                     ___lbdiv@quotient:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x3
   146   000004                     	ds	1
   147   000005                     scan_number@output:
   148                           	callstack 0
   149   000005                     calculate@y:
   150                           	callstack 0
   151   000005                     ___awdiv@counter:
   152                           	callstack 0
   153   000005                     ___awmod@counter:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x4
   157   000005                     	ds	1
   158   000006                     scan_number@input:
   159                           	callstack 0
   160   000006                     calculate@op:
   161                           	callstack 0
   162   000006                     ___awdiv@sign:
   163                           	callstack 0
   164   000006                     ___awmod@sign:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x5
   168   000006                     	ds	1
   169   000007                     calculate@output:
   170                           	callstack 0
   171   000007                     ___awdiv@quotient:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x6
   175   000007                     	ds	1
   176   000008                     calculate@x:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x7
   180   000008                     	ds	1
   181   000009                     PORT_Output@i:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x8
   185   000009                     	ds	1
   186   00000A                     PORT_Output@answer:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x9
   190   00000A                     	ds	1
   191   00000B                     PORT_Output@display1:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xA
   195   00000B                     	ds	1
   196   00000C                     PORT_Output@display2:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0xB
   200   00000C                     	ds	1
   201   00000D                     PORT_Output@first_dig:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0xC
   205   00000D                     	ds	1
   206   00000E                     PORT_Output@second_dig:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0xD
   210   00000E                     	ds	1
   211   00000F                     
   212                           ; 1 bytes @ 0xE
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 26 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called: 2
   238 ;; This function calls:
   239 ;;		_PORT_Output
   240 ;;		_calculate
   241 ;;		_scan_number
   242 ;;		_scan_operation
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249   00268C                     __ptext0:
   250                           	callstack 0
   251   00268C                     _main:
   252                           	callstack 29
   253   00268C                     
   254                           ;main.c: 27:     TRISA = 0xFF;
   255   00268C  68C2               	setf	194,c	;volatile
   256   00268E                     
   257                           ;main.c: 28:     ANSELA = 0;
   258   00268E  0E00               	movlw	0
   259   002690  013A               	movlb	58	; () banked
   260   002692  6F40               	movwf	64,b	;volatile
   261                           
   262                           ;main.c: 29:     TRISB = 0;
   263   002694  0E00               	movlw	0
   264   002696  6EC3               	movwf	195,c	;volatile
   265                           
   266                           ;main.c: 30:     ANSELB = 0;
   267   002698  0E00               	movlw	0
   268   00269A  6F50               	movwf	80,b	;volatile
   269                           
   270                           ;main.c: 31:     ANSELD = 0;
   271   00269C  0E00               	movlw	0
   272   00269E  6F70               	movwf	112,b	;volatile
   273                           
   274                           ;main.c: 32:     TRISD = 0;
   275   0026A0  0E00               	movlw	0
   276   0026A2  6EC5               	movwf	197,c	;volatile
   277                           
   278                           ;main.c: 33:     TRISC = 0;
   279   0026A4  0E00               	movlw	0
   280   0026A6  6EC4               	movwf	196,c	;volatile
   281                           
   282                           ;main.c: 34:     ANSELC = 0;
   283   0026A8  0E00               	movlw	0
   284   0026AA  6F60               	movwf	96,b	;volatile
   285   0026AC                     l51:
   286                           
   287                           ;main.c: 37:     X_Input_REG = 0;
   288   0026AC  0E00               	movlw	0
   289   0026AE  6E13               	movwf	_X_Input_REG^0,c
   290                           
   291                           ;main.c: 38:     Y_Input_REG = 0;
   292   0026B0  0E00               	movlw	0
   293   0026B2  6E12               	movwf	_Y_Input_REG^0,c
   294                           
   295                           ;main.c: 39:     Operation_REG = 0;
   296   0026B4  0E00               	movlw	0
   297   0026B6  6E11               	movwf	_Operation_REG^0,c
   298                           
   299                           ;main.c: 40:     calculation = 0;
   300   0026B8  0E00               	movlw	0
   301   0026BA  6E10               	movwf	_calculation^0,c
   302                           
   303                           ;main.c: 41:     Display_Result_REG = 0;
   304   0026BC  0E00               	movlw	0
   305   0026BE  6E0F               	movwf	_Display_Result_REG^0,c
   306   0026C0                     
   307                           ;main.c: 43:     X_Input_REG = scan_number();
   308   0026C0  EC14  F011         	call	_scan_number	;wreg free
   309   0026C4  6E13               	movwf	_X_Input_REG^0,c
   310   0026C6                     
   311                           ;main.c: 44:     Operation_REG = scan_operation();
   312   0026C6  ECCE  F012         	call	_scan_operation	;wreg free
   313   0026CA  6E11               	movwf	_Operation_REG^0,c
   314   0026CC                     
   315                           ;main.c: 45:     Y_Input_REG = scan_number();
   316   0026CC  EC14  F011         	call	_scan_number	;wreg free
   317   0026D0  6E12               	movwf	_Y_Input_REG^0,c
   318   0026D2                     
   319                           ;main.c: 46:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   320   0026D2  C012  F005         	movff	_Y_Input_REG,calculate@y
   321   0026D6  C011  F006         	movff	_Operation_REG,calculate@op
   322   0026DA  5013               	movf	_X_Input_REG^0,w,c
   323   0026DC  EC0D  F013         	call	_calculate
   324   0026E0  6E10               	movwf	_calculation^0,c
   325   0026E2                     
   326                           ;main.c: 47:     PORT_Output(calculation);
   327   0026E2  5010               	movf	_calculation^0,w,c
   328   0026E4  EC01  F010         	call	_PORT_Output
   329   0026E8  EF56  F013         	goto	l51
   330   0026EC  EFFE  F0FF         	goto	start
   331   0026F0                     __end_of_main:
   332                           	callstack 0
   333                           
   334 ;; *************** function _scan_operation *****************
   335 ;; Defined at:
   336 ;;		line 112 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  op_key          1    2[COMRAM] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      unsigned char 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   354 ;;Total ram usage:        3 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_main
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text1
   364   00259C                     __ptext1:
   365                           	callstack 0
   366   00259C                     _scan_operation:
   367                           	callstack 30
   368   00259C                     
   369                           ;main.c: 113:     unsigned char op_key = 0;
   370   00259C  0E00               	movlw	0
   371   00259E  6E03               	movwf	scan_operation@op_key^0,c
   372                           
   373                           ;main.c: 114:     while (op_key ==0) {
   374   0025A0  EFF7  F012         	goto	l86
   375   0025A4                     l87:
   376                           
   377                           ;main.c: 115:      PORTBbits.RB0 = 1;
   378   0025A4  80CB               	bsf	203,0,c	;volatile
   379                           
   380                           ;main.c: 116:         if(PORTAbits.RA0 == 1) op_key = 1;
   381   0025A6  A0CA               	btfss	202,0,c	;volatile
   382   0025A8  EFD8  F012         	goto	u381
   383   0025AC  EFDA  F012         	goto	u380
   384   0025B0                     u381:
   385   0025B0  EFDC  F012         	goto	l1033
   386   0025B4                     u380:
   387   0025B4  0E01               	movlw	1
   388   0025B6  6E03               	movwf	scan_operation@op_key^0,c
   389   0025B8                     l1033:
   390                           
   391                           ;main.c: 117:         if(PORTAbits.RA1 == 1) op_key = 2;
   392   0025B8  A2CA               	btfss	202,1,c	;volatile
   393   0025BA  EFE1  F012         	goto	u391
   394   0025BE  EFE3  F012         	goto	u390
   395   0025C2                     u391:
   396   0025C2  EFE5  F012         	goto	l1037
   397   0025C6                     u390:
   398   0025C6  0E02               	movlw	2
   399   0025C8  6E03               	movwf	scan_operation@op_key^0,c
   400   0025CA                     l1037:
   401                           
   402                           ;main.c: 118:         if(PORTAbits.RA2 == 1) op_key = 3;
   403   0025CA  A4CA               	btfss	202,2,c	;volatile
   404   0025CC  EFEA  F012         	goto	u401
   405   0025D0  EFEC  F012         	goto	u400
   406   0025D4                     u401:
   407   0025D4  EFEE  F012         	goto	l1041
   408   0025D8                     u400:
   409   0025D8  0E03               	movlw	3
   410   0025DA  6E03               	movwf	scan_operation@op_key^0,c
   411   0025DC                     l1041:
   412                           
   413                           ;main.c: 119:         if(PORTAbits.RA3 == 1) op_key = 4;
   414   0025DC  A6CA               	btfss	202,3,c	;volatile
   415   0025DE  EFF3  F012         	goto	u411
   416   0025E2  EFF5  F012         	goto	u410
   417   0025E6                     u411:
   418   0025E6  EFF7  F012         	goto	l86
   419   0025EA                     u410:
   420   0025EA  0E04               	movlw	4
   421   0025EC  6E03               	movwf	scan_operation@op_key^0,c
   422   0025EE                     l86:
   423                           
   424                           ;main.c: 114:     while (op_key ==0) {
   425   0025EE  5003               	movf	scan_operation@op_key^0,w,c
   426   0025F0  B4D8               	btfsc	status,2,c
   427   0025F2  EFFD  F012         	goto	u421
   428   0025F6  EFFF  F012         	goto	u420
   429   0025FA                     u421:
   430   0025FA  EFD2  F012         	goto	l87
   431   0025FE                     u420:
   432   0025FE                     
   433                           ;main.c: 121:         _delay((unsigned long)((200)*(8000000/4000.0)));
   434   0025FE  0E03               	movlw	3
   435   002600  6E02               	movwf	(??_scan_operation+1)^0,c
   436   002602  0E08               	movlw	8
   437   002604  6E01               	movwf	??_scan_operation^0,c
   438   002606  0E77               	movlw	119
   439   002608                     u1087:
   440   002608  2EE8               	decfsz	wreg,f,c
   441   00260A  D7FE               	bra	u1087
   442   00260C  2E01               	decfsz	??_scan_operation^0,f,c
   443   00260E  D7FC               	bra	u1087
   444   002610  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   445   002612  D7FA               	bra	u1087
   446   002614  0000               	nop	
   447   002616                     
   448                           ;main.c: 122:         return op_key;
   449   002616  5003               	movf	scan_operation@op_key^0,w,c
   450   002618  0012               	return		;funcret
   451   00261A                     __end_of_scan_operation:
   452                           	callstack 0
   453                           
   454 ;; *************** function _scan_number *****************
   455 ;; Defined at:
   456 ;;		line 52 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  input           1    5[COMRAM] unsigned char 
   461 ;;  output          1    4[COMRAM] unsigned char 
   462 ;;  count           1    3[COMRAM] unsigned char 
   463 ;;  button          1    2[COMRAM] unsigned char 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      unsigned char 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, prodl, prodh
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   477 ;;Total ram usage:        6 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487   002228                     __ptext2:
   488                           	callstack 0
   489   002228                     _scan_number:
   490                           	callstack 30
   491   002228                     
   492                           ;main.c: 53:     unsigned char input = 10;
   493   002228  0E0A               	movlw	10
   494   00222A  6E06               	movwf	scan_number@input^0,c
   495                           
   496                           ;main.c: 55:     unsigned char button = 0;
   497   00222C  0E00               	movlw	0
   498   00222E  6E03               	movwf	scan_number@button^0,c
   499                           
   500                           ;main.c: 56:     unsigned char count = 2;
   501   002230  0E02               	movlw	2
   502   002232  6E04               	movwf	scan_number@count^0,c
   503                           
   504                           ;main.c: 58:     while (input == 10)
   505   002234  EF7C  F011         	goto	l961
   506   002238                     l58:
   507                           
   508                           ;main.c: 59:     {;main.c: 60:         PORTBbits.RB0 = 1;
   509   002238  80CB               	bsf	203,0,c	;volatile
   510                           
   511                           ;main.c: 61:         if (PORTAbits.RA0 == 1)input = 1;
   512   00223A  A0CA               	btfss	202,0,c	;volatile
   513   00223C  EF22  F011         	goto	u161
   514   002240  EF24  F011         	goto	u160
   515   002244                     u161:
   516   002244  EF26  F011         	goto	l915
   517   002248                     u160:
   518   002248  0E01               	movlw	1
   519   00224A  6E06               	movwf	scan_number@input^0,c
   520   00224C                     l915:
   521                           
   522                           ;main.c: 62:         if(PORTAbits.RA1 == 1) input = 4;
   523   00224C  A2CA               	btfss	202,1,c	;volatile
   524   00224E  EF2B  F011         	goto	u171
   525   002252  EF2D  F011         	goto	u170
   526   002256                     u171:
   527   002256  EF2F  F011         	goto	l919
   528   00225A                     u170:
   529   00225A  0E04               	movlw	4
   530   00225C  6E06               	movwf	scan_number@input^0,c
   531   00225E                     l919:
   532                           
   533                           ;main.c: 63:         if(PORTAbits.RA2 == 1) input = 7;
   534   00225E  A4CA               	btfss	202,2,c	;volatile
   535   002260  EF34  F011         	goto	u181
   536   002264  EF36  F011         	goto	u180
   537   002268                     u181:
   538   002268  EF38  F011         	goto	l923
   539   00226C                     u180:
   540   00226C  0E07               	movlw	7
   541   00226E  6E06               	movwf	scan_number@input^0,c
   542   002270                     l923:
   543                           
   544                           ;main.c: 64:         PORTBbits.RB0 = 0;
   545   002270  90CB               	bcf	203,0,c	;volatile
   546   002272                     
   547                           ;main.c: 66:          PORTBbits.RB1 = 1;
   548   002272  82CB               	bsf	203,1,c	;volatile
   549   002274                     
   550                           ;main.c: 67:         if (PORTAbits.RA0 == 1)input = 2;
   551   002274  A0CA               	btfss	202,0,c	;volatile
   552   002276  EF3F  F011         	goto	u191
   553   00227A  EF41  F011         	goto	u190
   554   00227E                     u191:
   555   00227E  EF43  F011         	goto	l931
   556   002282                     u190:
   557   002282  0E02               	movlw	2
   558   002284  6E06               	movwf	scan_number@input^0,c
   559   002286                     l931:
   560                           
   561                           ;main.c: 68:         if(PORTAbits.RA1 == 1) input = 5;
   562   002286  A2CA               	btfss	202,1,c	;volatile
   563   002288  EF48  F011         	goto	u201
   564   00228C  EF4A  F011         	goto	u200
   565   002290                     u201:
   566   002290  EF4C  F011         	goto	l935
   567   002294                     u200:
   568   002294  0E05               	movlw	5
   569   002296  6E06               	movwf	scan_number@input^0,c
   570   002298                     l935:
   571                           
   572                           ;main.c: 69:         if(PORTAbits.RA2 == 1) input = 8;
   573   002298  A4CA               	btfss	202,2,c	;volatile
   574   00229A  EF51  F011         	goto	u211
   575   00229E  EF53  F011         	goto	u210
   576   0022A2                     u211:
   577   0022A2  EF55  F011         	goto	l939
   578   0022A6                     u210:
   579   0022A6  0E08               	movlw	8
   580   0022A8  6E06               	movwf	scan_number@input^0,c
   581   0022AA                     l939:
   582                           
   583                           ;main.c: 70:         if(PORTAbits.RA3 == 1) input = 0;
   584   0022AA  A6CA               	btfss	202,3,c	;volatile
   585   0022AC  EF5A  F011         	goto	u221
   586   0022B0  EF5C  F011         	goto	u220
   587   0022B4                     u221:
   588   0022B4  EF5E  F011         	goto	l943
   589   0022B8                     u220:
   590   0022B8  0E00               	movlw	0
   591   0022BA  6E06               	movwf	scan_number@input^0,c
   592   0022BC                     l943:
   593                           
   594                           ;main.c: 71:         PORTBbits.RB1 = 0;
   595   0022BC  92CB               	bcf	203,1,c	;volatile
   596   0022BE                     
   597                           ;main.c: 73:          PORTBbits.RB2 = 1;
   598   0022BE  84CB               	bsf	203,2,c	;volatile
   599   0022C0                     
   600                           ;main.c: 74:         if (PORTAbits.RA0 == 1)input = 3;
   601   0022C0  A0CA               	btfss	202,0,c	;volatile
   602   0022C2  EF65  F011         	goto	u231
   603   0022C6  EF67  F011         	goto	u230
   604   0022CA                     u231:
   605   0022CA  EF69  F011         	goto	l951
   606   0022CE                     u230:
   607   0022CE  0E03               	movlw	3
   608   0022D0  6E06               	movwf	scan_number@input^0,c
   609   0022D2                     l951:
   610                           
   611                           ;main.c: 75:         if(PORTAbits.RA1 == 1) input = 6;
   612   0022D2  A2CA               	btfss	202,1,c	;volatile
   613   0022D4  EF6E  F011         	goto	u241
   614   0022D8  EF70  F011         	goto	u240
   615   0022DC                     u241:
   616   0022DC  EF72  F011         	goto	l955
   617   0022E0                     u240:
   618   0022E0  0E06               	movlw	6
   619   0022E2  6E06               	movwf	scan_number@input^0,c
   620   0022E4                     l955:
   621                           
   622                           ;main.c: 76:         if(PORTAbits.RA2 == 1) input = 9;
   623   0022E4  A4CA               	btfss	202,2,c	;volatile
   624   0022E6  EF77  F011         	goto	u251
   625   0022EA  EF79  F011         	goto	u250
   626   0022EE                     u251:
   627   0022EE  EF7B  F011         	goto	l959
   628   0022F2                     u250:
   629   0022F2  0E09               	movlw	9
   630   0022F4  6E06               	movwf	scan_number@input^0,c
   631   0022F6                     l959:
   632                           
   633                           ;main.c: 77:         PORTBbits.RB2 = 0;
   634   0022F6  94CB               	bcf	203,2,c	;volatile
   635   0022F8                     l961:
   636                           
   637                           ;main.c: 58:     while (input == 10)
   638   0022F8  0E0A               	movlw	10
   639   0022FA  1806               	xorwf	scan_number@input^0,w,c
   640   0022FC  B4D8               	btfsc	status,2,c
   641   0022FE  EF83  F011         	goto	u261
   642   002302  EF85  F011         	goto	u260
   643   002306                     u261:
   644   002306  EF1C  F011         	goto	l58
   645   00230A                     u260:
   646   00230A                     
   647                           ;main.c: 80:     _delay((unsigned long)((200)*(8000000/4000.0)));
   648   00230A  0E03               	movlw	3
   649   00230C  6E02               	movwf	(??_scan_number+1)^0,c
   650   00230E  0E08               	movlw	8
   651   002310  6E01               	movwf	??_scan_number^0,c
   652   002312  0E77               	movlw	119
   653   002314                     u1097:
   654   002314  2EE8               	decfsz	wreg,f,c
   655   002316  D7FE               	bra	u1097
   656   002318  2E01               	decfsz	??_scan_number^0,f,c
   657   00231A  D7FC               	bra	u1097
   658   00231C  2E02               	decfsz	(??_scan_number+1)^0,f,c
   659   00231E  D7FA               	bra	u1097
   660   002320  0000               	nop	
   661   002322                     
   662                           ;main.c: 82:     input *=10;
   663   002322  0E0A               	movlw	10
   664   002324  0206               	mulwf	scan_number@input^0,c
   665   002326  50F3               	movf	prodl,w,c
   666   002328  6E06               	movwf	scan_number@input^0,c
   667   00232A                     
   668                           ;main.c: 83:     output = input;
   669   00232A  C006  F005         	movff	scan_number@input,scan_number@output
   670   00232E                     
   671                           ;main.c: 85:     input = 10;
   672   00232E  0E0A               	movlw	10
   673   002330  6E06               	movwf	scan_number@input^0,c
   674                           
   675                           ;main.c: 86:     while (input == 10)
   676   002332  EFFB  F011         	goto	l1019
   677   002336                     l71:
   678                           
   679                           ;main.c: 87:     {;main.c: 88:         PORTBbits.RB0 = 1;
   680   002336  80CB               	bsf	203,0,c	;volatile
   681                           
   682                           ;main.c: 89:         if (PORTAbits.RA0 == 1)input = 1;
   683   002338  A0CA               	btfss	202,0,c	;volatile
   684   00233A  EFA1  F011         	goto	u271
   685   00233E  EFA3  F011         	goto	u270
   686   002342                     u271:
   687   002342  EFA5  F011         	goto	l973
   688   002346                     u270:
   689   002346  0E01               	movlw	1
   690   002348  6E06               	movwf	scan_number@input^0,c
   691   00234A                     l973:
   692                           
   693                           ;main.c: 90:         if(PORTAbits.RA1 == 1) input = 4;
   694   00234A  A2CA               	btfss	202,1,c	;volatile
   695   00234C  EFAA  F011         	goto	u281
   696   002350  EFAC  F011         	goto	u280
   697   002354                     u281:
   698   002354  EFAE  F011         	goto	l977
   699   002358                     u280:
   700   002358  0E04               	movlw	4
   701   00235A  6E06               	movwf	scan_number@input^0,c
   702   00235C                     l977:
   703                           
   704                           ;main.c: 91:         if(PORTAbits.RA2 == 1) input = 7;
   705   00235C  A4CA               	btfss	202,2,c	;volatile
   706   00235E  EFB3  F011         	goto	u291
   707   002362  EFB5  F011         	goto	u290
   708   002366                     u291:
   709   002366  EFB7  F011         	goto	l981
   710   00236A                     u290:
   711   00236A  0E07               	movlw	7
   712   00236C  6E06               	movwf	scan_number@input^0,c
   713   00236E                     l981:
   714                           
   715                           ;main.c: 92:         PORTBbits.RB0 = 0;
   716   00236E  90CB               	bcf	203,0,c	;volatile
   717   002370                     
   718                           ;main.c: 94:          PORTBbits.RB1 = 1;
   719   002370  82CB               	bsf	203,1,c	;volatile
   720   002372                     
   721                           ;main.c: 95:         if(PORTAbits.RA0 == 1) input = 2;
   722   002372  A0CA               	btfss	202,0,c	;volatile
   723   002374  EFBE  F011         	goto	u301
   724   002378  EFC0  F011         	goto	u300
   725   00237C                     u301:
   726   00237C  EFC2  F011         	goto	l989
   727   002380                     u300:
   728   002380  0E02               	movlw	2
   729   002382  6E06               	movwf	scan_number@input^0,c
   730   002384                     l989:
   731                           
   732                           ;main.c: 96:         if(PORTAbits.RA1 == 1) input = 5;
   733   002384  A2CA               	btfss	202,1,c	;volatile
   734   002386  EFC7  F011         	goto	u311
   735   00238A  EFC9  F011         	goto	u310
   736   00238E                     u311:
   737   00238E  EFCB  F011         	goto	l993
   738   002392                     u310:
   739   002392  0E05               	movlw	5
   740   002394  6E06               	movwf	scan_number@input^0,c
   741   002396                     l993:
   742                           
   743                           ;main.c: 97:         if(PORTAbits.RA2 == 1) input = 8;
   744   002396  A4CA               	btfss	202,2,c	;volatile
   745   002398  EFD0  F011         	goto	u321
   746   00239C  EFD2  F011         	goto	u320
   747   0023A0                     u321:
   748   0023A0  EFD4  F011         	goto	l997
   749   0023A4                     u320:
   750   0023A4  0E08               	movlw	8
   751   0023A6  6E06               	movwf	scan_number@input^0,c
   752   0023A8                     l997:
   753                           
   754                           ;main.c: 98:         if(PORTAbits.RA3 == 1) input = 0;
   755   0023A8  A6CA               	btfss	202,3,c	;volatile
   756   0023AA  EFD9  F011         	goto	u331
   757   0023AE  EFDB  F011         	goto	u330
   758   0023B2                     u331:
   759   0023B2  EFDD  F011         	goto	l1001
   760   0023B6                     u330:
   761   0023B6  0E00               	movlw	0
   762   0023B8  6E06               	movwf	scan_number@input^0,c
   763   0023BA                     l1001:
   764                           
   765                           ;main.c: 99:         PORTBbits.RB1 = 0;
   766   0023BA  92CB               	bcf	203,1,c	;volatile
   767   0023BC                     
   768                           ;main.c: 101:          PORTBbits.RB2 = 1;
   769   0023BC  84CB               	bsf	203,2,c	;volatile
   770   0023BE                     
   771                           ;main.c: 102:         if (PORTAbits.RA0 == 1)input = 3;
   772   0023BE  A0CA               	btfss	202,0,c	;volatile
   773   0023C0  EFE4  F011         	goto	u341
   774   0023C4  EFE6  F011         	goto	u340
   775   0023C8                     u341:
   776   0023C8  EFE8  F011         	goto	l1009
   777   0023CC                     u340:
   778   0023CC  0E03               	movlw	3
   779   0023CE  6E06               	movwf	scan_number@input^0,c
   780   0023D0                     l1009:
   781                           
   782                           ;main.c: 103:         if(PORTAbits.RA1 == 1) input = 6;
   783   0023D0  A2CA               	btfss	202,1,c	;volatile
   784   0023D2  EFED  F011         	goto	u351
   785   0023D6  EFEF  F011         	goto	u350
   786   0023DA                     u351:
   787   0023DA  EFF1  F011         	goto	l1013
   788   0023DE                     u350:
   789   0023DE  0E06               	movlw	6
   790   0023E0  6E06               	movwf	scan_number@input^0,c
   791   0023E2                     l1013:
   792                           
   793                           ;main.c: 104:         if(PORTAbits.RA2 == 1) input = 9;
   794   0023E2  A4CA               	btfss	202,2,c	;volatile
   795   0023E4  EFF6  F011         	goto	u361
   796   0023E8  EFF8  F011         	goto	u360
   797   0023EC                     u361:
   798   0023EC  EFFA  F011         	goto	l1017
   799   0023F0                     u360:
   800   0023F0  0E09               	movlw	9
   801   0023F2  6E06               	movwf	scan_number@input^0,c
   802   0023F4                     l1017:
   803                           
   804                           ;main.c: 105:         PORTBbits.RB2 = 0;
   805   0023F4  94CB               	bcf	203,2,c	;volatile
   806   0023F6                     l1019:
   807                           
   808                           ;main.c: 86:     while (input == 10)
   809   0023F6  0E0A               	movlw	10
   810   0023F8  1806               	xorwf	scan_number@input^0,w,c
   811   0023FA  B4D8               	btfsc	status,2,c
   812   0023FC  EF02  F012         	goto	u371
   813   002400  EF04  F012         	goto	u370
   814   002404                     u371:
   815   002404  EF9B  F011         	goto	l71
   816   002408                     u370:
   817   002408                     
   818                           ;main.c: 107:     output += input;
   819   002408  5006               	movf	scan_number@input^0,w,c
   820   00240A  2605               	addwf	scan_number@output^0,f,c
   821   00240C                     
   822                           ;main.c: 108:     _delay((unsigned long)((200)*(8000000/4000.0)));
   823   00240C  0E03               	movlw	3
   824   00240E  6E02               	movwf	(??_scan_number+1)^0,c
   825   002410  0E08               	movlw	8
   826   002412  6E01               	movwf	??_scan_number^0,c
   827   002414  0E77               	movlw	119
   828   002416                     u1107:
   829   002416  2EE8               	decfsz	wreg,f,c
   830   002418  D7FE               	bra	u1107
   831   00241A  2E01               	decfsz	??_scan_number^0,f,c
   832   00241C  D7FC               	bra	u1107
   833   00241E  2E02               	decfsz	(??_scan_number+1)^0,f,c
   834   002420  D7FA               	bra	u1107
   835   002422  0000               	nop	
   836   002424                     
   837                           ;main.c: 109:     return output;
   838   002424  5005               	movf	scan_number@output^0,w,c
   839   002426  0012               	return		;funcret
   840   002428                     __end_of_scan_number:
   841                           	callstack 0
   842                           
   843 ;; *************** function _calculate *****************
   844 ;; Defined at:
   845 ;;		line 125 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  x               1    wreg     unsigned char 
   848 ;;  y               1    4[COMRAM] unsigned char 
   849 ;;  op              1    5[COMRAM] unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  x               1    7[COMRAM] unsigned char 
   852 ;;  output          1    6[COMRAM] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   866 ;;Total ram usage:        4 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		___lbdiv
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text3
   877   00261A                     __ptext3:
   878                           	callstack 0
   879   00261A                     _calculate:
   880                           	callstack 29
   881                           
   882                           ;incstack = 0
   883                           ;calculate@x stored from wreg
   884   00261A  6E08               	movwf	calculate@x^0,c
   885   00261C                     
   886                           ;main.c: 126:     unsigned char output = 0;
   887   00261C  0E00               	movlw	0
   888   00261E  6E07               	movwf	calculate@output^0,c
   889   002620                     
   890                           ;main.c: 127:     if(op == 1)
   891   002620  0406               	decf	calculate@op^0,w,c
   892   002622  A4D8               	btfss	status,2,c
   893   002624  EF16  F013         	goto	u831
   894   002628  EF18  F013         	goto	u830
   895   00262C                     u831:
   896   00262C  EF1B  F013         	goto	l96
   897   002630                     u830:
   898   002630                     
   899                           ;main.c: 128:         output = x + y;
   900   002630  5008               	movf	calculate@x^0,w,c
   901   002632  2405               	addwf	calculate@y^0,w,c
   902   002634  6E07               	movwf	calculate@output^0,c
   903   002636                     l96:
   904                           
   905                           ;main.c: 129:     if(op ==2)
   906   002636  0E02               	movlw	2
   907   002638  1806               	xorwf	calculate@op^0,w,c
   908   00263A  A4D8               	btfss	status,2,c
   909   00263C  EF22  F013         	goto	u841
   910   002640  EF24  F013         	goto	u840
   911   002644                     u841:
   912   002644  EF27  F013         	goto	l97
   913   002648                     u840:
   914   002648                     
   915                           ;main.c: 130:         output = x-y;
   916   002648  5005               	movf	calculate@y^0,w,c
   917   00264A  5C08               	subwf	calculate@x^0,w,c
   918   00264C  6E07               	movwf	calculate@output^0,c
   919   00264E                     l97:
   920                           
   921                           ;main.c: 131:     if(op == 3)
   922   00264E  0E03               	movlw	3
   923   002650  1806               	xorwf	calculate@op^0,w,c
   924   002652  A4D8               	btfss	status,2,c
   925   002654  EF2E  F013         	goto	u851
   926   002658  EF30  F013         	goto	u850
   927   00265C                     u851:
   928   00265C  EF35  F013         	goto	l1297
   929   002660                     u850:
   930   002660                     
   931                           ;main.c: 132:         output = x*y;
   932   002660  5008               	movf	calculate@x^0,w,c
   933   002662  0205               	mulwf	calculate@y^0,c
   934   002664  006F FFCC  F007    	movff	prodl,calculate@output
   935   00266A                     l1297:
   936                           
   937                           ;main.c: 133:     if(op == 4)
   938   00266A  0E04               	movlw	4
   939   00266C  1806               	xorwf	calculate@op^0,w,c
   940   00266E  A4D8               	btfss	status,2,c
   941   002670  EF3C  F013         	goto	u861
   942   002674  EF3E  F013         	goto	u860
   943   002678                     u861:
   944   002678  EF44  F013         	goto	l1301
   945   00267C                     u860:
   946   00267C                     
   947                           ;main.c: 134:         output = x/y;
   948   00267C  C005  F001         	movff	calculate@y,___lbdiv@divisor
   949   002680  5008               	movf	calculate@x^0,w,c
   950   002682  EC78  F013         	call	___lbdiv
   951   002686  6E07               	movwf	calculate@output^0,c
   952   002688                     l1301:
   953                           
   954                           ;main.c: 135:     return output;
   955   002688  5007               	movf	calculate@output^0,w,c
   956   00268A  0012               	return		;funcret
   957   00268C                     __end_of_calculate:
   958                           	callstack 0
   959                           
   960 ;; *************** function ___lbdiv *****************
   961 ;; Defined at:
   962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  dividend        1    wreg     unsigned char 
   965 ;;  divisor         1    0[COMRAM] unsigned char 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  dividend        1    1[COMRAM] unsigned char 
   968 ;;  quotient        1    3[COMRAM] unsigned char 
   969 ;;  counter         1    2[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      unsigned char 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   983 ;;Total ram usage:        4 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_calculate
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text4
   993   0026F0                     __ptext4:
   994                           	callstack 0
   995   0026F0                     ___lbdiv:
   996                           	callstack 29
   997                           
   998                           ;incstack = 0
   999                           ;___lbdiv@dividend stored from wreg
  1000   0026F0  6E02               	movwf	___lbdiv@dividend^0,c
  1001   0026F2  0E00               	movlw	0
  1002   0026F4  6E04               	movwf	___lbdiv@quotient^0,c
  1003   0026F6  5001               	movf	___lbdiv@divisor^0,w,c
  1004   0026F8  B4D8               	btfsc	status,2,c
  1005   0026FA  EF81  F013         	goto	u801
  1006   0026FE  EF83  F013         	goto	u800
  1007   002702                     u801:
  1008   002702  EFA4  F013         	goto	l1283
  1009   002706                     u800:
  1010   002706  0E01               	movlw	1
  1011   002708  6E03               	movwf	___lbdiv@counter^0,c
  1012   00270A  EF8A  F013         	goto	l1271
  1013   00270E                     l1267:
  1014   00270E  90D8               	bcf	status,0,c
  1015   002710  3601               	rlcf	___lbdiv@divisor^0,f,c
  1016   002712  2A03               	incf	___lbdiv@counter^0,f,c
  1017   002714                     l1271:
  1018   002714  AE01               	btfss	___lbdiv@divisor^0,7,c
  1019   002716  EF8F  F013         	goto	u811
  1020   00271A  EF91  F013         	goto	u810
  1021   00271E                     u811:
  1022   00271E  EF87  F013         	goto	l1267
  1023   002722                     u810:
  1024   002722                     l1273:
  1025   002722  90D8               	bcf	status,0,c
  1026   002724  3604               	rlcf	___lbdiv@quotient^0,f,c
  1027   002726  5001               	movf	___lbdiv@divisor^0,w,c
  1028   002728  5C02               	subwf	___lbdiv@dividend^0,w,c
  1029   00272A  A0D8               	btfss	status,0,c
  1030   00272C  EF9A  F013         	goto	u821
  1031   002730  EF9C  F013         	goto	u820
  1032   002734                     u821:
  1033   002734  EF9F  F013         	goto	l1279
  1034   002738                     u820:
  1035   002738  5001               	movf	___lbdiv@divisor^0,w,c
  1036   00273A  5E02               	subwf	___lbdiv@dividend^0,f,c
  1037   00273C  8004               	bsf	___lbdiv@quotient^0,0,c
  1038   00273E                     l1279:
  1039   00273E  90D8               	bcf	status,0,c
  1040   002740  3201               	rrcf	___lbdiv@divisor^0,f,c
  1041   002742  2E03               	decfsz	___lbdiv@counter^0,f,c
  1042   002744  EF91  F013         	goto	l1273
  1043   002748                     l1283:
  1044   002748  5004               	movf	___lbdiv@quotient^0,w,c
  1045   00274A  0012               	return		;funcret
  1046   00274C                     __end_of___lbdiv:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _PORT_Output *****************
  1050 ;; Defined at:
  1051 ;;		line 138 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  answer          1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  answer          1    9[COMRAM] unsigned char 
  1056 ;;  second_dig      1   13[COMRAM] unsigned char 
  1057 ;;  first_dig       1   12[COMRAM] unsigned char 
  1058 ;;  display2        1   11[COMRAM] unsigned char 
  1059 ;;  display1        1   10[COMRAM] unsigned char 
  1060 ;;  i               1    8[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1071 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1074 ;;Total ram usage:        6 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 1
  1077 ;; This function calls:
  1078 ;;		___awdiv
  1079 ;;		___awmod
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text5
  1086   002002                     __ptext5:
  1087                           	callstack 0
  1088   002002                     _PORT_Output:
  1089                           	callstack 29
  1090                           
  1091                           ;incstack = 0
  1092                           ;PORT_Output@answer stored from wreg
  1093   002002  6E0A               	movwf	PORT_Output@answer^0,c
  1094   002004                     
  1095                           ;main.c: 140:     unsigned char second_dig = 0;
  1096   002004  0E00               	movlw	0
  1097   002006  6E0E               	movwf	PORT_Output@second_dig^0,c
  1098                           
  1099                           ;main.c: 141:     unsigned char i = 0;
  1100   002008  0E00               	movlw	0
  1101   00200A  6E09               	movwf	PORT_Output@i^0,c
  1102                           
  1103                           ;main.c: 142:     unsigned char display1 = 0;
  1104   00200C  0E00               	movlw	0
  1105   00200E  6E0B               	movwf	PORT_Output@display1^0,c
  1106                           
  1107                           ;main.c: 143:     unsigned char display2 = 0;
  1108   002010  0E00               	movlw	0
  1109   002012  6E0C               	movwf	PORT_Output@display2^0,c
  1110   002014                     
  1111                           ;main.c: 147:     first_dig = answer/10;
  1112   002014  C00A  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1113   002018  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1114   00201A  0E00               	movlw	0
  1115   00201C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1116   00201E  0E0A               	movlw	10
  1117   002020  6E03               	movwf	___awdiv@divisor^0,c
  1118   002022  EC14  F012         	call	___awdiv	;wreg free
  1119   002026  5001               	movf	?___awdiv^0,w,c
  1120   002028  6E0D               	movwf	PORT_Output@first_dig^0,c
  1121                           
  1122                           ;main.c: 148:     second_dig = answer % 10;
  1123   00202A  C00A  F001         	movff	PORT_Output@answer,___awmod@dividend
  1124   00202E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1125   002030  0E00               	movlw	0
  1126   002032  6E04               	movwf	(___awmod@divisor+1)^0,c
  1127   002034  0E0A               	movlw	10
  1128   002036  6E03               	movwf	___awmod@divisor^0,c
  1129   002038  EC76  F012         	call	___awmod	;wreg free
  1130   00203C  5001               	movf	?___awmod^0,w,c
  1131   00203E  6E0E               	movwf	PORT_Output@second_dig^0,c
  1132   002040                     
  1133                           ;main.c: 150:     if(first_dig == 0) display1 = 0xC0;
  1134   002040  500D               	movf	PORT_Output@first_dig^0,w,c
  1135   002042  A4D8               	btfss	status,2,c
  1136   002044  EF26  F010         	goto	u871
  1137   002048  EF28  F010         	goto	u870
  1138   00204C                     u871:
  1139   00204C  EF2A  F010         	goto	l1315
  1140   002050                     u870:
  1141   002050  0EC0               	movlw	192
  1142   002052  6E0B               	movwf	PORT_Output@display1^0,c
  1143   002054                     l1315:
  1144                           
  1145                           ;main.c: 151:     if(first_dig == 1) display1 = 0xF9;
  1146   002054  040D               	decf	PORT_Output@first_dig^0,w,c
  1147   002056  A4D8               	btfss	status,2,c
  1148   002058  EF30  F010         	goto	u881
  1149   00205C  EF32  F010         	goto	u880
  1150   002060                     u881:
  1151   002060  EF34  F010         	goto	l1319
  1152   002064                     u880:
  1153   002064  0EF9               	movlw	249
  1154   002066  6E0B               	movwf	PORT_Output@display1^0,c
  1155   002068                     l1319:
  1156                           
  1157                           ;main.c: 152:     if(first_dig == 2) display1 = 0xA4;
  1158   002068  0E02               	movlw	2
  1159   00206A  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1160   00206C  A4D8               	btfss	status,2,c
  1161   00206E  EF3B  F010         	goto	u891
  1162   002072  EF3D  F010         	goto	u890
  1163   002076                     u891:
  1164   002076  EF3F  F010         	goto	l1323
  1165   00207A                     u890:
  1166   00207A  0EA4               	movlw	164
  1167   00207C  6E0B               	movwf	PORT_Output@display1^0,c
  1168   00207E                     l1323:
  1169                           
  1170                           ;main.c: 153:     if(first_dig == 3) display1 = 0xB0;
  1171   00207E  0E03               	movlw	3
  1172   002080  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1173   002082  A4D8               	btfss	status,2,c
  1174   002084  EF46  F010         	goto	u901
  1175   002088  EF48  F010         	goto	u900
  1176   00208C                     u901:
  1177   00208C  EF4A  F010         	goto	l1327
  1178   002090                     u900:
  1179   002090  0EB0               	movlw	176
  1180   002092  6E0B               	movwf	PORT_Output@display1^0,c
  1181   002094                     l1327:
  1182                           
  1183                           ;main.c: 154:     if(first_dig == 4) display1 = 0x99;
  1184   002094  0E04               	movlw	4
  1185   002096  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1186   002098  A4D8               	btfss	status,2,c
  1187   00209A  EF51  F010         	goto	u911
  1188   00209E  EF53  F010         	goto	u910
  1189   0020A2                     u911:
  1190   0020A2  EF55  F010         	goto	l1331
  1191   0020A6                     u910:
  1192   0020A6  0E99               	movlw	153
  1193   0020A8  6E0B               	movwf	PORT_Output@display1^0,c
  1194   0020AA                     l1331:
  1195                           
  1196                           ;main.c: 155:     if(first_dig == 5) display1 = 0x92;
  1197   0020AA  0E05               	movlw	5
  1198   0020AC  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1199   0020AE  A4D8               	btfss	status,2,c
  1200   0020B0  EF5C  F010         	goto	u921
  1201   0020B4  EF5E  F010         	goto	u920
  1202   0020B8                     u921:
  1203   0020B8  EF60  F010         	goto	l1335
  1204   0020BC                     u920:
  1205   0020BC  0E92               	movlw	146
  1206   0020BE  6E0B               	movwf	PORT_Output@display1^0,c
  1207   0020C0                     l1335:
  1208                           
  1209                           ;main.c: 156:     if(first_dig == 6) display1 = 0x82;
  1210   0020C0  0E06               	movlw	6
  1211   0020C2  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1212   0020C4  A4D8               	btfss	status,2,c
  1213   0020C6  EF67  F010         	goto	u931
  1214   0020CA  EF69  F010         	goto	u930
  1215   0020CE                     u931:
  1216   0020CE  EF6B  F010         	goto	l1339
  1217   0020D2                     u930:
  1218   0020D2  0E82               	movlw	130
  1219   0020D4  6E0B               	movwf	PORT_Output@display1^0,c
  1220   0020D6                     l1339:
  1221                           
  1222                           ;main.c: 157:     if(first_dig == 7) display1 = 0xF8;
  1223   0020D6  0E07               	movlw	7
  1224   0020D8  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1225   0020DA  A4D8               	btfss	status,2,c
  1226   0020DC  EF72  F010         	goto	u941
  1227   0020E0  EF74  F010         	goto	u940
  1228   0020E4                     u941:
  1229   0020E4  EF76  F010         	goto	l1343
  1230   0020E8                     u940:
  1231   0020E8  0EF8               	movlw	248
  1232   0020EA  6E0B               	movwf	PORT_Output@display1^0,c
  1233   0020EC                     l1343:
  1234                           
  1235                           ;main.c: 158:     if(first_dig == 8) display1 = 0x80;
  1236   0020EC  0E08               	movlw	8
  1237   0020EE  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1238   0020F0  A4D8               	btfss	status,2,c
  1239   0020F2  EF7D  F010         	goto	u951
  1240   0020F6  EF7F  F010         	goto	u950
  1241   0020FA                     u951:
  1242   0020FA  EF81  F010         	goto	l1347
  1243   0020FE                     u950:
  1244   0020FE  0E80               	movlw	128
  1245   002100  6E0B               	movwf	PORT_Output@display1^0,c
  1246   002102                     l1347:
  1247                           
  1248                           ;main.c: 159:     if(first_dig == 9) display1 = 0x98;
  1249   002102  0E09               	movlw	9
  1250   002104  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1251   002106  A4D8               	btfss	status,2,c
  1252   002108  EF88  F010         	goto	u961
  1253   00210C  EF8A  F010         	goto	u960
  1254   002110                     u961:
  1255   002110  EF8C  F010         	goto	l113
  1256   002114                     u960:
  1257   002114  0E98               	movlw	152
  1258   002116  6E0B               	movwf	PORT_Output@display1^0,c
  1259   002118                     l113:
  1260                           
  1261                           ;main.c: 161:     if(second_dig == 0) display2 = 0xC0;
  1262   002118  500E               	movf	PORT_Output@second_dig^0,w,c
  1263   00211A  A4D8               	btfss	status,2,c
  1264   00211C  EF92  F010         	goto	u971
  1265   002120  EF94  F010         	goto	u970
  1266   002124                     u971:
  1267   002124  EF96  F010         	goto	l1353
  1268   002128                     u970:
  1269   002128  0EC0               	movlw	192
  1270   00212A  6E0C               	movwf	PORT_Output@display2^0,c
  1271   00212C                     l1353:
  1272                           
  1273                           ;main.c: 162:     if(second_dig == 1) display2 = 0xF9;
  1274   00212C  040E               	decf	PORT_Output@second_dig^0,w,c
  1275   00212E  A4D8               	btfss	status,2,c
  1276   002130  EF9C  F010         	goto	u981
  1277   002134  EF9E  F010         	goto	u980
  1278   002138                     u981:
  1279   002138  EFA0  F010         	goto	l1357
  1280   00213C                     u980:
  1281   00213C  0EF9               	movlw	249
  1282   00213E  6E0C               	movwf	PORT_Output@display2^0,c
  1283   002140                     l1357:
  1284                           
  1285                           ;main.c: 163:     if(second_dig == 2) display2 = 0xA4;
  1286   002140  0E02               	movlw	2
  1287   002142  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1288   002144  A4D8               	btfss	status,2,c
  1289   002146  EFA7  F010         	goto	u991
  1290   00214A  EFA9  F010         	goto	u990
  1291   00214E                     u991:
  1292   00214E  EFAB  F010         	goto	l1361
  1293   002152                     u990:
  1294   002152  0EA4               	movlw	164
  1295   002154  6E0C               	movwf	PORT_Output@display2^0,c
  1296   002156                     l1361:
  1297                           
  1298                           ;main.c: 164:     if(second_dig == 3) display2 = 0xB0;
  1299   002156  0E03               	movlw	3
  1300   002158  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1301   00215A  A4D8               	btfss	status,2,c
  1302   00215C  EFB2  F010         	goto	u1001
  1303   002160  EFB4  F010         	goto	u1000
  1304   002164                     u1001:
  1305   002164  EFB6  F010         	goto	l1365
  1306   002168                     u1000:
  1307   002168  0EB0               	movlw	176
  1308   00216A  6E0C               	movwf	PORT_Output@display2^0,c
  1309   00216C                     l1365:
  1310                           
  1311                           ;main.c: 165:     if(second_dig == 4) display2 = 0x99;
  1312   00216C  0E04               	movlw	4
  1313   00216E  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1314   002170  A4D8               	btfss	status,2,c
  1315   002172  EFBD  F010         	goto	u1011
  1316   002176  EFBF  F010         	goto	u1010
  1317   00217A                     u1011:
  1318   00217A  EFC1  F010         	goto	l1369
  1319   00217E                     u1010:
  1320   00217E  0E99               	movlw	153
  1321   002180  6E0C               	movwf	PORT_Output@display2^0,c
  1322   002182                     l1369:
  1323                           
  1324                           ;main.c: 166:     if(second_dig == 5) display2 = 0x92;
  1325   002182  0E05               	movlw	5
  1326   002184  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1327   002186  A4D8               	btfss	status,2,c
  1328   002188  EFC8  F010         	goto	u1021
  1329   00218C  EFCA  F010         	goto	u1020
  1330   002190                     u1021:
  1331   002190  EFCC  F010         	goto	l1373
  1332   002194                     u1020:
  1333   002194  0E92               	movlw	146
  1334   002196  6E0C               	movwf	PORT_Output@display2^0,c
  1335   002198                     l1373:
  1336                           
  1337                           ;main.c: 167:     if(second_dig == 6) display2 = 0x82;
  1338   002198  0E06               	movlw	6
  1339   00219A  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1340   00219C  A4D8               	btfss	status,2,c
  1341   00219E  EFD3  F010         	goto	u1031
  1342   0021A2  EFD5  F010         	goto	u1030
  1343   0021A6                     u1031:
  1344   0021A6  EFD7  F010         	goto	l1377
  1345   0021AA                     u1030:
  1346   0021AA  0E82               	movlw	130
  1347   0021AC  6E0C               	movwf	PORT_Output@display2^0,c
  1348   0021AE                     l1377:
  1349                           
  1350                           ;main.c: 168:     if(second_dig == 7) display2 = 0xF8;
  1351   0021AE  0E07               	movlw	7
  1352   0021B0  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1353   0021B2  A4D8               	btfss	status,2,c
  1354   0021B4  EFDE  F010         	goto	u1041
  1355   0021B8  EFE0  F010         	goto	u1040
  1356   0021BC                     u1041:
  1357   0021BC  EFE2  F010         	goto	l1381
  1358   0021C0                     u1040:
  1359   0021C0  0EF8               	movlw	248
  1360   0021C2  6E0C               	movwf	PORT_Output@display2^0,c
  1361   0021C4                     l1381:
  1362                           
  1363                           ;main.c: 169:     if(second_dig == 8) display2 = 0x80;
  1364   0021C4  0E08               	movlw	8
  1365   0021C6  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1366   0021C8  A4D8               	btfss	status,2,c
  1367   0021CA  EFE9  F010         	goto	u1051
  1368   0021CE  EFEB  F010         	goto	u1050
  1369   0021D2                     u1051:
  1370   0021D2  EFED  F010         	goto	l1385
  1371   0021D6                     u1050:
  1372   0021D6  0E80               	movlw	128
  1373   0021D8  6E0C               	movwf	PORT_Output@display2^0,c
  1374   0021DA                     l1385:
  1375                           
  1376                           ;main.c: 170:     if(second_dig == 9) display2 = 0x98;
  1377   0021DA  0E09               	movlw	9
  1378   0021DC  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1379   0021DE  A4D8               	btfss	status,2,c
  1380   0021E0  EFF4  F010         	goto	u1061
  1381   0021E4  EFF6  F010         	goto	u1060
  1382   0021E8                     u1061:
  1383   0021E8  EFF8  F010         	goto	l1389
  1384   0021EC                     u1060:
  1385   0021EC  0E98               	movlw	152
  1386   0021EE  6E0C               	movwf	PORT_Output@display2^0,c
  1387   0021F0                     l1389:
  1388                           
  1389                           ;main.c: 172:     PORTBbits.RB2 = 1;
  1390   0021F0  84CB               	bsf	203,2,c	;volatile
  1391                           
  1392                           ;main.c: 173:     while (PORTAbits.RA3 == 0){
  1393   0021F2  EFFD  F010         	goto	l1393
  1394   0021F6                     l1391:
  1395                           
  1396                           ;main.c: 174:         PORTD = 0;
  1397   0021F6  0E00               	movlw	0
  1398   0021F8  6ECD               	movwf	205,c	;volatile
  1399   0021FA                     l1393:
  1400                           
  1401                           ;main.c: 173:     while (PORTAbits.RA3 == 0){
  1402   0021FA  A6CA               	btfss	202,3,c	;volatile
  1403   0021FC  EF02  F011         	goto	u1071
  1404   002200  EF04  F011         	goto	u1070
  1405   002204                     u1071:
  1406   002204  EFFB  F010         	goto	l1391
  1407   002208                     u1070:
  1408   002208                     
  1409                           ;main.c: 177:     for(i = 1; i<10000; i++)
  1410   002208  0E01               	movlw	1
  1411   00220A  6E09               	movwf	PORT_Output@i^0,c
  1412   00220C                     l127:
  1413                           
  1414                           ;main.c: 178:     {;main.c: 179:         PORTBbits.RB5 = 1;
  1415   00220C  8ACB               	bsf	203,5,c	;volatile
  1416                           
  1417                           ;main.c: 180:         PORTD = display1;
  1418   00220E  0060  F02F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1419                           
  1420                           ;main.c: 181:         PORTBbits.RB5 = 0;
  1421   002214  9ACB               	bcf	203,5,c	;volatile
  1422                           
  1423                           ;main.c: 182:         PORTBbits.RB6 = 1;
  1424   002216  8CCB               	bsf	203,6,c	;volatile
  1425                           
  1426                           ;main.c: 183:         PORTD = display2;
  1427   002218  0060  F033  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1428                           
  1429                           ;main.c: 184:         PORTBbits.RB6 = 0;
  1430   00221E  9CCB               	bcf	203,6,c	;volatile
  1431   002220                     
  1432                           ;main.c: 185:     }
  1433   002220  2A09               	incf	PORT_Output@i^0,f,c
  1434   002222  EF06  F011         	goto	l127
  1435   002226  0012               	return		;funcret
  1436   002228                     __end_of_PORT_Output:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function ___awmod *****************
  1440 ;; Defined at:
  1441 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  dividend        2    0[COMRAM] int 
  1444 ;;  divisor         2    2[COMRAM] int 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  sign            1    5[COMRAM] unsigned char 
  1447 ;;  counter         1    4[COMRAM] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2    0[COMRAM] int 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1460 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1461 ;;Total ram usage:        6 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_PORT_Output
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text6
  1471   0024EC                     __ptext6:
  1472                           	callstack 0
  1473   0024EC                     ___awmod:
  1474                           	callstack 29
  1475   0024EC  0E00               	movlw	0
  1476   0024EE  6E06               	movwf	___awmod@sign^0,c
  1477   0024F0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1478   0024F2  EF7F  F012         	goto	u740
  1479   0024F6  EF7D  F012         	goto	u741
  1480   0024FA                     u741:
  1481   0024FA  EF85  F012         	goto	l1233
  1482   0024FE                     u740:
  1483   0024FE  6C01               	negf	___awmod@dividend^0,c
  1484   002500  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1485   002502  B0D8               	btfsc	status,0,c
  1486   002504  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1487   002506  0E01               	movlw	1
  1488   002508  6E06               	movwf	___awmod@sign^0,c
  1489   00250A                     l1233:
  1490   00250A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1491   00250C  EF8C  F012         	goto	u750
  1492   002510  EF8A  F012         	goto	u751
  1493   002514                     u751:
  1494   002514  EF90  F012         	goto	l1237
  1495   002518                     u750:
  1496   002518  6C03               	negf	___awmod@divisor^0,c
  1497   00251A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1498   00251C  B0D8               	btfsc	status,0,c
  1499   00251E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1500   002520                     l1237:
  1501   002520  5003               	movf	___awmod@divisor^0,w,c
  1502   002522  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1503   002524  B4D8               	btfsc	status,2,c
  1504   002526  EF97  F012         	goto	u761
  1505   00252A  EF99  F012         	goto	u760
  1506   00252E                     u761:
  1507   00252E  EFBD  F012         	goto	l1253
  1508   002532                     u760:
  1509   002532  0E01               	movlw	1
  1510   002534  6E05               	movwf	___awmod@counter^0,c
  1511   002536  EFA1  F012         	goto	l1243
  1512   00253A                     l1241:
  1513   00253A  90D8               	bcf	status,0,c
  1514   00253C  3603               	rlcf	___awmod@divisor^0,f,c
  1515   00253E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1516   002540  2A05               	incf	___awmod@counter^0,f,c
  1517   002542                     l1243:
  1518   002542  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1519   002544  EFA6  F012         	goto	u771
  1520   002548  EFA8  F012         	goto	u770
  1521   00254C                     u771:
  1522   00254C  EF9D  F012         	goto	l1241
  1523   002550                     u770:
  1524   002550                     l1245:
  1525   002550  5003               	movf	___awmod@divisor^0,w,c
  1526   002552  5C01               	subwf	___awmod@dividend^0,w,c
  1527   002554  5004               	movf	(___awmod@divisor+1)^0,w,c
  1528   002556  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1529   002558  A0D8               	btfss	status,0,c
  1530   00255A  EFB1  F012         	goto	u781
  1531   00255E  EFB3  F012         	goto	u780
  1532   002562                     u781:
  1533   002562  EFB7  F012         	goto	l1249
  1534   002566                     u780:
  1535   002566  5003               	movf	___awmod@divisor^0,w,c
  1536   002568  5E01               	subwf	___awmod@dividend^0,f,c
  1537   00256A  5004               	movf	(___awmod@divisor+1)^0,w,c
  1538   00256C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1539   00256E                     l1249:
  1540   00256E  90D8               	bcf	status,0,c
  1541   002570  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1542   002572  3203               	rrcf	___awmod@divisor^0,f,c
  1543   002574  2E05               	decfsz	___awmod@counter^0,f,c
  1544   002576  EFA8  F012         	goto	l1245
  1545   00257A                     l1253:
  1546   00257A  5006               	movf	___awmod@sign^0,w,c
  1547   00257C  B4D8               	btfsc	status,2,c
  1548   00257E  EFC3  F012         	goto	u791
  1549   002582  EFC5  F012         	goto	u790
  1550   002586                     u791:
  1551   002586  EFC9  F012         	goto	l1257
  1552   00258A                     u790:
  1553   00258A  6C01               	negf	___awmod@dividend^0,c
  1554   00258C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1555   00258E  B0D8               	btfsc	status,0,c
  1556   002590  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1557   002592                     l1257:
  1558   002592  C001  F001         	movff	___awmod@dividend,?___awmod
  1559   002596  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1560   00259A  0012               	return		;funcret
  1561   00259C                     __end_of___awmod:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function ___awdiv *****************
  1565 ;; Defined at:
  1566 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  dividend        2    0[COMRAM] int 
  1569 ;;  divisor         2    2[COMRAM] int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  quotient        2    6[COMRAM] int 
  1572 ;;  sign            1    5[COMRAM] unsigned char 
  1573 ;;  counter         1    4[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    0[COMRAM] int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1584 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1586 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1587 ;;Total ram usage:        8 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_PORT_Output
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text7
  1597   002428                     __ptext7:
  1598                           	callstack 0
  1599   002428                     ___awdiv:
  1600                           	callstack 29
  1601   002428  0E00               	movlw	0
  1602   00242A  6E06               	movwf	___awdiv@sign^0,c
  1603   00242C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1604   00242E  EF1D  F012         	goto	u680
  1605   002432  EF1B  F012         	goto	u681
  1606   002436                     u681:
  1607   002436  EF23  F012         	goto	l1189
  1608   00243A                     u680:
  1609   00243A  6C03               	negf	___awdiv@divisor^0,c
  1610   00243C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1611   00243E  B0D8               	btfsc	status,0,c
  1612   002440  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1613   002442  0E01               	movlw	1
  1614   002444  6E06               	movwf	___awdiv@sign^0,c
  1615   002446                     l1189:
  1616   002446  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1617   002448  EF2A  F012         	goto	u690
  1618   00244C  EF28  F012         	goto	u691
  1619   002450                     u691:
  1620   002450  EF30  F012         	goto	l1195
  1621   002454                     u690:
  1622   002454  6C01               	negf	___awdiv@dividend^0,c
  1623   002456  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1624   002458  B0D8               	btfsc	status,0,c
  1625   00245A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1626   00245C  0E01               	movlw	1
  1627   00245E  1A06               	xorwf	___awdiv@sign^0,f,c
  1628   002460                     l1195:
  1629   002460  0E00               	movlw	0
  1630   002462  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1631   002464  0E00               	movlw	0
  1632   002466  6E07               	movwf	___awdiv@quotient^0,c
  1633   002468  5003               	movf	___awdiv@divisor^0,w,c
  1634   00246A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1635   00246C  B4D8               	btfsc	status,2,c
  1636   00246E  EF3B  F012         	goto	u701
  1637   002472  EF3D  F012         	goto	u700
  1638   002476                     u701:
  1639   002476  EF65  F012         	goto	l1217
  1640   00247A                     u700:
  1641   00247A  0E01               	movlw	1
  1642   00247C  6E05               	movwf	___awdiv@counter^0,c
  1643   00247E  EF45  F012         	goto	l1203
  1644   002482                     l1201:
  1645   002482  90D8               	bcf	status,0,c
  1646   002484  3603               	rlcf	___awdiv@divisor^0,f,c
  1647   002486  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1648   002488  2A05               	incf	___awdiv@counter^0,f,c
  1649   00248A                     l1203:
  1650   00248A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1651   00248C  EF4A  F012         	goto	u711
  1652   002490  EF4C  F012         	goto	u710
  1653   002494                     u711:
  1654   002494  EF41  F012         	goto	l1201
  1655   002498                     u710:
  1656   002498                     l1205:
  1657   002498  90D8               	bcf	status,0,c
  1658   00249A  3607               	rlcf	___awdiv@quotient^0,f,c
  1659   00249C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1660   00249E  5003               	movf	___awdiv@divisor^0,w,c
  1661   0024A0  5C01               	subwf	___awdiv@dividend^0,w,c
  1662   0024A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1663   0024A4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1664   0024A6  A0D8               	btfss	status,0,c
  1665   0024A8  EF58  F012         	goto	u721
  1666   0024AC  EF5A  F012         	goto	u720
  1667   0024B0                     u721:
  1668   0024B0  EF5F  F012         	goto	l1213
  1669   0024B4                     u720:
  1670   0024B4  5003               	movf	___awdiv@divisor^0,w,c
  1671   0024B6  5E01               	subwf	___awdiv@dividend^0,f,c
  1672   0024B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1673   0024BA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1674   0024BC  8007               	bsf	___awdiv@quotient^0,0,c
  1675   0024BE                     l1213:
  1676   0024BE  90D8               	bcf	status,0,c
  1677   0024C0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1678   0024C2  3203               	rrcf	___awdiv@divisor^0,f,c
  1679   0024C4  2E05               	decfsz	___awdiv@counter^0,f,c
  1680   0024C6  EF4C  F012         	goto	l1205
  1681   0024CA                     l1217:
  1682   0024CA  5006               	movf	___awdiv@sign^0,w,c
  1683   0024CC  B4D8               	btfsc	status,2,c
  1684   0024CE  EF6B  F012         	goto	u731
  1685   0024D2  EF6D  F012         	goto	u730
  1686   0024D6                     u731:
  1687   0024D6  EF71  F012         	goto	l1221
  1688   0024DA                     u730:
  1689   0024DA  6C07               	negf	___awdiv@quotient^0,c
  1690   0024DC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1691   0024DE  B0D8               	btfsc	status,0,c
  1692   0024E0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1693   0024E2                     l1221:
  1694   0024E2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1695   0024E6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1696   0024EA  0012               	return		;funcret
  1697   0024EC                     __end_of___awdiv:
  1698                           	callstack 0
  1699                           
  1700                           	psect	smallconst
  1701   002000                     __psmallconst:
  1702                           	callstack 0
  1703   002000  00                 	db	0
  1704   002001  00                 	db	0	; dummy byte at the end
  1705   000000                     
  1706                           	psect	rparam
  1707   000000                     
  1708                           	psect	config
  1709                           
  1710                           ;Config register CONFIG1L @ 0x300000
  1711                           ;	External Oscillator Selection
  1712                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1713                           ;	Reset Oscillator Selection
  1714                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1715   300000                     	org	3145728
  1716   300000  F8                 	db	248
  1717                           
  1718                           ;Config register CONFIG1H @ 0x300001
  1719                           ;	Clock out Enable bit
  1720                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1721                           ;	PRLOCKED One-Way Set Enable bit
  1722                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1723                           ;	Clock Switch Enable bit
  1724                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1725                           ;	Fail-Safe Clock Monitor Enable bit
  1726                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1727   300001                     	org	3145729
  1728   300001  FF                 	db	255
  1729                           
  1730                           ;Config register CONFIG2L @ 0x300002
  1731                           ;	MCLR Enable bit
  1732                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1733                           ;	Power-up timer selection bits
  1734                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1735                           ;	Multi-vector enable bit
  1736                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1737                           ;	IVTLOCK bit One-way set enable bit
  1738                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1739                           ;	Low Power BOR Enable bit
  1740                           ;	LPBOREN = OFF, ULPBOR disabled
  1741                           ;	Brown-out Reset Enable bits
  1742                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1743   300002                     	org	3145730
  1744   300002  FF                 	db	255
  1745                           
  1746                           ;Config register CONFIG2H @ 0x300003
  1747                           ;	Brown-out Reset Voltage Selection bits
  1748                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1749                           ;	ZCD Disable bit
  1750                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1751                           ;	PPSLOCK bit One-Way Set Enable bit
  1752                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1753                           ;	Stack Full/Underflow Reset Enable bit
  1754                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1755                           ;	Debugger Enable bit
  1756                           ;	DEBUG = OFF, Background debugger disabled
  1757                           ;	Extended Instruction Set Enable bit
  1758                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1759   300003                     	org	3145731
  1760   300003  FF                 	db	255
  1761                           
  1762                           ;Config register CONFIG3L @ 0x300004
  1763                           ;	WDT Period selection bits
  1764                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1765                           ;	WDT operating mode
  1766                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1767   300004                     	org	3145732
  1768   300004  9F                 	db	159
  1769                           
  1770                           ;Config register CONFIG3H @ 0x300005
  1771                           ;	WDT Window Select bits
  1772                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1773                           ;	WDT input clock selector
  1774                           ;	WDTCCS = SC, Software Control
  1775   300005                     	org	3145733
  1776   300005  FF                 	db	255
  1777                           
  1778                           ;Config register CONFIG4L @ 0x300006
  1779                           ;	Boot Block Size selection bits
  1780                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1781                           ;	Boot Block enable bit
  1782                           ;	BBEN = OFF, Boot block disabled
  1783                           ;	Storage Area Flash enable bit
  1784                           ;	SAFEN = OFF, SAF disabled
  1785                           ;	Application Block write protection bit
  1786                           ;	WRTAPP = OFF, Application Block not write protected
  1787   300006                     	org	3145734
  1788   300006  FF                 	db	255
  1789                           
  1790                           ;Config register CONFIG4H @ 0x300007
  1791                           ;	Boot Block Write Protection bit
  1792                           ;	WRTB = OFF, Boot Block not write-protected
  1793                           ;	Configuration Register Write Protection bit
  1794                           ;	WRTC = OFF, Configuration registers not write-protected
  1795                           ;	Data EEPROM Write Protection bit
  1796                           ;	WRTD = OFF, Data EEPROM not write-protected
  1797                           ;	SAF Write protection bit
  1798                           ;	WRTSAF = OFF, SAF not Write Protected
  1799                           ;	Low Voltage Programming Enable bit
  1800                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1801   300007                     	org	3145735
  1802   300007  FF                 	db	255
  1803                           
  1804                           ;Config register CONFIG5L @ 0x300008
  1805                           ;	PFM and Data EEPROM Code Protection bit
  1806                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1807   300008                     	org	3145736
  1808   300008  FF                 	db	255
  1809                           
  1810                           ;Config register CONFIG5H @ 0x300009
  1811                           ;	unspecified, using default values
  1812   300009                     	org	3145737
  1813   300009  FF                 	db	255
  1814                           tosu	equ	0x3FFF
  1815                           tosh	equ	0x3FFE
  1816                           tosl	equ	0x3FFD
  1817                           stkptr	equ	0x3FFC
  1818                           pclatu	equ	0x3FFB
  1819                           pclath	equ	0x3FFA
  1820                           pcl	equ	0x3FF9
  1821                           tblptru	equ	0x3FF8
  1822                           tblptrh	equ	0x3FF7
  1823                           tblptrl	equ	0x3FF6
  1824                           tablat	equ	0x3FF5
  1825                           prodh	equ	0x3FF4
  1826                           prodl	equ	0x3FF3
  1827                           indf0	equ	0x3FEF
  1828                           postinc0	equ	0x3FEE
  1829                           postdec0	equ	0x3FED
  1830                           preinc0	equ	0x3FEC
  1831                           plusw0	equ	0x3FEB
  1832                           fsr0h	equ	0x3FEA
  1833                           fsr0l	equ	0x3FE9
  1834                           wreg	equ	0x3FE8
  1835                           indf1	equ	0x3FE7
  1836                           postinc1	equ	0x3FE6
  1837                           postdec1	equ	0x3FE5
  1838                           preinc1	equ	0x3FE4
  1839                           plusw1	equ	0x3FE3
  1840                           fsr1h	equ	0x3FE2
  1841                           fsr1l	equ	0x3FE1
  1842                           bsr	equ	0x3FE0
  1843                           indf2	equ	0x3FDF
  1844                           postinc2	equ	0x3FDE
  1845                           postdec2	equ	0x3FDD
  1846                           preinc2	equ	0x3FDC
  1847                           plusw2	equ	0x3FDB
  1848                           fsr2h	equ	0x3FDA
  1849                           fsr2l	equ	0x3FD9
  1850                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2243
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          6     6      0    1457
                                              8 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      13       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      13      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 16:20:13 2024

           PORT_Output@i 0009                       l51 26AC                       l71 2336  
                     l58 2238                       l83 2426                       l93 2618  
                     l86 25EE                       l87 25A4                       l96 2636  
                     l97 264E          ?_scan_operation 0001             ___awdiv@sign 0006  
                    l100 268A                      l113 2118                      l127 220C  
                    l363 24EA                      l376 259A                      l538 274A  
                    l911 2228                      l921 226C                      l913 2248  
                    l931 2286                      l923 2270                      l915 224C  
                    l941 22B8                      l933 2294                      l925 2272  
                    l917 225A                      l951 22D2                      l943 22BC  
                    l935 2298                      l927 2274                      l919 225E  
                    l953 22E0                      l945 22BE                      l937 22A6  
                    l929 2282                      l961 22F8                      l971 2346  
                    l963 230A                      l955 22E4                      l947 22C0  
                    l939 22AA                      l981 236E                      l973 234A  
                    l965 2322                      l957 22F2                      l949 22CE  
                    l991 2392                      l983 2370                      l975 2358  
                    l967 232A                      l959 22F6                      l993 2396  
                    l985 2372                      l977 235C                      l969 232E  
                    l995 23A4                      l987 2380                      l979 236A  
                    l997 23A8                      l989 2384                      l999 23B6  
                    u200 2294                      u201 2290                      u210 22A6  
                    u211 22A2                      u300 2380                      u220 22B8  
                    u301 237C                      u221 22B4                      u310 2392  
                    u230 22CE                      u311 238E                      u231 22CA  
                    u320 23A4                      u240 22E0                      u160 2248  
                    u400 25D8                      u321 23A0                      u241 22DC  
                    u161 2244                      u401 25D4                      u330 23B6  
                    u250 22F2                      u170 225A                      u410 25EA  
                    u331 23B2                      u251 22EE                      u171 2256  
                    u411 25E6                      u340 23CC                      u260 230A  
                    u180 226C                      u420 25FE                      u341 23C8  
                    u261 2306                      u181 2268                      u421 25FA  
                    u350 23DE                      u270 2346                      u190 2282  
                    u351 23DA                      u271 2342                      u191 227E  
                    u360 23F0                      u280 2358                      u361 23EC  
                    u281 2354                      u370 2408                      u290 236A  
                    u371 2404                      u291 2366                      u700 247A  
                    u380 25B4                      u701 2476                      u381 25B0  
                    u710 2498                      u390 25C6                      u711 2494  
                    u391 25C2                      u720 24B4                      u800 2706  
                    u721 24B0                      u801 2702                      u730 24DA  
                    u810 2722                      u731 24D6                      u811 271E  
                    u740 24FE                      u900 2090                      u820 2738  
                    u741 24FA                      u901 208C                      u821 2734  
                    u750 2518                      u910 20A6                      u830 2630  
                    u751 2514                      u911 20A2                      u831 262C  
                    u680 243A                      u760 2532                      u920 20BC  
                    u840 2648                      u681 2436                      u761 252E  
                    u921 20B8                      u841 2644                      u690 2454  
                    u770 2550                      u930 20D2                      u850 2660  
                    u691 2450                      u771 254C                      u931 20CE  
                    u851 265C                      u780 2566                      u940 20E8  
                    u860 267C                      u781 2562                      u941 20E4  
                    u861 2678                      u790 258A                      u950 20FE  
                    u870 2050                      u791 2586                      u951 20FA  
                    u871 204C                      u960 2114                      u880 2064  
                    u961 2110                      u881 2060                      u970 2128  
                    u890 207A                      u971 2124                      u891 2076  
                    u980 213C                      u981 2138                      u990 2152  
                    u991 214E             ___awmod@sign 0006                      wreg 3FE8  
                   l1001 23BA                     l1011 23DE                     l1003 23BC  
                   l1021 2408                     l1013 23E2                     l1005 23BE  
                   l1023 240C                     l1015 23F0                     l1007 23CC  
                   l1031 25B4                     l1201 2482                     l1025 2424  
                   l1017 23F4                     l1009 23D0                     l1041 25DC  
                   l1033 25B8                     l1211 24BC                     l1203 248A  
                   l1019 23F6                     l1043 25EA                     l1035 25C6  
                   l1221 24E2                     l1213 24BE                     l1205 2498  
                   l1301 2688                     l1045 25FE                     l1037 25CA  
                   l1029 259C                     l1215 24C4                     l1207 249E  
                   l1231 2506                     l1311 2040                     l1047 2616  
                   l1039 25D8                     l1209 24B4                     l1217 24CA  
                   l1241 253A                     l1233 250A                     l1225 24EC  
                   l1321 207A                     l1313 2050                     l1305 2004  
                   l1219 24DA                     l1251 2574                     l1243 2542  
                   l1235 2518                     l1227 24F0                     l1331 20AA  
                   l1323 207E                     l1315 2054                     l1411 26CC  
                   l1403 268C                     l1181 2428                     l1245 2550  
                   l1253 257A                     l1237 2520                     l1229 24FE  
                   l1341 20E8                     l1333 20BC                     l1325 2090  
                   l1317 2064                     l1309 2014                     l1261 26F2  
                   l1413 26D2                     l1405 268E                     l1191 2454  
                   l1183 242C                     l1255 258A                     l1247 2566  
                   l1239 2532                     l1351 2128                     l1343 20EC  
                   l1335 20C0                     l1327 2094                     l1319 2068  
                   l1271 2714                     l1263 26F6                     l1415 26E2  
                   l1407 26C0                     l1193 245C                     l1185 243A  
                   l1257 2592                     l1249 256E                     l1361 2156  
                   l1353 212C                     l1345 20FE                     l1337 20D2  
                   l1329 20A6                     l1281 2742                     l1273 2722  
                   l1265 2706                     l1409 26C6                     l1195 2460  
                   l1187 2442                     l1371 2194                     l1363 2168  
                   l1355 213C                     l1347 2102                     l1339 20D6  
                   l1275 2738                     l1267 270E                     l1283 2748  
                   l1291 2630                     l1197 2468                     l1189 2446  
                   l1381 21C4                     l1373 2198                     l1365 216C  
                   l1357 2140                     l1349 2114                     l1277 273C  
                   l1269 2712                     l1293 2648                     l1199 247A  
                   l1391 21F6                     l1383 21D6                     l1375 21AA  
                   l1367 217E                     l1359 2152                     l1279 273E  
                   l1295 2660                     l1287 261C                     l1393 21FA  
                   l1385 21DA                     l1377 21AE                     l1369 2182  
                   l1297 266A                     l1289 2620                     l1395 2208  
                   l1387 21EC                     l1379 21C0                     l1299 267C  
                   l1389 21F0                     l1399 2220                     u1000 2168  
                   u1001 2164                     u1010 217E                     u1011 217A  
                   u1020 2194                     u1021 2190                     u1030 21AA  
                   u1031 21A6                     u1040 21C0                     u1041 21BC  
                   u1050 21D6                     u1051 21D2                     u1107 2416  
                   u1060 21EC                     u1061 21E8                     u1070 2208  
                   u1071 2204                     u1087 2608                     u1097 2314  
                   _main 268C                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 24EC  
        __end_of___lbdiv 274C          __end_of___awmod 259C          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTB 3FCB                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISC 3FC4  
                  _TRISD 3FC5        PORT_Output@answer 000A                    status 3FD8  
        ___lbdiv@divisor 0001          ___lbdiv@counter 0003             ?_scan_number 0001  
        __initialization 274C             __end_of_main 26F0                   ??_main 000F  
          __activetblptr 0000         ___awdiv@dividend 0001                   _ANSELA 3A40  
                 _ANSELB 3A50                   _ANSELC 3A60                   _ANSELD 3A70  
              ??___awdiv 0005                ??___lbdiv 0002                ??___awmod 0005  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005             __mediumconst 0000             ?_PORT_Output 0001  
       ___lbdiv@dividend 0002               __accesstop 0060  __end_of__initialization 274C  
          ___rparam_used 0001         ??_scan_operation 0001           __pcstackCOMRAM 0001  
       scan_number@count 0004         scan_number@input 0006         ___lbdiv@quotient 0004  
            _X_Input_REG 0013              _Y_Input_REG 0012               __pnvCOMRAM 000F  
      __end_of_calculate 268C      PORT_Output@display1 000B      PORT_Output@display2 000C  
                __Hparam 0000               calculate@x 0008               calculate@y 0005  
                __Lparam 0000                  ___awdiv 2428                  ___lbdiv 26F0  
                ___awmod 24EC             __psmallconst 2000                  __pcinit 274C  
                __ramtop 2000                  __ptext0 268C                  __ptext1 259C  
                __ptext2 2228                  __ptext3 261A                  __ptext4 26F0  
                __ptext5 2002                  __ptext6 24EC                  __ptext7 2428  
       ___awmod@dividend 0001     end_of_initialization 274C                _PORTAbits 3FCA  
              _PORTBbits 3FCB                _PORTCbits 3FCC            _Operation_REG 0011  
      scan_number@button 0003      start_initialization 274C        scan_number@output 0005  
            _calculation 0010    PORT_Output@second_dig 000E                _calculate 261A  
          ??_scan_number 0001                 ?___awdiv 0001                 ?___lbdiv 0001  
               ?___awmod 0001              __smallconst 2000               ?_calculate 0005  
        calculate@output 0007      __end_of_scan_number 2428            ??_PORT_Output 0009  
   PORT_Output@first_dig 000D              calculate@op 0006                 __Hrparam 0000  
               __Lrparam 0000      __end_of_PORT_Output 2228              ??_calculate 0007  
            _scan_number 2228                 isa$xinst 0000           _scan_operation 259C  
     _Display_Result_REG 000F     scan_operation@op_key 0003   __end_of_scan_operation 261A  
            _PORT_Output 2002  
