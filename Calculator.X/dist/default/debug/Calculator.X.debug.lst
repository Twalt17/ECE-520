

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 13:46:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	nvCOMRAM
    57   00000F                     __pnvCOMRAM:
    58                           	callstack 0
    59   00000F                     _calculation:
    60                           	callstack 0
    61   00000F                     	ds	1
    62   000010                     _Operation_REG:
    63                           	callstack 0
    64   000010                     	ds	1
    65   000011                     _Y_Input_REG:
    66                           	callstack 0
    67   000011                     	ds	1
    68   000012                     _X_Input_REG:
    69                           	callstack 0
    70   000012                     	ds	1
    71   000000                     _ANSELA	set	14912
    72   000000                     _TRISA	set	16322
    73   000000                     _TRISD	set	16325
    74   000000                     _TRISB	set	16323
    75   000000                     _ANSELB	set	14928
    76   000000                     _ANSELD	set	14960
    77   000000                     _PORTAbits	set	16330
    78   000000                     _PORTBbits	set	16331
    79   000000                     _PORTD	set	16333
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   00270E                     __pcinit:
    85                           	callstack 0
    86   00270E                     start_initialization:
    87                           	callstack 0
    88   00270E                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (1 bytes)
    92   00270E  6A13               	clrf	__pbssCOMRAM& (0+255),c
    93   002710                     end_of_initialization:
    94                           	callstack 0
    95   002710                     __end_of__initialization:
    96                           	callstack 0
    97   002710  0100               	movlb	0
    98   002712  EF65  F013         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000013                     __pbssCOMRAM:
   102                           	callstack 0
   103   000013                     _Display_Result_REG:
   104                           	callstack 0
   105   000013                     	ds	1
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     ??_scan_number:
   111   000001                     ??_scan_operation:
   112   000001                     ?___awdiv:
   113                           	callstack 0
   114   000001                     ?___awmod:
   115                           	callstack 0
   116   000001                     ___lbdiv@divisor:
   117                           	callstack 0
   118   000001                     ___awdiv@dividend:
   119                           	callstack 0
   120   000001                     ___awmod@dividend:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124   000001                     	ds	1
   125   000002                     scan_number@button:
   126                           	callstack 0
   127   000002                     scan_operation@op_key:
   128                           	callstack 0
   129   000002                     ___lbdiv@dividend:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x1
   133   000002                     	ds	1
   134   000003                     scan_number@count:
   135                           	callstack 0
   136   000003                     ___lbdiv@counter:
   137                           	callstack 0
   138   000003                     ___awdiv@divisor:
   139                           	callstack 0
   140   000003                     ___awmod@divisor:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x2
   144   000003                     	ds	1
   145   000004                     scan_number@output:
   146                           	callstack 0
   147   000004                     ___lbdiv@quotient:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x3
   151   000004                     	ds	1
   152   000005                     scan_number@input:
   153                           	callstack 0
   154   000005                     calculate@y:
   155                           	callstack 0
   156   000005                     ___awdiv@counter:
   157                           	callstack 0
   158   000005                     ___awmod@counter:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x4
   162   000005                     	ds	1
   163   000006                     calculate@op:
   164                           	callstack 0
   165   000006                     ___awdiv@sign:
   166                           	callstack 0
   167   000006                     ___awmod@sign:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x5
   171   000006                     	ds	1
   172   000007                     calculate@output:
   173                           	callstack 0
   174   000007                     ___awdiv@quotient:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178   000007                     	ds	1
   179   000008                     calculate@x:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x7
   183   000008                     	ds	1
   184   000009                     PORT_Output@i:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x8
   188   000009                     	ds	1
   189   00000A                     PORT_Output@answer:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x9
   193   00000A                     	ds	1
   194   00000B                     PORT_Output@display1:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0xA
   198   00000B                     	ds	1
   199   00000C                     PORT_Output@display2:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xB
   203   00000C                     	ds	1
   204   00000D                     PORT_Output@first_dig:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xC
   208   00000D                     	ds	1
   209   00000E                     PORT_Output@second_dig:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0xD
   213   00000E                     	ds	1
   214   00000F                     
   215                           ; 1 bytes @ 0xE
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 25 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 2
   241 ;; This function calls:
   242 ;;		_PORT_Output
   243 ;;		_calculate
   244 ;;		_scan_number
   245 ;;		_scan_operation
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252   0026CA                     __ptext0:
   253                           	callstack 0
   254   0026CA                     _main:
   255                           	callstack 29
   256   0026CA                     
   257                           ;main.c: 26:     TRISA = 0xFF;
   258   0026CA  68C2               	setf	194,c	;volatile
   259   0026CC                     
   260                           ;main.c: 27:     ANSELA = 0;
   261   0026CC  0E00               	movlw	0
   262   0026CE  013A               	movlb	58	; () banked
   263   0026D0  6F40               	movwf	64,b	;volatile
   264                           
   265                           ;main.c: 28:     TRISB = 0;
   266   0026D2  0E00               	movlw	0
   267   0026D4  6EC3               	movwf	195,c	;volatile
   268                           
   269                           ;main.c: 29:     ANSELB = 0;
   270   0026D6  0E00               	movlw	0
   271   0026D8  6F50               	movwf	80,b	;volatile
   272                           
   273                           ;main.c: 30:     ANSELD = 0;
   274   0026DA  0E00               	movlw	0
   275   0026DC  6F70               	movwf	112,b	;volatile
   276                           
   277                           ;main.c: 31:     TRISD = 0;
   278   0026DE  0E00               	movlw	0
   279   0026E0  6EC5               	movwf	197,c	;volatile
   280   0026E2                     
   281                           ; BSR set to: 58
   282                           ;main.c: 33:     X_Input_REG = scan_number();
   283   0026E2  EC14  F011         	call	_scan_number	;wreg free
   284   0026E6  6E12               	movwf	_X_Input_REG^0,c
   285   0026E8                     
   286                           ;main.c: 34:     Operation_REG = scan_operation();
   287   0026E8  ECC4  F012         	call	_scan_operation	;wreg free
   288   0026EC  6E10               	movwf	_Operation_REG^0,c
   289   0026EE                     
   290                           ;main.c: 35:     Y_Input_REG = scan_number();
   291   0026EE  EC14  F011         	call	_scan_number	;wreg free
   292   0026F2  6E11               	movwf	_Y_Input_REG^0,c
   293   0026F4                     
   294                           ;main.c: 36:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   295   0026F4  C011  F005         	movff	_Y_Input_REG,calculate@y
   296   0026F8  C010  F006         	movff	_Operation_REG,calculate@op
   297   0026FC  5012               	movf	_X_Input_REG^0,w,c
   298   0026FE  ECFE  F012         	call	_calculate
   299   002702  6E0F               	movwf	_calculation^0,c
   300   002704                     
   301                           ;main.c: 37:     PORT_Output(calculation);
   302   002704  500F               	movf	_calculation^0,w,c
   303   002706  EC01  F010         	call	_PORT_Output
   304   00270A  EFFE  F0FF         	goto	start
   305   00270E                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _scan_operation *****************
   309 ;; Defined at:
   310 ;;		line 101 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  op_key          1    1[COMRAM] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      unsigned char 
   317 ;; Registers used:
   318 ;;		wreg, status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;Total ram usage:        2 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338   002588                     __ptext1:
   339                           	callstack 0
   340   002588                     _scan_operation:
   341                           	callstack 30
   342   002588                     
   343                           ;main.c: 102:     unsigned char op_key = 0;
   344   002588  0E00               	movlw	0
   345   00258A  6E02               	movwf	scan_operation@op_key^0,c
   346                           
   347                           ;main.c: 103:     while (op_key ==0) {
   348   00258C  EFED  F012         	goto	l75
   349   002590                     l76:
   350                           
   351                           ;main.c: 104:      PORTBbits.RB0 = 1;
   352   002590  80CB               	bsf	203,0,c	;volatile
   353                           
   354                           ;main.c: 105:         if(PORTAbits.RA0 == 1) op_key = 1;
   355   002592  A0CA               	btfss	202,0,c	;volatile
   356   002594  EFCE  F012         	goto	u381
   357   002598  EFD0  F012         	goto	u380
   358   00259C                     u381:
   359   00259C  EFD2  F012         	goto	l1022
   360   0025A0                     u380:
   361   0025A0  0E01               	movlw	1
   362   0025A2  6E02               	movwf	scan_operation@op_key^0,c
   363   0025A4                     l1022:
   364                           
   365                           ;main.c: 106:         if(PORTAbits.RA1 == 1) op_key = 2;
   366   0025A4  A2CA               	btfss	202,1,c	;volatile
   367   0025A6  EFD7  F012         	goto	u391
   368   0025AA  EFD9  F012         	goto	u390
   369   0025AE                     u391:
   370   0025AE  EFDB  F012         	goto	l1026
   371   0025B2                     u390:
   372   0025B2  0E02               	movlw	2
   373   0025B4  6E02               	movwf	scan_operation@op_key^0,c
   374   0025B6                     l1026:
   375                           
   376                           ;main.c: 107:         if(PORTAbits.RA2 == 1) op_key = 3;
   377   0025B6  A4CA               	btfss	202,2,c	;volatile
   378   0025B8  EFE0  F012         	goto	u401
   379   0025BC  EFE2  F012         	goto	u400
   380   0025C0                     u401:
   381   0025C0  EFE4  F012         	goto	l1030
   382   0025C4                     u400:
   383   0025C4  0E03               	movlw	3
   384   0025C6  6E02               	movwf	scan_operation@op_key^0,c
   385   0025C8                     l1030:
   386                           
   387                           ;main.c: 108:         if(PORTAbits.RA3 == 1) op_key = 4;
   388   0025C8  A6CA               	btfss	202,3,c	;volatile
   389   0025CA  EFE9  F012         	goto	u411
   390   0025CE  EFEB  F012         	goto	u410
   391   0025D2                     u411:
   392   0025D2  EFED  F012         	goto	l75
   393   0025D6                     u410:
   394   0025D6  0E04               	movlw	4
   395   0025D8  6E02               	movwf	scan_operation@op_key^0,c
   396   0025DA                     l75:
   397                           
   398                           ;main.c: 103:     while (op_key ==0) {
   399   0025DA  5002               	movf	scan_operation@op_key^0,w,c
   400   0025DC  B4D8               	btfsc	status,2,c
   401   0025DE  EFF3  F012         	goto	u421
   402   0025E2  EFF5  F012         	goto	u420
   403   0025E6                     u421:
   404   0025E6  EFC8  F012         	goto	l76
   405   0025EA                     u420:
   406   0025EA                     
   407                           ;main.c: 110:         _delay((unsigned long)((1)*(8000000/4000.0)));
   408   0025EA  0E03               	movlw	3
   409   0025EC  6E01               	movwf	??_scan_operation^0,c
   410   0025EE  0E98               	movlw	152
   411   0025F0                     u1087:
   412   0025F0  2EE8               	decfsz	wreg,f,c
   413   0025F2  D7FE               	bra	u1087
   414   0025F4  2E01               	decfsz	??_scan_operation^0,f,c
   415   0025F6  D7FC               	bra	u1087
   416   0025F8                     
   417                           ;main.c: 111:         return op_key;
   418   0025F8  5002               	movf	scan_operation@op_key^0,w,c
   419   0025FA  0012               	return		;funcret
   420   0025FC                     __end_of_scan_operation:
   421                           	callstack 0
   422                           
   423 ;; *************** function _scan_number *****************
   424 ;; Defined at:
   425 ;;		line 41 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  input           1    4[COMRAM] unsigned char 
   430 ;;  output          1    3[COMRAM] unsigned char 
   431 ;;  count           1    2[COMRAM] unsigned char 
   432 ;;  button          1    1[COMRAM] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      unsigned char 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, prodl, prodh
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   443 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   446 ;;Total ram usage:        5 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text2
   456   002228                     __ptext2:
   457                           	callstack 0
   458   002228                     _scan_number:
   459                           	callstack 30
   460   002228                     
   461                           ;main.c: 42:     unsigned char input = 10;
   462   002228  0E0A               	movlw	10
   463   00222A  6E05               	movwf	scan_number@input^0,c
   464                           
   465                           ;main.c: 44:     unsigned char button = 0;
   466   00222C  0E00               	movlw	0
   467   00222E  6E02               	movwf	scan_number@button^0,c
   468                           
   469                           ;main.c: 45:     unsigned char count = 2;
   470   002230  0E02               	movlw	2
   471   002232  6E03               	movwf	scan_number@count^0,c
   472                           
   473                           ;main.c: 47:     while (input == 10)
   474   002234  EF7C  F011         	goto	l950
   475   002238                     l47:
   476                           
   477                           ;main.c: 48:     {;main.c: 49:         PORTBbits.RB0 = 1;
   478   002238  80CB               	bsf	203,0,c	;volatile
   479                           
   480                           ;main.c: 50:         if (PORTAbits.RA0 == 1)input = 1;
   481   00223A  A0CA               	btfss	202,0,c	;volatile
   482   00223C  EF22  F011         	goto	u161
   483   002240  EF24  F011         	goto	u160
   484   002244                     u161:
   485   002244  EF26  F011         	goto	l904
   486   002248                     u160:
   487   002248  0E01               	movlw	1
   488   00224A  6E05               	movwf	scan_number@input^0,c
   489   00224C                     l904:
   490                           
   491                           ;main.c: 51:         if(PORTAbits.RA1 == 1) input = 4;
   492   00224C  A2CA               	btfss	202,1,c	;volatile
   493   00224E  EF2B  F011         	goto	u171
   494   002252  EF2D  F011         	goto	u170
   495   002256                     u171:
   496   002256  EF2F  F011         	goto	l908
   497   00225A                     u170:
   498   00225A  0E04               	movlw	4
   499   00225C  6E05               	movwf	scan_number@input^0,c
   500   00225E                     l908:
   501                           
   502                           ;main.c: 52:         if(PORTAbits.RA2 == 1) input = 7;
   503   00225E  A4CA               	btfss	202,2,c	;volatile
   504   002260  EF34  F011         	goto	u181
   505   002264  EF36  F011         	goto	u180
   506   002268                     u181:
   507   002268  EF38  F011         	goto	l912
   508   00226C                     u180:
   509   00226C  0E07               	movlw	7
   510   00226E  6E05               	movwf	scan_number@input^0,c
   511   002270                     l912:
   512                           
   513                           ;main.c: 53:         PORTBbits.RB0 = 0;
   514   002270  90CB               	bcf	203,0,c	;volatile
   515   002272                     
   516                           ;main.c: 55:          PORTBbits.RB1 = 1;
   517   002272  82CB               	bsf	203,1,c	;volatile
   518   002274                     
   519                           ;main.c: 56:         if (PORTAbits.RA0 == 1)input = 2;
   520   002274  A0CA               	btfss	202,0,c	;volatile
   521   002276  EF3F  F011         	goto	u191
   522   00227A  EF41  F011         	goto	u190
   523   00227E                     u191:
   524   00227E  EF43  F011         	goto	l920
   525   002282                     u190:
   526   002282  0E02               	movlw	2
   527   002284  6E05               	movwf	scan_number@input^0,c
   528   002286                     l920:
   529                           
   530                           ;main.c: 57:         if(PORTAbits.RA1 == 1) input = 5;
   531   002286  A2CA               	btfss	202,1,c	;volatile
   532   002288  EF48  F011         	goto	u201
   533   00228C  EF4A  F011         	goto	u200
   534   002290                     u201:
   535   002290  EF4C  F011         	goto	l924
   536   002294                     u200:
   537   002294  0E05               	movlw	5
   538   002296  6E05               	movwf	scan_number@input^0,c
   539   002298                     l924:
   540                           
   541                           ;main.c: 58:         if(PORTAbits.RA2 == 1) input = 8;
   542   002298  A4CA               	btfss	202,2,c	;volatile
   543   00229A  EF51  F011         	goto	u211
   544   00229E  EF53  F011         	goto	u210
   545   0022A2                     u211:
   546   0022A2  EF55  F011         	goto	l928
   547   0022A6                     u210:
   548   0022A6  0E08               	movlw	8
   549   0022A8  6E05               	movwf	scan_number@input^0,c
   550   0022AA                     l928:
   551                           
   552                           ;main.c: 59:         if(PORTAbits.RA3 == 1) input = 0;
   553   0022AA  A6CA               	btfss	202,3,c	;volatile
   554   0022AC  EF5A  F011         	goto	u221
   555   0022B0  EF5C  F011         	goto	u220
   556   0022B4                     u221:
   557   0022B4  EF5E  F011         	goto	l932
   558   0022B8                     u220:
   559   0022B8  0E00               	movlw	0
   560   0022BA  6E05               	movwf	scan_number@input^0,c
   561   0022BC                     l932:
   562                           
   563                           ;main.c: 60:         PORTBbits.RB1 = 0;
   564   0022BC  92CB               	bcf	203,1,c	;volatile
   565   0022BE                     
   566                           ;main.c: 62:          PORTBbits.RB2 = 1;
   567   0022BE  84CB               	bsf	203,2,c	;volatile
   568   0022C0                     
   569                           ;main.c: 63:         if (PORTAbits.RA0 == 1)input = 3;
   570   0022C0  A0CA               	btfss	202,0,c	;volatile
   571   0022C2  EF65  F011         	goto	u231
   572   0022C6  EF67  F011         	goto	u230
   573   0022CA                     u231:
   574   0022CA  EF69  F011         	goto	l940
   575   0022CE                     u230:
   576   0022CE  0E03               	movlw	3
   577   0022D0  6E05               	movwf	scan_number@input^0,c
   578   0022D2                     l940:
   579                           
   580                           ;main.c: 64:         if(PORTAbits.RA1 == 1) input = 6;
   581   0022D2  A2CA               	btfss	202,1,c	;volatile
   582   0022D4  EF6E  F011         	goto	u241
   583   0022D8  EF70  F011         	goto	u240
   584   0022DC                     u241:
   585   0022DC  EF72  F011         	goto	l944
   586   0022E0                     u240:
   587   0022E0  0E06               	movlw	6
   588   0022E2  6E05               	movwf	scan_number@input^0,c
   589   0022E4                     l944:
   590                           
   591                           ;main.c: 65:         if(PORTAbits.RA2 == 1) input = 9;
   592   0022E4  A4CA               	btfss	202,2,c	;volatile
   593   0022E6  EF77  F011         	goto	u251
   594   0022EA  EF79  F011         	goto	u250
   595   0022EE                     u251:
   596   0022EE  EF7B  F011         	goto	l948
   597   0022F2                     u250:
   598   0022F2  0E09               	movlw	9
   599   0022F4  6E05               	movwf	scan_number@input^0,c
   600   0022F6                     l948:
   601                           
   602                           ;main.c: 66:         PORTBbits.RB2 = 0;
   603   0022F6  94CB               	bcf	203,2,c	;volatile
   604   0022F8                     l950:
   605                           
   606                           ;main.c: 47:     while (input == 10)
   607   0022F8  0E0A               	movlw	10
   608   0022FA  1805               	xorwf	scan_number@input^0,w,c
   609   0022FC  B4D8               	btfsc	status,2,c
   610   0022FE  EF83  F011         	goto	u261
   611   002302  EF85  F011         	goto	u260
   612   002306                     u261:
   613   002306  EF1C  F011         	goto	l47
   614   00230A                     u260:
   615   00230A                     
   616                           ;main.c: 69:     _delay((unsigned long)((1)*(8000000/4000.0)));
   617   00230A  0E03               	movlw	3
   618   00230C  6E01               	movwf	??_scan_number^0,c
   619   00230E  0E98               	movlw	152
   620   002310                     u1097:
   621   002310  2EE8               	decfsz	wreg,f,c
   622   002312  D7FE               	bra	u1097
   623   002314  2E01               	decfsz	??_scan_number^0,f,c
   624   002316  D7FC               	bra	u1097
   625   002318                     
   626                           ;main.c: 71:     input *=10;
   627   002318  0E0A               	movlw	10
   628   00231A  0205               	mulwf	scan_number@input^0,c
   629   00231C  50F3               	movf	prodl,w,c
   630   00231E  6E05               	movwf	scan_number@input^0,c
   631   002320                     
   632                           ;main.c: 72:     output = input;
   633   002320  C005  F004         	movff	scan_number@input,scan_number@output
   634   002324                     
   635                           ;main.c: 74:     input = 10;
   636   002324  0E0A               	movlw	10
   637   002326  6E05               	movwf	scan_number@input^0,c
   638                           
   639                           ;main.c: 75:     while (input == 10)
   640   002328  EFF6  F011         	goto	l1008
   641   00232C                     l60:
   642                           
   643                           ;main.c: 76:     {;main.c: 77:         PORTBbits.RB0 = 1;
   644   00232C  80CB               	bsf	203,0,c	;volatile
   645                           
   646                           ;main.c: 78:         if (PORTAbits.RA0 == 1)input = 1;
   647   00232E  A0CA               	btfss	202,0,c	;volatile
   648   002330  EF9C  F011         	goto	u271
   649   002334  EF9E  F011         	goto	u270
   650   002338                     u271:
   651   002338  EFA0  F011         	goto	l962
   652   00233C                     u270:
   653   00233C  0E01               	movlw	1
   654   00233E  6E05               	movwf	scan_number@input^0,c
   655   002340                     l962:
   656                           
   657                           ;main.c: 79:         if(PORTAbits.RA1 == 1) input = 4;
   658   002340  A2CA               	btfss	202,1,c	;volatile
   659   002342  EFA5  F011         	goto	u281
   660   002346  EFA7  F011         	goto	u280
   661   00234A                     u281:
   662   00234A  EFA9  F011         	goto	l966
   663   00234E                     u280:
   664   00234E  0E04               	movlw	4
   665   002350  6E05               	movwf	scan_number@input^0,c
   666   002352                     l966:
   667                           
   668                           ;main.c: 80:         if(PORTAbits.RA2 == 1) input = 7;
   669   002352  A4CA               	btfss	202,2,c	;volatile
   670   002354  EFAE  F011         	goto	u291
   671   002358  EFB0  F011         	goto	u290
   672   00235C                     u291:
   673   00235C  EFB2  F011         	goto	l970
   674   002360                     u290:
   675   002360  0E07               	movlw	7
   676   002362  6E05               	movwf	scan_number@input^0,c
   677   002364                     l970:
   678                           
   679                           ;main.c: 81:         PORTBbits.RB0 = 0;
   680   002364  90CB               	bcf	203,0,c	;volatile
   681   002366                     
   682                           ;main.c: 83:          PORTBbits.RB1 = 1;
   683   002366  82CB               	bsf	203,1,c	;volatile
   684   002368                     
   685                           ;main.c: 84:         if(PORTAbits.RA0 == 1) input = 2;
   686   002368  A0CA               	btfss	202,0,c	;volatile
   687   00236A  EFB9  F011         	goto	u301
   688   00236E  EFBB  F011         	goto	u300
   689   002372                     u301:
   690   002372  EFBD  F011         	goto	l978
   691   002376                     u300:
   692   002376  0E02               	movlw	2
   693   002378  6E05               	movwf	scan_number@input^0,c
   694   00237A                     l978:
   695                           
   696                           ;main.c: 85:         if(PORTAbits.RA1 == 1) input = 5;
   697   00237A  A2CA               	btfss	202,1,c	;volatile
   698   00237C  EFC2  F011         	goto	u311
   699   002380  EFC4  F011         	goto	u310
   700   002384                     u311:
   701   002384  EFC6  F011         	goto	l982
   702   002388                     u310:
   703   002388  0E05               	movlw	5
   704   00238A  6E05               	movwf	scan_number@input^0,c
   705   00238C                     l982:
   706                           
   707                           ;main.c: 86:         if(PORTAbits.RA2 == 1) input = 8;
   708   00238C  A4CA               	btfss	202,2,c	;volatile
   709   00238E  EFCB  F011         	goto	u321
   710   002392  EFCD  F011         	goto	u320
   711   002396                     u321:
   712   002396  EFCF  F011         	goto	l986
   713   00239A                     u320:
   714   00239A  0E08               	movlw	8
   715   00239C  6E05               	movwf	scan_number@input^0,c
   716   00239E                     l986:
   717                           
   718                           ;main.c: 87:         if(PORTAbits.RA3 == 1) input = 0;
   719   00239E  A6CA               	btfss	202,3,c	;volatile
   720   0023A0  EFD4  F011         	goto	u331
   721   0023A4  EFD6  F011         	goto	u330
   722   0023A8                     u331:
   723   0023A8  EFD8  F011         	goto	l990
   724   0023AC                     u330:
   725   0023AC  0E00               	movlw	0
   726   0023AE  6E05               	movwf	scan_number@input^0,c
   727   0023B0                     l990:
   728                           
   729                           ;main.c: 88:         PORTBbits.RB1 = 0;
   730   0023B0  92CB               	bcf	203,1,c	;volatile
   731   0023B2                     
   732                           ;main.c: 90:          PORTBbits.RB2 = 1;
   733   0023B2  84CB               	bsf	203,2,c	;volatile
   734   0023B4                     
   735                           ;main.c: 91:         if (PORTAbits.RA0 == 1)input = 3;
   736   0023B4  A0CA               	btfss	202,0,c	;volatile
   737   0023B6  EFDF  F011         	goto	u341
   738   0023BA  EFE1  F011         	goto	u340
   739   0023BE                     u341:
   740   0023BE  EFE3  F011         	goto	l998
   741   0023C2                     u340:
   742   0023C2  0E03               	movlw	3
   743   0023C4  6E05               	movwf	scan_number@input^0,c
   744   0023C6                     l998:
   745                           
   746                           ;main.c: 92:         if(PORTAbits.RA1 == 1) input = 6;
   747   0023C6  A2CA               	btfss	202,1,c	;volatile
   748   0023C8  EFE8  F011         	goto	u351
   749   0023CC  EFEA  F011         	goto	u350
   750   0023D0                     u351:
   751   0023D0  EFEC  F011         	goto	l1002
   752   0023D4                     u350:
   753   0023D4  0E06               	movlw	6
   754   0023D6  6E05               	movwf	scan_number@input^0,c
   755   0023D8                     l1002:
   756                           
   757                           ;main.c: 93:         if(PORTAbits.RA2 == 1) input = 9;
   758   0023D8  A4CA               	btfss	202,2,c	;volatile
   759   0023DA  EFF1  F011         	goto	u361
   760   0023DE  EFF3  F011         	goto	u360
   761   0023E2                     u361:
   762   0023E2  EFF5  F011         	goto	l1006
   763   0023E6                     u360:
   764   0023E6  0E09               	movlw	9
   765   0023E8  6E05               	movwf	scan_number@input^0,c
   766   0023EA                     l1006:
   767                           
   768                           ;main.c: 94:         PORTBbits.RB2 = 0;
   769   0023EA  94CB               	bcf	203,2,c	;volatile
   770   0023EC                     l1008:
   771                           
   772                           ;main.c: 75:     while (input == 10)
   773   0023EC  0E0A               	movlw	10
   774   0023EE  1805               	xorwf	scan_number@input^0,w,c
   775   0023F0  B4D8               	btfsc	status,2,c
   776   0023F2  EFFD  F011         	goto	u371
   777   0023F6  EFFF  F011         	goto	u370
   778   0023FA                     u371:
   779   0023FA  EF96  F011         	goto	l60
   780   0023FE                     u370:
   781   0023FE                     
   782                           ;main.c: 96:     output += input;
   783   0023FE  5005               	movf	scan_number@input^0,w,c
   784   002400  2604               	addwf	scan_number@output^0,f,c
   785   002402                     
   786                           ;main.c: 97:     _delay((unsigned long)((1)*(8000000/4000.0)));
   787   002402  0E03               	movlw	3
   788   002404  6E01               	movwf	??_scan_number^0,c
   789   002406  0E98               	movlw	152
   790   002408                     u1107:
   791   002408  2EE8               	decfsz	wreg,f,c
   792   00240A  D7FE               	bra	u1107
   793   00240C  2E01               	decfsz	??_scan_number^0,f,c
   794   00240E  D7FC               	bra	u1107
   795   002410                     
   796                           ;main.c: 98:     return output;
   797   002410  5004               	movf	scan_number@output^0,w,c
   798   002412  0012               	return		;funcret
   799   002414                     __end_of_scan_number:
   800                           	callstack 0
   801                           
   802 ;; *************** function _calculate *****************
   803 ;; Defined at:
   804 ;;		line 114 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  x               1    wreg     unsigned char 
   807 ;;  y               1    4[COMRAM] unsigned char 
   808 ;;  op              1    5[COMRAM] unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  x               1    7[COMRAM] unsigned char 
   811 ;;  output          1    6[COMRAM] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      unsigned char 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;Total ram usage:        4 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; Hardware stack levels required when called: 1
   828 ;; This function calls:
   829 ;;		___lbdiv
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text3
   836   0025FC                     __ptext3:
   837                           	callstack 0
   838   0025FC                     _calculate:
   839                           	callstack 29
   840                           
   841                           ;incstack = 0
   842                           ;calculate@x stored from wreg
   843   0025FC  6E08               	movwf	calculate@x^0,c
   844   0025FE                     
   845                           ;main.c: 115:     unsigned char output = 0;
   846   0025FE  0E00               	movlw	0
   847   002600  6E07               	movwf	calculate@output^0,c
   848   002602                     
   849                           ;main.c: 116:     if(op == 1)
   850   002602  0406               	decf	calculate@op^0,w,c
   851   002604  A4D8               	btfss	status,2,c
   852   002606  EF07  F013         	goto	u831
   853   00260A  EF09  F013         	goto	u830
   854   00260E                     u831:
   855   00260E  EF0C  F013         	goto	l85
   856   002612                     u830:
   857   002612                     
   858                           ;main.c: 117:         output = x + y;
   859   002612  5008               	movf	calculate@x^0,w,c
   860   002614  2405               	addwf	calculate@y^0,w,c
   861   002616  6E07               	movwf	calculate@output^0,c
   862   002618                     l85:
   863                           
   864                           ;main.c: 118:     if(op ==2)
   865   002618  0E02               	movlw	2
   866   00261A  1806               	xorwf	calculate@op^0,w,c
   867   00261C  A4D8               	btfss	status,2,c
   868   00261E  EF13  F013         	goto	u841
   869   002622  EF15  F013         	goto	u840
   870   002626                     u841:
   871   002626  EF18  F013         	goto	l86
   872   00262A                     u840:
   873   00262A                     
   874                           ;main.c: 119:         output = x-y;
   875   00262A  5005               	movf	calculate@y^0,w,c
   876   00262C  5C08               	subwf	calculate@x^0,w,c
   877   00262E  6E07               	movwf	calculate@output^0,c
   878   002630                     l86:
   879                           
   880                           ;main.c: 120:     if(op == 3)
   881   002630  0E03               	movlw	3
   882   002632  1806               	xorwf	calculate@op^0,w,c
   883   002634  A4D8               	btfss	status,2,c
   884   002636  EF1F  F013         	goto	u851
   885   00263A  EF21  F013         	goto	u850
   886   00263E                     u851:
   887   00263E  EF26  F013         	goto	l1288
   888   002642                     u850:
   889   002642                     
   890                           ;main.c: 121:         output = x*y;
   891   002642  5008               	movf	calculate@x^0,w,c
   892   002644  0205               	mulwf	calculate@y^0,c
   893   002646  006F FFCC  F007    	movff	prodl,calculate@output
   894   00264C                     l1288:
   895                           
   896                           ;main.c: 122:     if(op == 4)
   897   00264C  0E04               	movlw	4
   898   00264E  1806               	xorwf	calculate@op^0,w,c
   899   002650  A4D8               	btfss	status,2,c
   900   002652  EF2D  F013         	goto	u861
   901   002656  EF2F  F013         	goto	u860
   902   00265A                     u861:
   903   00265A  EF35  F013         	goto	l1292
   904   00265E                     u860:
   905   00265E                     
   906                           ;main.c: 123:         output = x/y;
   907   00265E  C005  F001         	movff	calculate@y,___lbdiv@divisor
   908   002662  5008               	movf	calculate@x^0,w,c
   909   002664  EC37  F013         	call	___lbdiv
   910   002668  6E07               	movwf	calculate@output^0,c
   911   00266A                     l1292:
   912                           
   913                           ;main.c: 124:     return output;
   914   00266A  5007               	movf	calculate@output^0,w,c
   915   00266C  0012               	return		;funcret
   916   00266E                     __end_of_calculate:
   917                           	callstack 0
   918                           
   919 ;; *************** function ___lbdiv *****************
   920 ;; Defined at:
   921 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  dividend        1    wreg     unsigned char 
   924 ;;  divisor         1    0[COMRAM] unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  dividend        1    1[COMRAM] unsigned char 
   927 ;;  quotient        1    3[COMRAM] unsigned char 
   928 ;;  counter         1    2[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      unsigned char 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   938 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   939 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   942 ;;Total ram usage:        4 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_calculate
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text4
   952   00266E                     __ptext4:
   953                           	callstack 0
   954   00266E                     ___lbdiv:
   955                           	callstack 29
   956                           
   957                           ;incstack = 0
   958                           ;___lbdiv@dividend stored from wreg
   959   00266E  6E02               	movwf	___lbdiv@dividend^0,c
   960   002670  0E00               	movlw	0
   961   002672  6E04               	movwf	___lbdiv@quotient^0,c
   962   002674  5001               	movf	___lbdiv@divisor^0,w,c
   963   002676  B4D8               	btfsc	status,2,c
   964   002678  EF40  F013         	goto	u801
   965   00267C  EF42  F013         	goto	u800
   966   002680                     u801:
   967   002680  EF63  F013         	goto	l1274
   968   002684                     u800:
   969   002684  0E01               	movlw	1
   970   002686  6E03               	movwf	___lbdiv@counter^0,c
   971   002688  EF49  F013         	goto	l1262
   972   00268C                     l1258:
   973   00268C  90D8               	bcf	status,0,c
   974   00268E  3601               	rlcf	___lbdiv@divisor^0,f,c
   975   002690  2A03               	incf	___lbdiv@counter^0,f,c
   976   002692                     l1262:
   977   002692  AE01               	btfss	___lbdiv@divisor^0,7,c
   978   002694  EF4E  F013         	goto	u811
   979   002698  EF50  F013         	goto	u810
   980   00269C                     u811:
   981   00269C  EF46  F013         	goto	l1258
   982   0026A0                     u810:
   983   0026A0                     l1264:
   984   0026A0  90D8               	bcf	status,0,c
   985   0026A2  3604               	rlcf	___lbdiv@quotient^0,f,c
   986   0026A4  5001               	movf	___lbdiv@divisor^0,w,c
   987   0026A6  5C02               	subwf	___lbdiv@dividend^0,w,c
   988   0026A8  A0D8               	btfss	status,0,c
   989   0026AA  EF59  F013         	goto	u821
   990   0026AE  EF5B  F013         	goto	u820
   991   0026B2                     u821:
   992   0026B2  EF5E  F013         	goto	l1270
   993   0026B6                     u820:
   994   0026B6  5001               	movf	___lbdiv@divisor^0,w,c
   995   0026B8  5E02               	subwf	___lbdiv@dividend^0,f,c
   996   0026BA  8004               	bsf	___lbdiv@quotient^0,0,c
   997   0026BC                     l1270:
   998   0026BC  90D8               	bcf	status,0,c
   999   0026BE  3201               	rrcf	___lbdiv@divisor^0,f,c
  1000   0026C0  2E03               	decfsz	___lbdiv@counter^0,f,c
  1001   0026C2  EF50  F013         	goto	l1264
  1002   0026C6                     l1274:
  1003   0026C6  5004               	movf	___lbdiv@quotient^0,w,c
  1004   0026C8  0012               	return		;funcret
  1005   0026CA                     __end_of___lbdiv:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _PORT_Output *****************
  1009 ;; Defined at:
  1010 ;;		line 127 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  answer          1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  answer          1    9[COMRAM] unsigned char 
  1015 ;;  second_dig      1   13[COMRAM] unsigned char 
  1016 ;;  first_dig       1   12[COMRAM] unsigned char 
  1017 ;;  display2        1   11[COMRAM] unsigned char 
  1018 ;;  display1        1   10[COMRAM] unsigned char 
  1019 ;;  i               1    8[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1030 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1033 ;;Total ram usage:        6 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		___awdiv
  1038 ;;		___awmod
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text5
  1045   002002                     __ptext5:
  1046                           	callstack 0
  1047   002002                     _PORT_Output:
  1048                           	callstack 29
  1049                           
  1050                           ;incstack = 0
  1051                           ;PORT_Output@answer stored from wreg
  1052   002002  6E0A               	movwf	PORT_Output@answer^0,c
  1053   002004                     
  1054                           ;main.c: 129:     unsigned char second_dig = 0;
  1055   002004  0E00               	movlw	0
  1056   002006  6E0E               	movwf	PORT_Output@second_dig^0,c
  1057                           
  1058                           ;main.c: 130:     unsigned char i = 0;
  1059   002008  0E00               	movlw	0
  1060   00200A  6E09               	movwf	PORT_Output@i^0,c
  1061                           
  1062                           ;main.c: 131:     unsigned char display1 = 0;
  1063   00200C  0E00               	movlw	0
  1064   00200E  6E0B               	movwf	PORT_Output@display1^0,c
  1065                           
  1066                           ;main.c: 132:     unsigned char display2 = 0;
  1067   002010  0E00               	movlw	0
  1068   002012  6E0C               	movwf	PORT_Output@display2^0,c
  1069   002014                     
  1070                           ;main.c: 136:     first_dig = answer/10;
  1071   002014  C00A  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1072   002018  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1073   00201A  0E00               	movlw	0
  1074   00201C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1075   00201E  0E0A               	movlw	10
  1076   002020  6E03               	movwf	___awdiv@divisor^0,c
  1077   002022  EC0A  F012         	call	___awdiv	;wreg free
  1078   002026  5001               	movf	?___awdiv^0,w,c
  1079   002028  6E0D               	movwf	PORT_Output@first_dig^0,c
  1080                           
  1081                           ;main.c: 137:     second_dig = answer % 10;
  1082   00202A  C00A  F001         	movff	PORT_Output@answer,___awmod@dividend
  1083   00202E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1084   002030  0E00               	movlw	0
  1085   002032  6E04               	movwf	(___awmod@divisor+1)^0,c
  1086   002034  0E0A               	movlw	10
  1087   002036  6E03               	movwf	___awmod@divisor^0,c
  1088   002038  EC6C  F012         	call	___awmod	;wreg free
  1089   00203C  5001               	movf	?___awmod^0,w,c
  1090   00203E  6E0E               	movwf	PORT_Output@second_dig^0,c
  1091   002040                     
  1092                           ;main.c: 139:     if(first_dig == 0) display1 = 0xC0;
  1093   002040  500D               	movf	PORT_Output@first_dig^0,w,c
  1094   002042  A4D8               	btfss	status,2,c
  1095   002044  EF26  F010         	goto	u871
  1096   002048  EF28  F010         	goto	u870
  1097   00204C                     u871:
  1098   00204C  EF2A  F010         	goto	l1306
  1099   002050                     u870:
  1100   002050  0EC0               	movlw	192
  1101   002052  6E0B               	movwf	PORT_Output@display1^0,c
  1102   002054                     l1306:
  1103                           
  1104                           ;main.c: 140:     if(first_dig == 1) display1 = 0xF9;
  1105   002054  040D               	decf	PORT_Output@first_dig^0,w,c
  1106   002056  A4D8               	btfss	status,2,c
  1107   002058  EF30  F010         	goto	u881
  1108   00205C  EF32  F010         	goto	u880
  1109   002060                     u881:
  1110   002060  EF34  F010         	goto	l1310
  1111   002064                     u880:
  1112   002064  0EF9               	movlw	249
  1113   002066  6E0B               	movwf	PORT_Output@display1^0,c
  1114   002068                     l1310:
  1115                           
  1116                           ;main.c: 141:     if(first_dig == 2) display1 = 0xA4;
  1117   002068  0E02               	movlw	2
  1118   00206A  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1119   00206C  A4D8               	btfss	status,2,c
  1120   00206E  EF3B  F010         	goto	u891
  1121   002072  EF3D  F010         	goto	u890
  1122   002076                     u891:
  1123   002076  EF3F  F010         	goto	l1314
  1124   00207A                     u890:
  1125   00207A  0EA4               	movlw	164
  1126   00207C  6E0B               	movwf	PORT_Output@display1^0,c
  1127   00207E                     l1314:
  1128                           
  1129                           ;main.c: 142:     if(first_dig == 3) display1 = 0xB0;
  1130   00207E  0E03               	movlw	3
  1131   002080  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1132   002082  A4D8               	btfss	status,2,c
  1133   002084  EF46  F010         	goto	u901
  1134   002088  EF48  F010         	goto	u900
  1135   00208C                     u901:
  1136   00208C  EF4A  F010         	goto	l1318
  1137   002090                     u900:
  1138   002090  0EB0               	movlw	176
  1139   002092  6E0B               	movwf	PORT_Output@display1^0,c
  1140   002094                     l1318:
  1141                           
  1142                           ;main.c: 143:     if(first_dig == 4) display1 = 0x99;
  1143   002094  0E04               	movlw	4
  1144   002096  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1145   002098  A4D8               	btfss	status,2,c
  1146   00209A  EF51  F010         	goto	u911
  1147   00209E  EF53  F010         	goto	u910
  1148   0020A2                     u911:
  1149   0020A2  EF55  F010         	goto	l1322
  1150   0020A6                     u910:
  1151   0020A6  0E99               	movlw	153
  1152   0020A8  6E0B               	movwf	PORT_Output@display1^0,c
  1153   0020AA                     l1322:
  1154                           
  1155                           ;main.c: 144:     if(first_dig == 5) display1 = 0x92;
  1156   0020AA  0E05               	movlw	5
  1157   0020AC  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1158   0020AE  A4D8               	btfss	status,2,c
  1159   0020B0  EF5C  F010         	goto	u921
  1160   0020B4  EF5E  F010         	goto	u920
  1161   0020B8                     u921:
  1162   0020B8  EF60  F010         	goto	l1326
  1163   0020BC                     u920:
  1164   0020BC  0E92               	movlw	146
  1165   0020BE  6E0B               	movwf	PORT_Output@display1^0,c
  1166   0020C0                     l1326:
  1167                           
  1168                           ;main.c: 145:     if(first_dig == 6) display1 = 0x82;
  1169   0020C0  0E06               	movlw	6
  1170   0020C2  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1171   0020C4  A4D8               	btfss	status,2,c
  1172   0020C6  EF67  F010         	goto	u931
  1173   0020CA  EF69  F010         	goto	u930
  1174   0020CE                     u931:
  1175   0020CE  EF6B  F010         	goto	l1330
  1176   0020D2                     u930:
  1177   0020D2  0E82               	movlw	130
  1178   0020D4  6E0B               	movwf	PORT_Output@display1^0,c
  1179   0020D6                     l1330:
  1180                           
  1181                           ;main.c: 146:     if(first_dig == 7) display1 = 0xF8;
  1182   0020D6  0E07               	movlw	7
  1183   0020D8  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1184   0020DA  A4D8               	btfss	status,2,c
  1185   0020DC  EF72  F010         	goto	u941
  1186   0020E0  EF74  F010         	goto	u940
  1187   0020E4                     u941:
  1188   0020E4  EF76  F010         	goto	l1334
  1189   0020E8                     u940:
  1190   0020E8  0EF8               	movlw	248
  1191   0020EA  6E0B               	movwf	PORT_Output@display1^0,c
  1192   0020EC                     l1334:
  1193                           
  1194                           ;main.c: 147:     if(first_dig == 8) display1 = 0x80;
  1195   0020EC  0E08               	movlw	8
  1196   0020EE  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1197   0020F0  A4D8               	btfss	status,2,c
  1198   0020F2  EF7D  F010         	goto	u951
  1199   0020F6  EF7F  F010         	goto	u950
  1200   0020FA                     u951:
  1201   0020FA  EF81  F010         	goto	l1338
  1202   0020FE                     u950:
  1203   0020FE  0E80               	movlw	128
  1204   002100  6E0B               	movwf	PORT_Output@display1^0,c
  1205   002102                     l1338:
  1206                           
  1207                           ;main.c: 148:     if(first_dig == 9) display1 = 0x98;
  1208   002102  0E09               	movlw	9
  1209   002104  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1210   002106  A4D8               	btfss	status,2,c
  1211   002108  EF88  F010         	goto	u961
  1212   00210C  EF8A  F010         	goto	u960
  1213   002110                     u961:
  1214   002110  EF8C  F010         	goto	l102
  1215   002114                     u960:
  1216   002114  0E98               	movlw	152
  1217   002116  6E0B               	movwf	PORT_Output@display1^0,c
  1218   002118                     l102:
  1219                           
  1220                           ;main.c: 150:     if(second_dig == 0) display2 = 0xC0;
  1221   002118  500E               	movf	PORT_Output@second_dig^0,w,c
  1222   00211A  A4D8               	btfss	status,2,c
  1223   00211C  EF92  F010         	goto	u971
  1224   002120  EF94  F010         	goto	u970
  1225   002124                     u971:
  1226   002124  EF96  F010         	goto	l1344
  1227   002128                     u970:
  1228   002128  0EC0               	movlw	192
  1229   00212A  6E0C               	movwf	PORT_Output@display2^0,c
  1230   00212C                     l1344:
  1231                           
  1232                           ;main.c: 151:     if(second_dig == 1) display2 = 0xF9;
  1233   00212C  040E               	decf	PORT_Output@second_dig^0,w,c
  1234   00212E  A4D8               	btfss	status,2,c
  1235   002130  EF9C  F010         	goto	u981
  1236   002134  EF9E  F010         	goto	u980
  1237   002138                     u981:
  1238   002138  EFA0  F010         	goto	l1348
  1239   00213C                     u980:
  1240   00213C  0EF9               	movlw	249
  1241   00213E  6E0C               	movwf	PORT_Output@display2^0,c
  1242   002140                     l1348:
  1243                           
  1244                           ;main.c: 152:     if(second_dig == 2) display2 = 0xA4;
  1245   002140  0E02               	movlw	2
  1246   002142  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1247   002144  A4D8               	btfss	status,2,c
  1248   002146  EFA7  F010         	goto	u991
  1249   00214A  EFA9  F010         	goto	u990
  1250   00214E                     u991:
  1251   00214E  EFAB  F010         	goto	l1352
  1252   002152                     u990:
  1253   002152  0EA4               	movlw	164
  1254   002154  6E0C               	movwf	PORT_Output@display2^0,c
  1255   002156                     l1352:
  1256                           
  1257                           ;main.c: 153:     if(second_dig == 3) display2 = 0xB0;
  1258   002156  0E03               	movlw	3
  1259   002158  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1260   00215A  A4D8               	btfss	status,2,c
  1261   00215C  EFB2  F010         	goto	u1001
  1262   002160  EFB4  F010         	goto	u1000
  1263   002164                     u1001:
  1264   002164  EFB6  F010         	goto	l1356
  1265   002168                     u1000:
  1266   002168  0EB0               	movlw	176
  1267   00216A  6E0C               	movwf	PORT_Output@display2^0,c
  1268   00216C                     l1356:
  1269                           
  1270                           ;main.c: 154:     if(second_dig == 4) display2 = 0x99;
  1271   00216C  0E04               	movlw	4
  1272   00216E  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1273   002170  A4D8               	btfss	status,2,c
  1274   002172  EFBD  F010         	goto	u1011
  1275   002176  EFBF  F010         	goto	u1010
  1276   00217A                     u1011:
  1277   00217A  EFC1  F010         	goto	l1360
  1278   00217E                     u1010:
  1279   00217E  0E99               	movlw	153
  1280   002180  6E0C               	movwf	PORT_Output@display2^0,c
  1281   002182                     l1360:
  1282                           
  1283                           ;main.c: 155:     if(second_dig == 5) display2 = 0x92;
  1284   002182  0E05               	movlw	5
  1285   002184  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1286   002186  A4D8               	btfss	status,2,c
  1287   002188  EFC8  F010         	goto	u1021
  1288   00218C  EFCA  F010         	goto	u1020
  1289   002190                     u1021:
  1290   002190  EFCC  F010         	goto	l1364
  1291   002194                     u1020:
  1292   002194  0E92               	movlw	146
  1293   002196  6E0C               	movwf	PORT_Output@display2^0,c
  1294   002198                     l1364:
  1295                           
  1296                           ;main.c: 156:     if(second_dig == 6) display2 = 0x82;
  1297   002198  0E06               	movlw	6
  1298   00219A  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1299   00219C  A4D8               	btfss	status,2,c
  1300   00219E  EFD3  F010         	goto	u1031
  1301   0021A2  EFD5  F010         	goto	u1030
  1302   0021A6                     u1031:
  1303   0021A6  EFD7  F010         	goto	l1368
  1304   0021AA                     u1030:
  1305   0021AA  0E82               	movlw	130
  1306   0021AC  6E0C               	movwf	PORT_Output@display2^0,c
  1307   0021AE                     l1368:
  1308                           
  1309                           ;main.c: 157:     if(second_dig == 7) display2 = 0xF8;
  1310   0021AE  0E07               	movlw	7
  1311   0021B0  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1312   0021B2  A4D8               	btfss	status,2,c
  1313   0021B4  EFDE  F010         	goto	u1041
  1314   0021B8  EFE0  F010         	goto	u1040
  1315   0021BC                     u1041:
  1316   0021BC  EFE2  F010         	goto	l1372
  1317   0021C0                     u1040:
  1318   0021C0  0EF8               	movlw	248
  1319   0021C2  6E0C               	movwf	PORT_Output@display2^0,c
  1320   0021C4                     l1372:
  1321                           
  1322                           ;main.c: 158:     if(second_dig == 8) display2 = 0x80;
  1323   0021C4  0E08               	movlw	8
  1324   0021C6  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1325   0021C8  A4D8               	btfss	status,2,c
  1326   0021CA  EFE9  F010         	goto	u1051
  1327   0021CE  EFEB  F010         	goto	u1050
  1328   0021D2                     u1051:
  1329   0021D2  EFED  F010         	goto	l1376
  1330   0021D6                     u1050:
  1331   0021D6  0E80               	movlw	128
  1332   0021D8  6E0C               	movwf	PORT_Output@display2^0,c
  1333   0021DA                     l1376:
  1334                           
  1335                           ;main.c: 159:     if(second_dig == 9) display2 = 0x98;
  1336   0021DA  0E09               	movlw	9
  1337   0021DC  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1338   0021DE  A4D8               	btfss	status,2,c
  1339   0021E0  EFF4  F010         	goto	u1061
  1340   0021E4  EFF6  F010         	goto	u1060
  1341   0021E8                     u1061:
  1342   0021E8  EFF8  F010         	goto	l1380
  1343   0021EC                     u1060:
  1344   0021EC  0E98               	movlw	152
  1345   0021EE  6E0C               	movwf	PORT_Output@display2^0,c
  1346   0021F0                     l1380:
  1347                           
  1348                           ;main.c: 161:     PORTBbits.RB2 = 1;
  1349   0021F0  84CB               	bsf	203,2,c	;volatile
  1350                           
  1351                           ;main.c: 162:     while (PORTAbits.RA3 == 0){
  1352   0021F2  EFFD  F010         	goto	l1384
  1353   0021F6                     l1382:
  1354                           
  1355                           ;main.c: 163:         PORTD = 0;
  1356   0021F6  0E00               	movlw	0
  1357   0021F8  6ECD               	movwf	205,c	;volatile
  1358   0021FA                     l1384:
  1359                           
  1360                           ;main.c: 162:     while (PORTAbits.RA3 == 0){
  1361   0021FA  A6CA               	btfss	202,3,c	;volatile
  1362   0021FC  EF02  F011         	goto	u1071
  1363   002200  EF04  F011         	goto	u1070
  1364   002204                     u1071:
  1365   002204  EFFB  F010         	goto	l1382
  1366   002208                     u1070:
  1367   002208                     
  1368                           ;main.c: 166:     for(i = 1; i<10000; i++)
  1369   002208  0E01               	movlw	1
  1370   00220A  6E09               	movwf	PORT_Output@i^0,c
  1371   00220C                     l116:
  1372                           
  1373                           ;main.c: 167:     {;main.c: 168:         PORTBbits.RB5 = 1;
  1374   00220C  8ACB               	bsf	203,5,c	;volatile
  1375                           
  1376                           ;main.c: 169:         PORTD = display1;
  1377   00220E  0060  F02F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1378                           
  1379                           ;main.c: 170:         PORTBbits.RB5 = 0;
  1380   002214  9ACB               	bcf	203,5,c	;volatile
  1381                           
  1382                           ;main.c: 171:         PORTBbits.RB6 = 1;
  1383   002216  8CCB               	bsf	203,6,c	;volatile
  1384                           
  1385                           ;main.c: 172:         PORTD = display2;
  1386   002218  0060  F033  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1387                           
  1388                           ;main.c: 173:         PORTBbits.RB6 = 0;
  1389   00221E  9CCB               	bcf	203,6,c	;volatile
  1390   002220                     
  1391                           ;main.c: 174:     }
  1392   002220  2A09               	incf	PORT_Output@i^0,f,c
  1393   002222  EF06  F011         	goto	l116
  1394   002226  0012               	return		;funcret
  1395   002228                     __end_of_PORT_Output:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function ___awmod *****************
  1399 ;; Defined at:
  1400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  dividend        2    0[COMRAM] int 
  1403 ;;  divisor         2    2[COMRAM] int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  sign            1    5[COMRAM] unsigned char 
  1406 ;;  counter         1    4[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    0[COMRAM] int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1420 ;;Total ram usage:        6 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_PORT_Output
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text6
  1430   0024D8                     __ptext6:
  1431                           	callstack 0
  1432   0024D8                     ___awmod:
  1433                           	callstack 29
  1434   0024D8  0E00               	movlw	0
  1435   0024DA  6E06               	movwf	___awmod@sign^0,c
  1436   0024DC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1437   0024DE  EF75  F012         	goto	u740
  1438   0024E2  EF73  F012         	goto	u741
  1439   0024E6                     u741:
  1440   0024E6  EF7B  F012         	goto	l1224
  1441   0024EA                     u740:
  1442   0024EA  6C01               	negf	___awmod@dividend^0,c
  1443   0024EC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1444   0024EE  B0D8               	btfsc	status,0,c
  1445   0024F0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1446   0024F2  0E01               	movlw	1
  1447   0024F4  6E06               	movwf	___awmod@sign^0,c
  1448   0024F6                     l1224:
  1449   0024F6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1450   0024F8  EF82  F012         	goto	u750
  1451   0024FC  EF80  F012         	goto	u751
  1452   002500                     u751:
  1453   002500  EF86  F012         	goto	l1228
  1454   002504                     u750:
  1455   002504  6C03               	negf	___awmod@divisor^0,c
  1456   002506  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1457   002508  B0D8               	btfsc	status,0,c
  1458   00250A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1459   00250C                     l1228:
  1460   00250C  5003               	movf	___awmod@divisor^0,w,c
  1461   00250E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1462   002510  B4D8               	btfsc	status,2,c
  1463   002512  EF8D  F012         	goto	u761
  1464   002516  EF8F  F012         	goto	u760
  1465   00251A                     u761:
  1466   00251A  EFB3  F012         	goto	l1244
  1467   00251E                     u760:
  1468   00251E  0E01               	movlw	1
  1469   002520  6E05               	movwf	___awmod@counter^0,c
  1470   002522  EF97  F012         	goto	l1234
  1471   002526                     l1232:
  1472   002526  90D8               	bcf	status,0,c
  1473   002528  3603               	rlcf	___awmod@divisor^0,f,c
  1474   00252A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1475   00252C  2A05               	incf	___awmod@counter^0,f,c
  1476   00252E                     l1234:
  1477   00252E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1478   002530  EF9C  F012         	goto	u771
  1479   002534  EF9E  F012         	goto	u770
  1480   002538                     u771:
  1481   002538  EF93  F012         	goto	l1232
  1482   00253C                     u770:
  1483   00253C                     l1236:
  1484   00253C  5003               	movf	___awmod@divisor^0,w,c
  1485   00253E  5C01               	subwf	___awmod@dividend^0,w,c
  1486   002540  5004               	movf	(___awmod@divisor+1)^0,w,c
  1487   002542  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1488   002544  A0D8               	btfss	status,0,c
  1489   002546  EFA7  F012         	goto	u781
  1490   00254A  EFA9  F012         	goto	u780
  1491   00254E                     u781:
  1492   00254E  EFAD  F012         	goto	l1240
  1493   002552                     u780:
  1494   002552  5003               	movf	___awmod@divisor^0,w,c
  1495   002554  5E01               	subwf	___awmod@dividend^0,f,c
  1496   002556  5004               	movf	(___awmod@divisor+1)^0,w,c
  1497   002558  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1498   00255A                     l1240:
  1499   00255A  90D8               	bcf	status,0,c
  1500   00255C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1501   00255E  3203               	rrcf	___awmod@divisor^0,f,c
  1502   002560  2E05               	decfsz	___awmod@counter^0,f,c
  1503   002562  EF9E  F012         	goto	l1236
  1504   002566                     l1244:
  1505   002566  5006               	movf	___awmod@sign^0,w,c
  1506   002568  B4D8               	btfsc	status,2,c
  1507   00256A  EFB9  F012         	goto	u791
  1508   00256E  EFBB  F012         	goto	u790
  1509   002572                     u791:
  1510   002572  EFBF  F012         	goto	l1248
  1511   002576                     u790:
  1512   002576  6C01               	negf	___awmod@dividend^0,c
  1513   002578  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1514   00257A  B0D8               	btfsc	status,0,c
  1515   00257C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1516   00257E                     l1248:
  1517   00257E  C001  F001         	movff	___awmod@dividend,?___awmod
  1518   002582  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1519   002586  0012               	return		;funcret
  1520   002588                     __end_of___awmod:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function ___awdiv *****************
  1524 ;; Defined at:
  1525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  dividend        2    0[COMRAM] int 
  1528 ;;  divisor         2    2[COMRAM] int 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  quotient        2    6[COMRAM] int 
  1531 ;;  sign            1    5[COMRAM] unsigned char 
  1532 ;;  counter         1    4[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2    0[COMRAM] int 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1546 ;;Total ram usage:        8 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_PORT_Output
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text7
  1556   002414                     __ptext7:
  1557                           	callstack 0
  1558   002414                     ___awdiv:
  1559                           	callstack 29
  1560   002414  0E00               	movlw	0
  1561   002416  6E06               	movwf	___awdiv@sign^0,c
  1562   002418  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1563   00241A  EF13  F012         	goto	u680
  1564   00241E  EF11  F012         	goto	u681
  1565   002422                     u681:
  1566   002422  EF19  F012         	goto	l1180
  1567   002426                     u680:
  1568   002426  6C03               	negf	___awdiv@divisor^0,c
  1569   002428  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1570   00242A  B0D8               	btfsc	status,0,c
  1571   00242C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1572   00242E  0E01               	movlw	1
  1573   002430  6E06               	movwf	___awdiv@sign^0,c
  1574   002432                     l1180:
  1575   002432  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1576   002434  EF20  F012         	goto	u690
  1577   002438  EF1E  F012         	goto	u691
  1578   00243C                     u691:
  1579   00243C  EF26  F012         	goto	l1186
  1580   002440                     u690:
  1581   002440  6C01               	negf	___awdiv@dividend^0,c
  1582   002442  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1583   002444  B0D8               	btfsc	status,0,c
  1584   002446  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1585   002448  0E01               	movlw	1
  1586   00244A  1A06               	xorwf	___awdiv@sign^0,f,c
  1587   00244C                     l1186:
  1588   00244C  0E00               	movlw	0
  1589   00244E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1590   002450  0E00               	movlw	0
  1591   002452  6E07               	movwf	___awdiv@quotient^0,c
  1592   002454  5003               	movf	___awdiv@divisor^0,w,c
  1593   002456  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1594   002458  B4D8               	btfsc	status,2,c
  1595   00245A  EF31  F012         	goto	u701
  1596   00245E  EF33  F012         	goto	u700
  1597   002462                     u701:
  1598   002462  EF5B  F012         	goto	l1208
  1599   002466                     u700:
  1600   002466  0E01               	movlw	1
  1601   002468  6E05               	movwf	___awdiv@counter^0,c
  1602   00246A  EF3B  F012         	goto	l1194
  1603   00246E                     l1192:
  1604   00246E  90D8               	bcf	status,0,c
  1605   002470  3603               	rlcf	___awdiv@divisor^0,f,c
  1606   002472  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1607   002474  2A05               	incf	___awdiv@counter^0,f,c
  1608   002476                     l1194:
  1609   002476  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1610   002478  EF40  F012         	goto	u711
  1611   00247C  EF42  F012         	goto	u710
  1612   002480                     u711:
  1613   002480  EF37  F012         	goto	l1192
  1614   002484                     u710:
  1615   002484                     l1196:
  1616   002484  90D8               	bcf	status,0,c
  1617   002486  3607               	rlcf	___awdiv@quotient^0,f,c
  1618   002488  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1619   00248A  5003               	movf	___awdiv@divisor^0,w,c
  1620   00248C  5C01               	subwf	___awdiv@dividend^0,w,c
  1621   00248E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1622   002490  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1623   002492  A0D8               	btfss	status,0,c
  1624   002494  EF4E  F012         	goto	u721
  1625   002498  EF50  F012         	goto	u720
  1626   00249C                     u721:
  1627   00249C  EF55  F012         	goto	l1204
  1628   0024A0                     u720:
  1629   0024A0  5003               	movf	___awdiv@divisor^0,w,c
  1630   0024A2  5E01               	subwf	___awdiv@dividend^0,f,c
  1631   0024A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1632   0024A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1633   0024A8  8007               	bsf	___awdiv@quotient^0,0,c
  1634   0024AA                     l1204:
  1635   0024AA  90D8               	bcf	status,0,c
  1636   0024AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1637   0024AE  3203               	rrcf	___awdiv@divisor^0,f,c
  1638   0024B0  2E05               	decfsz	___awdiv@counter^0,f,c
  1639   0024B2  EF42  F012         	goto	l1196
  1640   0024B6                     l1208:
  1641   0024B6  5006               	movf	___awdiv@sign^0,w,c
  1642   0024B8  B4D8               	btfsc	status,2,c
  1643   0024BA  EF61  F012         	goto	u731
  1644   0024BE  EF63  F012         	goto	u730
  1645   0024C2                     u731:
  1646   0024C2  EF67  F012         	goto	l1212
  1647   0024C6                     u730:
  1648   0024C6  6C07               	negf	___awdiv@quotient^0,c
  1649   0024C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1650   0024CA  B0D8               	btfsc	status,0,c
  1651   0024CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1652   0024CE                     l1212:
  1653   0024CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1654   0024D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1655   0024D6  0012               	return		;funcret
  1656   0024D8                     __end_of___awdiv:
  1657                           	callstack 0
  1658                           
  1659                           	psect	smallconst
  1660   002000                     __psmallconst:
  1661                           	callstack 0
  1662   002000  00                 	db	0
  1663   002001  00                 	db	0	; dummy byte at the end
  1664   000000                     
  1665                           	psect	rparam
  1666   000000                     tosu	equ	0x3FFF
  1667                           tosh	equ	0x3FFE
  1668                           tosl	equ	0x3FFD
  1669                           stkptr	equ	0x3FFC
  1670                           pclatu	equ	0x3FFB
  1671                           pclath	equ	0x3FFA
  1672                           pcl	equ	0x3FF9
  1673                           tblptru	equ	0x3FF8
  1674                           tblptrh	equ	0x3FF7
  1675                           tblptrl	equ	0x3FF6
  1676                           tablat	equ	0x3FF5
  1677                           prodh	equ	0x3FF4
  1678                           prodl	equ	0x3FF3
  1679                           indf0	equ	0x3FEF
  1680                           postinc0	equ	0x3FEE
  1681                           postdec0	equ	0x3FED
  1682                           preinc0	equ	0x3FEC
  1683                           plusw0	equ	0x3FEB
  1684                           fsr0h	equ	0x3FEA
  1685                           fsr0l	equ	0x3FE9
  1686                           wreg	equ	0x3FE8
  1687                           indf1	equ	0x3FE7
  1688                           postinc1	equ	0x3FE6
  1689                           postdec1	equ	0x3FE5
  1690                           preinc1	equ	0x3FE4
  1691                           plusw1	equ	0x3FE3
  1692                           fsr1h	equ	0x3FE2
  1693                           fsr1l	equ	0x3FE1
  1694                           bsr	equ	0x3FE0
  1695                           indf2	equ	0x3FDF
  1696                           postinc2	equ	0x3FDE
  1697                           postdec2	equ	0x3FDD
  1698                           preinc2	equ	0x3FDC
  1699                           plusw2	equ	0x3FDB
  1700                           fsr2h	equ	0x3FDA
  1701                           fsr2l	equ	0x3FD9
  1702                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2243
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          6     6      0    1457
                                              8 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      77        0.0%
BITBIGSFRlhhh      551      0       0      72        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
BITBIGSFRhhhh       32      0       0      68        0.0%
BITBIGSFRlhhl       1F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRhl          1      0       0      71        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      76        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 13:46:06 2024

           PORT_Output@i 0009                       l43 270A                       l60 232C  
                     l47 2238                       l72 2412                       l82 25FA  
                     l75 25DA                       l76 2590                       l85 2618  
                     l86 2630                       l89 266C          ?_scan_operation 0001  
           ___awdiv@sign 0006                      l102 2118                      l116 220C  
                    l352 24D6                      l365 2586                      l527 26C8  
                    l900 2228                      l910 226C                      l902 2248  
                    l920 2286                      l912 2270                      l904 224C  
                    l930 22B8                      l922 2294                      l914 2272  
                    l906 225A                      l940 22D2                      l932 22BC  
                    l924 2298                      l916 2274                      l908 225E  
                    l942 22E0                      l934 22BE                      l926 22A6  
                    l918 2282                      l950 22F8                      l960 233C  
                    l952 230A                      l944 22E4                      l936 22C0  
                    l928 22AA                      l970 2364                      l962 2340  
                    l954 2318                      l946 22F2                      l938 22CE  
                    l980 2388                      l972 2366                      l964 234E  
                    l956 2320                      l948 22F6                      l990 23B0  
                    l982 238C                      l974 2368                      l966 2352  
                    l958 2324                      l992 23B2                      l984 239A  
                    l976 2376                      l968 2360                      l994 23B4  
                    l986 239E                      l978 237A                      l996 23C2  
                    l988 23AC                      l998 23C6                      u200 2294  
                    u201 2290                      u210 22A6                      u211 22A2  
                    u300 2376                      u220 22B8                      u301 2372  
                    u221 22B4                      u310 2388                      u230 22CE  
                    u311 2384                      u231 22CA                      u320 239A  
                    u240 22E0                      u160 2248                      u400 25C4  
                    u321 2396                      u241 22DC                      u161 2244  
                    u401 25C0                      u330 23AC                      u250 22F2  
                    u170 225A                      u410 25D6                      u331 23A8  
                    u251 22EE                      u171 2256                      u411 25D2  
                    u340 23C2                      u260 230A                      u180 226C  
                    u420 25EA                      u341 23BE                      u261 2306  
                    u181 2268                      u421 25E6                      u350 23D4  
                    u270 233C                      u190 2282                      u351 23D0  
                    u271 2338                      u191 227E                      u360 23E6  
                    u280 234E                      u361 23E2                      u281 234A  
                    u370 23FE                      u290 2360                      u371 23FA  
                    u291 235C                      u700 2466                      u380 25A0  
                    u701 2462                      u381 259C                      u710 2484  
                    u390 25B2                      u711 2480                      u391 25AE  
                    u720 24A0                      u800 2684                      u721 249C  
                    u801 2680                      u730 24C6                      u810 26A0  
                    u731 24C2                      u811 269C                      u740 24EA  
                    u900 2090                      u820 26B6                      u741 24E6  
                    u901 208C                      u821 26B2                      u750 2504  
                    u910 20A6                      u830 2612                      u751 2500  
                    u911 20A2                      u831 260E                      u680 2426  
                    u760 251E                      u920 20BC                      u840 262A  
                    u681 2422                      u761 251A                      u921 20B8  
                    u841 2626                      u690 2440                      u770 253C  
                    u930 20D2                      u850 2642                      u691 243C  
                    u771 2538                      u931 20CE                      u851 263E  
                    u780 2552                      u940 20E8                      u860 265E  
                    u781 254E                      u941 20E4                      u861 265A  
                    u790 2576                      u950 20FE                      u870 2050  
                    u791 2572                      u951 20FA                      u871 204C  
                    u960 2114                      u880 2064                      u961 2110  
                    u881 2060                      u970 2128                      u890 207A  
                    u971 2124                      u891 2076                      u980 213C  
                    u981 2138                      u990 2152                      u991 214E  
           ___awmod@sign 0006                      wreg 3FE8                     l1000 23D4  
                   l1010 23FE                     l1002 23D8                     l1012 2402  
                   l1004 23E6                     l1020 25A0                     l1014 2410  
                   l1006 23EA                     l1030 25C8                     l1022 25A4  
                   l1200 24A0                     l1008 23EC                     l1032 25D6  
                   l1024 25B2                     l1210 24C6                     l1202 24A8  
                   l1034 25EA                     l1026 25B6                     l1018 2588  
                   l1212 24CE                     l1204 24AA                     l1220 24EA  
                   l1300 2014                     l1036 25F8                     l1028 25C4  
                   l1206 24B0                     l1230 251E                     l1222 24F2  
                   l1310 2068                     l1302 2040                     l1208 24B6  
                   l1240 255A                     l1232 2526                     l1224 24F6  
                   l1216 24D8                     l1320 20A6                     l1312 207A  
                   l1304 2050                     l1400 26E8                     l1242 2560  
                   l1234 252E                     l1226 2504                     l1218 24DC  
                   l1330 20D6                     l1322 20AA                     l1314 207E  
                   l1306 2054                     l1402 26EE                     l1180 2432  
                   l1172 2414                     l1236 253C                     l1244 2566  
                   l1228 250C                     l1340 2114                     l1332 20E8  
                   l1324 20BC                     l1316 2090                     l1308 2064  
                   l1260 2690                     l1252 2670                     l1404 26F4  
                   l1190 2466                     l1182 2440                     l1174 2418  
                   l1246 2576                     l1238 2552                     l1350 2152  
                   l1342 2128                     l1334 20EC                     l1326 20C0  
                   l1318 2094                     l1270 26BC                     l1262 2692  
                   l1254 2674                     l1406 2704                     l1192 246E  
                   l1184 2448                     l1176 2426                     l1248 257E  
                   l1360 2182                     l1352 2156                     l1344 212C  
                   l1336 20FE                     l1328 20D2                     l1272 26C0  
                   l1264 26A0                     l1256 2684                     l1280 2602  
                   l1194 2476                     l1186 244C                     l1178 242E  
                   l1370 21C0                     l1362 2194                     l1354 2168  
                   l1346 213C                     l1338 2102                     l1266 26B6  
                   l1258 268C                     l1274 26C6                     l1290 265E  
                   l1282 2612                     l1196 2484                     l1188 2454  
                   l1380 21F0                     l1372 21C4                     l1364 2198  
                   l1356 216C                     l1348 2140                     l1268 26BA  
                   l1292 266A                     l1284 262A                     l1198 248A  
                   l1390 2220                     l1382 21F6                     l1374 21D6  
                   l1366 21AA                     l1358 217E                     l1286 2642  
                   l1278 25FE                     l1384 21FA                     l1376 21DA  
                   l1368 21AE                     l1296 2004                     l1288 264C  
                   l1386 2208                     l1378 21EC                     l1394 26CA  
                   l1396 26CC                     l1398 26E2                     u1000 2168  
                   u1001 2164                     u1010 217E                     u1011 217A  
                   u1020 2194                     u1021 2190                     u1030 21AA  
                   u1031 21A6                     u1040 21C0                     u1041 21BC  
                   u1050 21D6                     u1051 21D2                     u1107 2408  
                   u1060 21EC                     u1061 21E8                     u1070 2208  
                   u1071 2204                     u1087 25F0                     u1097 2310  
                   _main 26CA                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 24D8  
        __end_of___lbdiv 26CA          __end_of___awmod 2588          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTD 3FCD                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISD 3FC5        PORT_Output@answer 000A  
                  status 3FD8          ___lbdiv@divisor 0001          ___lbdiv@counter 0003  
           ?_scan_number 0001          __initialization 270E             __end_of_main 270E  
                 ??_main 000F            __activetblptr 0000         ___awdiv@dividend 0001  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELD 3A70  
              ??___awdiv 0005                ??___lbdiv 0002                ??___awmod 0005  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005             __mediumconst 0000             ?_PORT_Output 0001  
       ___lbdiv@dividend 0002               __accesstop 0060  __end_of__initialization 2710  
          ___rparam_used 0001         ??_scan_operation 0001           __pcstackCOMRAM 0001  
       scan_number@count 0003         scan_number@input 0005         ___lbdiv@quotient 0004  
            _X_Input_REG 0012              _Y_Input_REG 0011               __pnvCOMRAM 000F  
      __end_of_calculate 266E      PORT_Output@display1 000B      PORT_Output@display2 000C  
                __Hparam 0000               calculate@x 0008               calculate@y 0005  
                __Lparam 0000                  ___awdiv 2414                  ___lbdiv 266E  
                ___awmod 24D8             __psmallconst 2000                  __pcinit 270E  
                __ramtop 2000                  __ptext0 26CA                  __ptext1 2588  
                __ptext2 2228                  __ptext3 25FC                  __ptext4 266E  
                __ptext5 2002                  __ptext6 24D8                  __ptext7 2414  
       ___awmod@dividend 0001     end_of_initialization 2710                _PORTAbits 3FCA  
              _PORTBbits 3FCB            _Operation_REG 0010        scan_number@button 0002  
    start_initialization 270E        scan_number@output 0004              _calculation 000F  
            __pbssCOMRAM 0013    PORT_Output@second_dig 000E                _calculate 25FC  
          ??_scan_number 0001                 ?___awdiv 0001                 ?___lbdiv 0001  
               ?___awmod 0001              __smallconst 2000               ?_calculate 0005  
        calculate@output 0007      __end_of_scan_number 2414            ??_PORT_Output 0009  
   PORT_Output@first_dig 000D              calculate@op 0006                 __Hrparam 0000  
               __Lrparam 0000      __end_of_PORT_Output 2228              ??_calculate 0007  
            _scan_number 2228                 isa$xinst 0000           _scan_operation 2588  
     _Display_Result_REG 0013     scan_operation@op_key 0002   __end_of_scan_operation 25FC  
            _PORT_Output 2002  
