

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 13:56:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F47K42 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	nvCOMRAM
    56   00000F                     __pnvCOMRAM:
    57                           	callstack 0
    58   00000F                     _Display_Result_REG:
    59                           	callstack 0
    60   00000F                     	ds	1
    61   000010                     _calculation:
    62                           	callstack 0
    63   000010                     	ds	1
    64   000011                     _Operation_REG:
    65                           	callstack 0
    66   000011                     	ds	1
    67   000012                     _Y_Input_REG:
    68                           	callstack 0
    69   000012                     	ds	1
    70   000013                     _X_Input_REG:
    71                           	callstack 0
    72   000013                     	ds	1
    73   000000                     _PORTB	set	16331
    74   000000                     _ANSELA	set	14912
    75   000000                     _TRISA	set	16322
    76   000000                     _TRISD	set	16325
    77   000000                     _TRISB	set	16323
    78   000000                     _ANSELB	set	14928
    79   000000                     _ANSELD	set	14960
    80   000000                     _PORTAbits	set	16330
    81   000000                     _PORTBbits	set	16331
    82   000000                     _PORTD	set	16333
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87   002726                     __pcinit:
    88                           	callstack 0
    89   002726                     start_initialization:
    90                           	callstack 0
    91   002726                     __initialization:
    92                           	callstack 0
    93   002726                     end_of_initialization:
    94                           	callstack 0
    95   002726                     __end_of__initialization:
    96                           	callstack 0
    97   002726  0100               	movlb	0
    98   002728  EF37  F013         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101   000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103   000001                     ??_scan_number:
   104   000001                     ??_scan_operation:
   105   000001                     ?___awdiv:
   106                           	callstack 0
   107   000001                     ?___awmod:
   108                           	callstack 0
   109   000001                     ___lbdiv@divisor:
   110                           	callstack 0
   111   000001                     ___awdiv@dividend:
   112                           	callstack 0
   113   000001                     ___awmod@dividend:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0x0
   117   000001                     	ds	1
   118   000002                     scan_number@button:
   119                           	callstack 0
   120   000002                     scan_operation@op_key:
   121                           	callstack 0
   122   000002                     ___lbdiv@dividend:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x1
   126   000002                     	ds	1
   127   000003                     scan_number@count:
   128                           	callstack 0
   129   000003                     ___lbdiv@counter:
   130                           	callstack 0
   131   000003                     ___awdiv@divisor:
   132                           	callstack 0
   133   000003                     ___awmod@divisor:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137   000003                     	ds	1
   138   000004                     scan_number@output:
   139                           	callstack 0
   140   000004                     ___lbdiv@quotient:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x3
   144   000004                     	ds	1
   145   000005                     scan_number@input:
   146                           	callstack 0
   147   000005                     calculate@y:
   148                           	callstack 0
   149   000005                     ___awdiv@counter:
   150                           	callstack 0
   151   000005                     ___awmod@counter:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x4
   155   000005                     	ds	1
   156   000006                     calculate@op:
   157                           	callstack 0
   158   000006                     ___awdiv@sign:
   159                           	callstack 0
   160   000006                     ___awmod@sign:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164   000006                     	ds	1
   165   000007                     calculate@output:
   166                           	callstack 0
   167   000007                     ___awdiv@quotient:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x6
   171   000007                     	ds	1
   172   000008                     calculate@x:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x7
   176   000008                     	ds	1
   177   000009                     PORT_Output@i:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x8
   181   000009                     	ds	1
   182   00000A                     PORT_Output@answer:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x9
   186   00000A                     	ds	1
   187   00000B                     PORT_Output@display1:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0xA
   191   00000B                     	ds	1
   192   00000C                     PORT_Output@display2:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0xB
   196   00000C                     	ds	1
   197   00000D                     PORT_Output@first_dig:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0xC
   201   00000D                     	ds	1
   202   00000E                     PORT_Output@second_dig:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xD
   206   00000E                     	ds	1
   207   00000F                     
   208                           ; 1 bytes @ 0xE
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 25 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels required when called: 2
   234 ;; This function calls:
   235 ;;		_PORT_Output
   236 ;;		_calculate
   237 ;;		_scan_number
   238 ;;		_scan_operation
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245   00266E                     __ptext0:
   246                           	callstack 0
   247   00266E                     _main:
   248                           	callstack 29
   249   00266E                     
   250                           ;main.c: 26:     TRISA = 0xFF;
   251   00266E  68C2               	setf	194,c	;volatile
   252   002670                     
   253                           ;main.c: 27:     ANSELA = 0;
   254   002670  0E00               	movlw	0
   255   002672  013A               	movlb	58	; () banked
   256   002674  6F40               	movwf	64,b	;volatile
   257                           
   258                           ;main.c: 28:     TRISB = 0;
   259   002676  0E00               	movlw	0
   260   002678  6EC3               	movwf	195,c	;volatile
   261                           
   262                           ;main.c: 29:     ANSELB = 0;
   263   00267A  0E00               	movlw	0
   264   00267C  6F50               	movwf	80,b	;volatile
   265                           
   266                           ;main.c: 30:     ANSELD = 0;
   267   00267E  0E00               	movlw	0
   268   002680  6F70               	movwf	112,b	;volatile
   269                           
   270                           ;main.c: 31:     TRISD = 0;
   271   002682  0E00               	movlw	0
   272   002684  6EC5               	movwf	197,c	;volatile
   273   002686                     l45:
   274                           
   275                           ;main.c: 34:     X_Input_REG = 0;
   276   002686  0E00               	movlw	0
   277   002688  6E13               	movwf	_X_Input_REG^0,c
   278                           
   279                           ;main.c: 35:     Y_Input_REG = 0;
   280   00268A  0E00               	movlw	0
   281   00268C  6E12               	movwf	_Y_Input_REG^0,c
   282                           
   283                           ;main.c: 36:     Operation_REG = 0;
   284   00268E  0E00               	movlw	0
   285   002690  6E11               	movwf	_Operation_REG^0,c
   286                           
   287                           ;main.c: 37:     calculation = 0;
   288   002692  0E00               	movlw	0
   289   002694  6E10               	movwf	_calculation^0,c
   290                           
   291                           ;main.c: 38:     Display_Result_REG = 0;
   292   002696  0E00               	movlw	0
   293   002698  6E0F               	movwf	_Display_Result_REG^0,c
   294   00269A                     
   295                           ;main.c: 40:     X_Input_REG = scan_number();
   296   00269A  EC14  F011         	call	_scan_number	;wreg free
   297   00269E  6E13               	movwf	_X_Input_REG^0,c
   298   0026A0                     
   299                           ;main.c: 41:     Operation_REG = scan_operation();
   300   0026A0  ECC4  F012         	call	_scan_operation	;wreg free
   301   0026A4  6E11               	movwf	_Operation_REG^0,c
   302   0026A6                     
   303                           ;main.c: 42:     Y_Input_REG = scan_number();
   304   0026A6  EC14  F011         	call	_scan_number	;wreg free
   305   0026AA  6E12               	movwf	_Y_Input_REG^0,c
   306   0026AC                     
   307                           ;main.c: 43:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   308   0026AC  C012  F005         	movff	_Y_Input_REG,calculate@y
   309   0026B0  C011  F006         	movff	_Operation_REG,calculate@op
   310   0026B4  5013               	movf	_X_Input_REG^0,w,c
   311   0026B6  ECFE  F012         	call	_calculate
   312   0026BA  6E10               	movwf	_calculation^0,c
   313   0026BC                     
   314                           ;main.c: 44:     PORT_Output(calculation);
   315   0026BC  5010               	movf	_calculation^0,w,c
   316   0026BE  EC01  F010         	call	_PORT_Output
   317   0026C2  EF43  F013         	goto	l45
   318   0026C6  EFFE  F0FF         	goto	start
   319   0026CA                     __end_of_main:
   320                           	callstack 0
   321                           
   322 ;; *************** function _scan_operation *****************
   323 ;; Defined at:
   324 ;;		line 109 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  op_key          1    1[COMRAM] unsigned char 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      unsigned char 
   331 ;; Registers used:
   332 ;;		wreg, status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text1
   352   002588                     __ptext1:
   353                           	callstack 0
   354   002588                     _scan_operation:
   355                           	callstack 30
   356   002588                     
   357                           ;main.c: 110:     unsigned char op_key = 0;
   358   002588  0E00               	movlw	0
   359   00258A  6E02               	movwf	scan_operation@op_key^0,c
   360                           
   361                           ;main.c: 111:     while (op_key ==0) {
   362   00258C  EFED  F012         	goto	l80
   363   002590                     l81:
   364                           
   365                           ;main.c: 112:      PORTBbits.RB0 = 1;
   366   002590  80CB               	bsf	203,0,c	;volatile
   367                           
   368                           ;main.c: 113:         if(PORTAbits.RA0 == 1) op_key = 1;
   369   002592  A0CA               	btfss	202,0,c	;volatile
   370   002594  EFCE  F012         	goto	u381
   371   002598  EFD0  F012         	goto	u380
   372   00259C                     u381:
   373   00259C  EFD2  F012         	goto	l1027
   374   0025A0                     u380:
   375   0025A0  0E01               	movlw	1
   376   0025A2  6E02               	movwf	scan_operation@op_key^0,c
   377   0025A4                     l1027:
   378                           
   379                           ;main.c: 114:         if(PORTAbits.RA1 == 1) op_key = 2;
   380   0025A4  A2CA               	btfss	202,1,c	;volatile
   381   0025A6  EFD7  F012         	goto	u391
   382   0025AA  EFD9  F012         	goto	u390
   383   0025AE                     u391:
   384   0025AE  EFDB  F012         	goto	l1031
   385   0025B2                     u390:
   386   0025B2  0E02               	movlw	2
   387   0025B4  6E02               	movwf	scan_operation@op_key^0,c
   388   0025B6                     l1031:
   389                           
   390                           ;main.c: 115:         if(PORTAbits.RA2 == 1) op_key = 3;
   391   0025B6  A4CA               	btfss	202,2,c	;volatile
   392   0025B8  EFE0  F012         	goto	u401
   393   0025BC  EFE2  F012         	goto	u400
   394   0025C0                     u401:
   395   0025C0  EFE4  F012         	goto	l1035
   396   0025C4                     u400:
   397   0025C4  0E03               	movlw	3
   398   0025C6  6E02               	movwf	scan_operation@op_key^0,c
   399   0025C8                     l1035:
   400                           
   401                           ;main.c: 116:         if(PORTAbits.RA3 == 1) op_key = 4;
   402   0025C8  A6CA               	btfss	202,3,c	;volatile
   403   0025CA  EFE9  F012         	goto	u411
   404   0025CE  EFEB  F012         	goto	u410
   405   0025D2                     u411:
   406   0025D2  EFED  F012         	goto	l80
   407   0025D6                     u410:
   408   0025D6  0E04               	movlw	4
   409   0025D8  6E02               	movwf	scan_operation@op_key^0,c
   410   0025DA                     l80:
   411                           
   412                           ;main.c: 111:     while (op_key ==0) {
   413   0025DA  5002               	movf	scan_operation@op_key^0,w,c
   414   0025DC  B4D8               	btfsc	status,2,c
   415   0025DE  EFF3  F012         	goto	u421
   416   0025E2  EFF5  F012         	goto	u420
   417   0025E6                     u421:
   418   0025E6  EFC8  F012         	goto	l81
   419   0025EA                     u420:
   420   0025EA                     
   421                           ;main.c: 118:         _delay((unsigned long)((1)*(8000000/4000.0)));
   422   0025EA  0E03               	movlw	3
   423   0025EC  6E01               	movwf	??_scan_operation^0,c
   424   0025EE  0E98               	movlw	152
   425   0025F0                     u1087:
   426   0025F0  2EE8               	decfsz	wreg,f,c
   427   0025F2  D7FE               	bra	u1087
   428   0025F4  2E01               	decfsz	??_scan_operation^0,f,c
   429   0025F6  D7FC               	bra	u1087
   430   0025F8                     
   431                           ;main.c: 119:         return op_key;
   432   0025F8  5002               	movf	scan_operation@op_key^0,w,c
   433   0025FA  0012               	return		;funcret
   434   0025FC                     __end_of_scan_operation:
   435                           	callstack 0
   436                           
   437 ;; *************** function _scan_number *****************
   438 ;; Defined at:
   439 ;;		line 49 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  input           1    4[COMRAM] unsigned char 
   444 ;;  output          1    3[COMRAM] unsigned char 
   445 ;;  count           1    2[COMRAM] unsigned char 
   446 ;;  button          1    1[COMRAM] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      unsigned char 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, prodl, prodh
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   457 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   459 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   460 ;;Total ram usage:        5 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text2
   470   002228                     __ptext2:
   471                           	callstack 0
   472   002228                     _scan_number:
   473                           	callstack 30
   474   002228                     
   475                           ;main.c: 50:     unsigned char input = 10;
   476   002228  0E0A               	movlw	10
   477   00222A  6E05               	movwf	scan_number@input^0,c
   478                           
   479                           ;main.c: 52:     unsigned char button = 0;
   480   00222C  0E00               	movlw	0
   481   00222E  6E02               	movwf	scan_number@button^0,c
   482                           
   483                           ;main.c: 53:     unsigned char count = 2;
   484   002230  0E02               	movlw	2
   485   002232  6E03               	movwf	scan_number@count^0,c
   486                           
   487                           ;main.c: 55:     while (input == 10)
   488   002234  EF7C  F011         	goto	l955
   489   002238                     l52:
   490                           
   491                           ;main.c: 56:     {;main.c: 57:         PORTBbits.RB0 = 1;
   492   002238  80CB               	bsf	203,0,c	;volatile
   493                           
   494                           ;main.c: 58:         if (PORTAbits.RA0 == 1)input = 1;
   495   00223A  A0CA               	btfss	202,0,c	;volatile
   496   00223C  EF22  F011         	goto	u161
   497   002240  EF24  F011         	goto	u160
   498   002244                     u161:
   499   002244  EF26  F011         	goto	l909
   500   002248                     u160:
   501   002248  0E01               	movlw	1
   502   00224A  6E05               	movwf	scan_number@input^0,c
   503   00224C                     l909:
   504                           
   505                           ;main.c: 59:         if(PORTAbits.RA1 == 1) input = 4;
   506   00224C  A2CA               	btfss	202,1,c	;volatile
   507   00224E  EF2B  F011         	goto	u171
   508   002252  EF2D  F011         	goto	u170
   509   002256                     u171:
   510   002256  EF2F  F011         	goto	l913
   511   00225A                     u170:
   512   00225A  0E04               	movlw	4
   513   00225C  6E05               	movwf	scan_number@input^0,c
   514   00225E                     l913:
   515                           
   516                           ;main.c: 60:         if(PORTAbits.RA2 == 1) input = 7;
   517   00225E  A4CA               	btfss	202,2,c	;volatile
   518   002260  EF34  F011         	goto	u181
   519   002264  EF36  F011         	goto	u180
   520   002268                     u181:
   521   002268  EF38  F011         	goto	l917
   522   00226C                     u180:
   523   00226C  0E07               	movlw	7
   524   00226E  6E05               	movwf	scan_number@input^0,c
   525   002270                     l917:
   526                           
   527                           ;main.c: 61:         PORTBbits.RB0 = 0;
   528   002270  90CB               	bcf	203,0,c	;volatile
   529   002272                     
   530                           ;main.c: 63:          PORTBbits.RB1 = 1;
   531   002272  82CB               	bsf	203,1,c	;volatile
   532   002274                     
   533                           ;main.c: 64:         if (PORTAbits.RA0 == 1)input = 2;
   534   002274  A0CA               	btfss	202,0,c	;volatile
   535   002276  EF3F  F011         	goto	u191
   536   00227A  EF41  F011         	goto	u190
   537   00227E                     u191:
   538   00227E  EF43  F011         	goto	l925
   539   002282                     u190:
   540   002282  0E02               	movlw	2
   541   002284  6E05               	movwf	scan_number@input^0,c
   542   002286                     l925:
   543                           
   544                           ;main.c: 65:         if(PORTAbits.RA1 == 1) input = 5;
   545   002286  A2CA               	btfss	202,1,c	;volatile
   546   002288  EF48  F011         	goto	u201
   547   00228C  EF4A  F011         	goto	u200
   548   002290                     u201:
   549   002290  EF4C  F011         	goto	l929
   550   002294                     u200:
   551   002294  0E05               	movlw	5
   552   002296  6E05               	movwf	scan_number@input^0,c
   553   002298                     l929:
   554                           
   555                           ;main.c: 66:         if(PORTAbits.RA2 == 1) input = 8;
   556   002298  A4CA               	btfss	202,2,c	;volatile
   557   00229A  EF51  F011         	goto	u211
   558   00229E  EF53  F011         	goto	u210
   559   0022A2                     u211:
   560   0022A2  EF55  F011         	goto	l933
   561   0022A6                     u210:
   562   0022A6  0E08               	movlw	8
   563   0022A8  6E05               	movwf	scan_number@input^0,c
   564   0022AA                     l933:
   565                           
   566                           ;main.c: 67:         if(PORTAbits.RA3 == 1) input = 0;
   567   0022AA  A6CA               	btfss	202,3,c	;volatile
   568   0022AC  EF5A  F011         	goto	u221
   569   0022B0  EF5C  F011         	goto	u220
   570   0022B4                     u221:
   571   0022B4  EF5E  F011         	goto	l937
   572   0022B8                     u220:
   573   0022B8  0E00               	movlw	0
   574   0022BA  6E05               	movwf	scan_number@input^0,c
   575   0022BC                     l937:
   576                           
   577                           ;main.c: 68:         PORTBbits.RB1 = 0;
   578   0022BC  92CB               	bcf	203,1,c	;volatile
   579   0022BE                     
   580                           ;main.c: 70:          PORTBbits.RB2 = 1;
   581   0022BE  84CB               	bsf	203,2,c	;volatile
   582   0022C0                     
   583                           ;main.c: 71:         if (PORTAbits.RA0 == 1)input = 3;
   584   0022C0  A0CA               	btfss	202,0,c	;volatile
   585   0022C2  EF65  F011         	goto	u231
   586   0022C6  EF67  F011         	goto	u230
   587   0022CA                     u231:
   588   0022CA  EF69  F011         	goto	l945
   589   0022CE                     u230:
   590   0022CE  0E03               	movlw	3
   591   0022D0  6E05               	movwf	scan_number@input^0,c
   592   0022D2                     l945:
   593                           
   594                           ;main.c: 72:         if(PORTAbits.RA1 == 1) input = 6;
   595   0022D2  A2CA               	btfss	202,1,c	;volatile
   596   0022D4  EF6E  F011         	goto	u241
   597   0022D8  EF70  F011         	goto	u240
   598   0022DC                     u241:
   599   0022DC  EF72  F011         	goto	l949
   600   0022E0                     u240:
   601   0022E0  0E06               	movlw	6
   602   0022E2  6E05               	movwf	scan_number@input^0,c
   603   0022E4                     l949:
   604                           
   605                           ;main.c: 73:         if(PORTAbits.RA2 == 1) input = 9;
   606   0022E4  A4CA               	btfss	202,2,c	;volatile
   607   0022E6  EF77  F011         	goto	u251
   608   0022EA  EF79  F011         	goto	u250
   609   0022EE                     u251:
   610   0022EE  EF7B  F011         	goto	l953
   611   0022F2                     u250:
   612   0022F2  0E09               	movlw	9
   613   0022F4  6E05               	movwf	scan_number@input^0,c
   614   0022F6                     l953:
   615                           
   616                           ;main.c: 74:         PORTBbits.RB2 = 0;
   617   0022F6  94CB               	bcf	203,2,c	;volatile
   618   0022F8                     l955:
   619                           
   620                           ;main.c: 55:     while (input == 10)
   621   0022F8  0E0A               	movlw	10
   622   0022FA  1805               	xorwf	scan_number@input^0,w,c
   623   0022FC  B4D8               	btfsc	status,2,c
   624   0022FE  EF83  F011         	goto	u261
   625   002302  EF85  F011         	goto	u260
   626   002306                     u261:
   627   002306  EF1C  F011         	goto	l52
   628   00230A                     u260:
   629   00230A                     
   630                           ;main.c: 77:     _delay((unsigned long)((1)*(8000000/4000.0)));
   631   00230A  0E03               	movlw	3
   632   00230C  6E01               	movwf	??_scan_number^0,c
   633   00230E  0E98               	movlw	152
   634   002310                     u1097:
   635   002310  2EE8               	decfsz	wreg,f,c
   636   002312  D7FE               	bra	u1097
   637   002314  2E01               	decfsz	??_scan_number^0,f,c
   638   002316  D7FC               	bra	u1097
   639   002318                     
   640                           ;main.c: 79:     input *=10;
   641   002318  0E0A               	movlw	10
   642   00231A  0205               	mulwf	scan_number@input^0,c
   643   00231C  50F3               	movf	prodl,w,c
   644   00231E  6E05               	movwf	scan_number@input^0,c
   645   002320                     
   646                           ;main.c: 80:     output = input;
   647   002320  C005  F004         	movff	scan_number@input,scan_number@output
   648   002324                     
   649                           ;main.c: 82:     input = 10;
   650   002324  0E0A               	movlw	10
   651   002326  6E05               	movwf	scan_number@input^0,c
   652                           
   653                           ;main.c: 83:     while (input == 10)
   654   002328  EFF6  F011         	goto	l1013
   655   00232C                     l65:
   656                           
   657                           ;main.c: 84:     {;main.c: 85:         PORTBbits.RB0 = 1;
   658   00232C  80CB               	bsf	203,0,c	;volatile
   659                           
   660                           ;main.c: 86:         if (PORTAbits.RA0 == 1)input = 1;
   661   00232E  A0CA               	btfss	202,0,c	;volatile
   662   002330  EF9C  F011         	goto	u271
   663   002334  EF9E  F011         	goto	u270
   664   002338                     u271:
   665   002338  EFA0  F011         	goto	l967
   666   00233C                     u270:
   667   00233C  0E01               	movlw	1
   668   00233E  6E05               	movwf	scan_number@input^0,c
   669   002340                     l967:
   670                           
   671                           ;main.c: 87:         if(PORTAbits.RA1 == 1) input = 4;
   672   002340  A2CA               	btfss	202,1,c	;volatile
   673   002342  EFA5  F011         	goto	u281
   674   002346  EFA7  F011         	goto	u280
   675   00234A                     u281:
   676   00234A  EFA9  F011         	goto	l971
   677   00234E                     u280:
   678   00234E  0E04               	movlw	4
   679   002350  6E05               	movwf	scan_number@input^0,c
   680   002352                     l971:
   681                           
   682                           ;main.c: 88:         if(PORTAbits.RA2 == 1) input = 7;
   683   002352  A4CA               	btfss	202,2,c	;volatile
   684   002354  EFAE  F011         	goto	u291
   685   002358  EFB0  F011         	goto	u290
   686   00235C                     u291:
   687   00235C  EFB2  F011         	goto	l975
   688   002360                     u290:
   689   002360  0E07               	movlw	7
   690   002362  6E05               	movwf	scan_number@input^0,c
   691   002364                     l975:
   692                           
   693                           ;main.c: 89:         PORTBbits.RB0 = 0;
   694   002364  90CB               	bcf	203,0,c	;volatile
   695   002366                     
   696                           ;main.c: 91:          PORTBbits.RB1 = 1;
   697   002366  82CB               	bsf	203,1,c	;volatile
   698   002368                     
   699                           ;main.c: 92:         if(PORTAbits.RA0 == 1) input = 2;
   700   002368  A0CA               	btfss	202,0,c	;volatile
   701   00236A  EFB9  F011         	goto	u301
   702   00236E  EFBB  F011         	goto	u300
   703   002372                     u301:
   704   002372  EFBD  F011         	goto	l983
   705   002376                     u300:
   706   002376  0E02               	movlw	2
   707   002378  6E05               	movwf	scan_number@input^0,c
   708   00237A                     l983:
   709                           
   710                           ;main.c: 93:         if(PORTAbits.RA1 == 1) input = 5;
   711   00237A  A2CA               	btfss	202,1,c	;volatile
   712   00237C  EFC2  F011         	goto	u311
   713   002380  EFC4  F011         	goto	u310
   714   002384                     u311:
   715   002384  EFC6  F011         	goto	l987
   716   002388                     u310:
   717   002388  0E05               	movlw	5
   718   00238A  6E05               	movwf	scan_number@input^0,c
   719   00238C                     l987:
   720                           
   721                           ;main.c: 94:         if(PORTAbits.RA2 == 1) input = 8;
   722   00238C  A4CA               	btfss	202,2,c	;volatile
   723   00238E  EFCB  F011         	goto	u321
   724   002392  EFCD  F011         	goto	u320
   725   002396                     u321:
   726   002396  EFCF  F011         	goto	l991
   727   00239A                     u320:
   728   00239A  0E08               	movlw	8
   729   00239C  6E05               	movwf	scan_number@input^0,c
   730   00239E                     l991:
   731                           
   732                           ;main.c: 95:         if(PORTAbits.RA3 == 1) input = 0;
   733   00239E  A6CA               	btfss	202,3,c	;volatile
   734   0023A0  EFD4  F011         	goto	u331
   735   0023A4  EFD6  F011         	goto	u330
   736   0023A8                     u331:
   737   0023A8  EFD8  F011         	goto	l995
   738   0023AC                     u330:
   739   0023AC  0E00               	movlw	0
   740   0023AE  6E05               	movwf	scan_number@input^0,c
   741   0023B0                     l995:
   742                           
   743                           ;main.c: 96:         PORTBbits.RB1 = 0;
   744   0023B0  92CB               	bcf	203,1,c	;volatile
   745   0023B2                     
   746                           ;main.c: 98:          PORTBbits.RB2 = 1;
   747   0023B2  84CB               	bsf	203,2,c	;volatile
   748   0023B4                     
   749                           ;main.c: 99:         if (PORTAbits.RA0 == 1)input = 3;
   750   0023B4  A0CA               	btfss	202,0,c	;volatile
   751   0023B6  EFDF  F011         	goto	u341
   752   0023BA  EFE1  F011         	goto	u340
   753   0023BE                     u341:
   754   0023BE  EFE3  F011         	goto	l1003
   755   0023C2                     u340:
   756   0023C2  0E03               	movlw	3
   757   0023C4  6E05               	movwf	scan_number@input^0,c
   758   0023C6                     l1003:
   759                           
   760                           ;main.c: 100:         if(PORTAbits.RA1 == 1) input = 6;
   761   0023C6  A2CA               	btfss	202,1,c	;volatile
   762   0023C8  EFE8  F011         	goto	u351
   763   0023CC  EFEA  F011         	goto	u350
   764   0023D0                     u351:
   765   0023D0  EFEC  F011         	goto	l1007
   766   0023D4                     u350:
   767   0023D4  0E06               	movlw	6
   768   0023D6  6E05               	movwf	scan_number@input^0,c
   769   0023D8                     l1007:
   770                           
   771                           ;main.c: 101:         if(PORTAbits.RA2 == 1) input = 9;
   772   0023D8  A4CA               	btfss	202,2,c	;volatile
   773   0023DA  EFF1  F011         	goto	u361
   774   0023DE  EFF3  F011         	goto	u360
   775   0023E2                     u361:
   776   0023E2  EFF5  F011         	goto	l1011
   777   0023E6                     u360:
   778   0023E6  0E09               	movlw	9
   779   0023E8  6E05               	movwf	scan_number@input^0,c
   780   0023EA                     l1011:
   781                           
   782                           ;main.c: 102:         PORTBbits.RB2 = 0;
   783   0023EA  94CB               	bcf	203,2,c	;volatile
   784   0023EC                     l1013:
   785                           
   786                           ;main.c: 83:     while (input == 10)
   787   0023EC  0E0A               	movlw	10
   788   0023EE  1805               	xorwf	scan_number@input^0,w,c
   789   0023F0  B4D8               	btfsc	status,2,c
   790   0023F2  EFFD  F011         	goto	u371
   791   0023F6  EFFF  F011         	goto	u370
   792   0023FA                     u371:
   793   0023FA  EF96  F011         	goto	l65
   794   0023FE                     u370:
   795   0023FE                     
   796                           ;main.c: 104:     output += input;
   797   0023FE  5005               	movf	scan_number@input^0,w,c
   798   002400  2604               	addwf	scan_number@output^0,f,c
   799   002402                     
   800                           ;main.c: 105:     _delay((unsigned long)((1)*(8000000/4000.0)));
   801   002402  0E03               	movlw	3
   802   002404  6E01               	movwf	??_scan_number^0,c
   803   002406  0E98               	movlw	152
   804   002408                     u1107:
   805   002408  2EE8               	decfsz	wreg,f,c
   806   00240A  D7FE               	bra	u1107
   807   00240C  2E01               	decfsz	??_scan_number^0,f,c
   808   00240E  D7FC               	bra	u1107
   809   002410                     
   810                           ;main.c: 106:     return output;
   811   002410  5004               	movf	scan_number@output^0,w,c
   812   002412  0012               	return		;funcret
   813   002414                     __end_of_scan_number:
   814                           	callstack 0
   815                           
   816 ;; *************** function _calculate *****************
   817 ;; Defined at:
   818 ;;		line 122 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  x               1    wreg     unsigned char 
   821 ;;  y               1    4[COMRAM] unsigned char 
   822 ;;  op              1    5[COMRAM] unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  x               1    7[COMRAM] unsigned char 
   825 ;;  output          1    6[COMRAM] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      unsigned char 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   839 ;;Total ram usage:        4 bytes
   840 ;; Hardware stack levels used: 1
   841 ;; Hardware stack levels required when called: 1
   842 ;; This function calls:
   843 ;;		___lbdiv
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text3
   850   0025FC                     __ptext3:
   851                           	callstack 0
   852   0025FC                     _calculate:
   853                           	callstack 29
   854                           
   855                           ;incstack = 0
   856                           ;calculate@x stored from wreg
   857   0025FC  6E08               	movwf	calculate@x^0,c
   858   0025FE                     
   859                           ;main.c: 123:     unsigned char output = 0;
   860   0025FE  0E00               	movlw	0
   861   002600  6E07               	movwf	calculate@output^0,c
   862   002602                     
   863                           ;main.c: 124:     if(op == 1)
   864   002602  0406               	decf	calculate@op^0,w,c
   865   002604  A4D8               	btfss	status,2,c
   866   002606  EF07  F013         	goto	u831
   867   00260A  EF09  F013         	goto	u830
   868   00260E                     u831:
   869   00260E  EF0C  F013         	goto	l90
   870   002612                     u830:
   871   002612                     
   872                           ;main.c: 125:         output = x + y;
   873   002612  5008               	movf	calculate@x^0,w,c
   874   002614  2405               	addwf	calculate@y^0,w,c
   875   002616  6E07               	movwf	calculate@output^0,c
   876   002618                     l90:
   877                           
   878                           ;main.c: 126:     if(op ==2)
   879   002618  0E02               	movlw	2
   880   00261A  1806               	xorwf	calculate@op^0,w,c
   881   00261C  A4D8               	btfss	status,2,c
   882   00261E  EF13  F013         	goto	u841
   883   002622  EF15  F013         	goto	u840
   884   002626                     u841:
   885   002626  EF18  F013         	goto	l91
   886   00262A                     u840:
   887   00262A                     
   888                           ;main.c: 127:         output = x-y;
   889   00262A  5005               	movf	calculate@y^0,w,c
   890   00262C  5C08               	subwf	calculate@x^0,w,c
   891   00262E  6E07               	movwf	calculate@output^0,c
   892   002630                     l91:
   893                           
   894                           ;main.c: 128:     if(op == 3)
   895   002630  0E03               	movlw	3
   896   002632  1806               	xorwf	calculate@op^0,w,c
   897   002634  A4D8               	btfss	status,2,c
   898   002636  EF1F  F013         	goto	u851
   899   00263A  EF21  F013         	goto	u850
   900   00263E                     u851:
   901   00263E  EF26  F013         	goto	l1291
   902   002642                     u850:
   903   002642                     
   904                           ;main.c: 129:         output = x*y;
   905   002642  5008               	movf	calculate@x^0,w,c
   906   002644  0205               	mulwf	calculate@y^0,c
   907   002646  006F FFCC  F007    	movff	prodl,calculate@output
   908   00264C                     l1291:
   909                           
   910                           ;main.c: 130:     if(op == 4)
   911   00264C  0E04               	movlw	4
   912   00264E  1806               	xorwf	calculate@op^0,w,c
   913   002650  A4D8               	btfss	status,2,c
   914   002652  EF2D  F013         	goto	u861
   915   002656  EF2F  F013         	goto	u860
   916   00265A                     u861:
   917   00265A  EF35  F013         	goto	l1295
   918   00265E                     u860:
   919   00265E                     
   920                           ;main.c: 131:         output = x/y;
   921   00265E  C005  F001         	movff	calculate@y,___lbdiv@divisor
   922   002662  5008               	movf	calculate@x^0,w,c
   923   002664  EC65  F013         	call	___lbdiv
   924   002668  6E07               	movwf	calculate@output^0,c
   925   00266A                     l1295:
   926                           
   927                           ;main.c: 132:     return output;
   928   00266A  5007               	movf	calculate@output^0,w,c
   929   00266C  0012               	return		;funcret
   930   00266E                     __end_of_calculate:
   931                           	callstack 0
   932                           
   933 ;; *************** function ___lbdiv *****************
   934 ;; Defined at:
   935 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  dividend        1    wreg     unsigned char 
   938 ;;  divisor         1    0[COMRAM] unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  dividend        1    1[COMRAM] unsigned char 
   941 ;;  quotient        1    3[COMRAM] unsigned char 
   942 ;;  counter         1    2[COMRAM] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      unsigned char 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   952 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   956 ;;Total ram usage:        4 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_calculate
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text4
   966   0026CA                     __ptext4:
   967                           	callstack 0
   968   0026CA                     ___lbdiv:
   969                           	callstack 29
   970                           
   971                           ;incstack = 0
   972                           ;___lbdiv@dividend stored from wreg
   973   0026CA  6E02               	movwf	___lbdiv@dividend^0,c
   974   0026CC  0E00               	movlw	0
   975   0026CE  6E04               	movwf	___lbdiv@quotient^0,c
   976   0026D0  5001               	movf	___lbdiv@divisor^0,w,c
   977   0026D2  B4D8               	btfsc	status,2,c
   978   0026D4  EF6E  F013         	goto	u801
   979   0026D8  EF70  F013         	goto	u800
   980   0026DC                     u801:
   981   0026DC  EF91  F013         	goto	l1277
   982   0026E0                     u800:
   983   0026E0  0E01               	movlw	1
   984   0026E2  6E03               	movwf	___lbdiv@counter^0,c
   985   0026E4  EF77  F013         	goto	l1265
   986   0026E8                     l1261:
   987   0026E8  90D8               	bcf	status,0,c
   988   0026EA  3601               	rlcf	___lbdiv@divisor^0,f,c
   989   0026EC  2A03               	incf	___lbdiv@counter^0,f,c
   990   0026EE                     l1265:
   991   0026EE  AE01               	btfss	___lbdiv@divisor^0,7,c
   992   0026F0  EF7C  F013         	goto	u811
   993   0026F4  EF7E  F013         	goto	u810
   994   0026F8                     u811:
   995   0026F8  EF74  F013         	goto	l1261
   996   0026FC                     u810:
   997   0026FC                     l1267:
   998   0026FC  90D8               	bcf	status,0,c
   999   0026FE  3604               	rlcf	___lbdiv@quotient^0,f,c
  1000   002700  5001               	movf	___lbdiv@divisor^0,w,c
  1001   002702  5C02               	subwf	___lbdiv@dividend^0,w,c
  1002   002704  A0D8               	btfss	status,0,c
  1003   002706  EF87  F013         	goto	u821
  1004   00270A  EF89  F013         	goto	u820
  1005   00270E                     u821:
  1006   00270E  EF8C  F013         	goto	l1273
  1007   002712                     u820:
  1008   002712  5001               	movf	___lbdiv@divisor^0,w,c
  1009   002714  5E02               	subwf	___lbdiv@dividend^0,f,c
  1010   002716  8004               	bsf	___lbdiv@quotient^0,0,c
  1011   002718                     l1273:
  1012   002718  90D8               	bcf	status,0,c
  1013   00271A  3201               	rrcf	___lbdiv@divisor^0,f,c
  1014   00271C  2E03               	decfsz	___lbdiv@counter^0,f,c
  1015   00271E  EF7E  F013         	goto	l1267
  1016   002722                     l1277:
  1017   002722  5004               	movf	___lbdiv@quotient^0,w,c
  1018   002724  0012               	return		;funcret
  1019   002726                     __end_of___lbdiv:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _PORT_Output *****************
  1023 ;; Defined at:
  1024 ;;		line 135 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  answer          1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  answer          1    9[COMRAM] unsigned char 
  1029 ;;  second_dig      1   13[COMRAM] unsigned char 
  1030 ;;  first_dig       1   12[COMRAM] unsigned char 
  1031 ;;  display2        1   11[COMRAM] unsigned char 
  1032 ;;  display1        1   10[COMRAM] unsigned char 
  1033 ;;  i               1    8[COMRAM] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1047 ;;Total ram usage:        6 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 1
  1050 ;; This function calls:
  1051 ;;		___awdiv
  1052 ;;		___awmod
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text5
  1059   002002                     __ptext5:
  1060                           	callstack 0
  1061   002002                     _PORT_Output:
  1062                           	callstack 29
  1063                           
  1064                           ;incstack = 0
  1065                           ;PORT_Output@answer stored from wreg
  1066   002002  6E0A               	movwf	PORT_Output@answer^0,c
  1067   002004                     
  1068                           ;main.c: 137:     unsigned char second_dig = 0;
  1069   002004  0E00               	movlw	0
  1070   002006  6E0E               	movwf	PORT_Output@second_dig^0,c
  1071                           
  1072                           ;main.c: 138:     unsigned char i = 0;
  1073   002008  0E00               	movlw	0
  1074   00200A  6E09               	movwf	PORT_Output@i^0,c
  1075                           
  1076                           ;main.c: 139:     unsigned char display1 = 0;
  1077   00200C  0E00               	movlw	0
  1078   00200E  6E0B               	movwf	PORT_Output@display1^0,c
  1079                           
  1080                           ;main.c: 140:     unsigned char display2 = 0;
  1081   002010  0E00               	movlw	0
  1082   002012  6E0C               	movwf	PORT_Output@display2^0,c
  1083   002014                     
  1084                           ;main.c: 144:     first_dig = answer/10;
  1085   002014  C00A  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1086   002018  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1087   00201A  0E00               	movlw	0
  1088   00201C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1089   00201E  0E0A               	movlw	10
  1090   002020  6E03               	movwf	___awdiv@divisor^0,c
  1091   002022  EC0A  F012         	call	___awdiv	;wreg free
  1092   002026  5001               	movf	?___awdiv^0,w,c
  1093   002028  6E0D               	movwf	PORT_Output@first_dig^0,c
  1094                           
  1095                           ;main.c: 145:     second_dig = answer % 10;
  1096   00202A  C00A  F001         	movff	PORT_Output@answer,___awmod@dividend
  1097   00202E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1098   002030  0E00               	movlw	0
  1099   002032  6E04               	movwf	(___awmod@divisor+1)^0,c
  1100   002034  0E0A               	movlw	10
  1101   002036  6E03               	movwf	___awmod@divisor^0,c
  1102   002038  EC6C  F012         	call	___awmod	;wreg free
  1103   00203C  5001               	movf	?___awmod^0,w,c
  1104   00203E  6E0E               	movwf	PORT_Output@second_dig^0,c
  1105   002040                     
  1106                           ;main.c: 147:     if(first_dig == 0) display1 = 0xC0;
  1107   002040  500D               	movf	PORT_Output@first_dig^0,w,c
  1108   002042  A4D8               	btfss	status,2,c
  1109   002044  EF26  F010         	goto	u871
  1110   002048  EF28  F010         	goto	u870
  1111   00204C                     u871:
  1112   00204C  EF2A  F010         	goto	l1309
  1113   002050                     u870:
  1114   002050  0EC0               	movlw	192
  1115   002052  6E0B               	movwf	PORT_Output@display1^0,c
  1116   002054                     l1309:
  1117                           
  1118                           ;main.c: 148:     if(first_dig == 1) display1 = 0xF9;
  1119   002054  040D               	decf	PORT_Output@first_dig^0,w,c
  1120   002056  A4D8               	btfss	status,2,c
  1121   002058  EF30  F010         	goto	u881
  1122   00205C  EF32  F010         	goto	u880
  1123   002060                     u881:
  1124   002060  EF34  F010         	goto	l1313
  1125   002064                     u880:
  1126   002064  0EF9               	movlw	249
  1127   002066  6E0B               	movwf	PORT_Output@display1^0,c
  1128   002068                     l1313:
  1129                           
  1130                           ;main.c: 149:     if(first_dig == 2) display1 = 0xA4;
  1131   002068  0E02               	movlw	2
  1132   00206A  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1133   00206C  A4D8               	btfss	status,2,c
  1134   00206E  EF3B  F010         	goto	u891
  1135   002072  EF3D  F010         	goto	u890
  1136   002076                     u891:
  1137   002076  EF3F  F010         	goto	l1317
  1138   00207A                     u890:
  1139   00207A  0EA4               	movlw	164
  1140   00207C  6E0B               	movwf	PORT_Output@display1^0,c
  1141   00207E                     l1317:
  1142                           
  1143                           ;main.c: 150:     if(first_dig == 3) display1 = 0xB0;
  1144   00207E  0E03               	movlw	3
  1145   002080  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1146   002082  A4D8               	btfss	status,2,c
  1147   002084  EF46  F010         	goto	u901
  1148   002088  EF48  F010         	goto	u900
  1149   00208C                     u901:
  1150   00208C  EF4A  F010         	goto	l1321
  1151   002090                     u900:
  1152   002090  0EB0               	movlw	176
  1153   002092  6E0B               	movwf	PORT_Output@display1^0,c
  1154   002094                     l1321:
  1155                           
  1156                           ;main.c: 151:     if(first_dig == 4) display1 = 0x99;
  1157   002094  0E04               	movlw	4
  1158   002096  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1159   002098  A4D8               	btfss	status,2,c
  1160   00209A  EF51  F010         	goto	u911
  1161   00209E  EF53  F010         	goto	u910
  1162   0020A2                     u911:
  1163   0020A2  EF55  F010         	goto	l1325
  1164   0020A6                     u910:
  1165   0020A6  0E99               	movlw	153
  1166   0020A8  6E0B               	movwf	PORT_Output@display1^0,c
  1167   0020AA                     l1325:
  1168                           
  1169                           ;main.c: 152:     if(first_dig == 5) display1 = 0x92;
  1170   0020AA  0E05               	movlw	5
  1171   0020AC  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1172   0020AE  A4D8               	btfss	status,2,c
  1173   0020B0  EF5C  F010         	goto	u921
  1174   0020B4  EF5E  F010         	goto	u920
  1175   0020B8                     u921:
  1176   0020B8  EF60  F010         	goto	l1329
  1177   0020BC                     u920:
  1178   0020BC  0E92               	movlw	146
  1179   0020BE  6E0B               	movwf	PORT_Output@display1^0,c
  1180   0020C0                     l1329:
  1181                           
  1182                           ;main.c: 153:     if(first_dig == 6) display1 = 0x82;
  1183   0020C0  0E06               	movlw	6
  1184   0020C2  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1185   0020C4  A4D8               	btfss	status,2,c
  1186   0020C6  EF67  F010         	goto	u931
  1187   0020CA  EF69  F010         	goto	u930
  1188   0020CE                     u931:
  1189   0020CE  EF6B  F010         	goto	l1333
  1190   0020D2                     u930:
  1191   0020D2  0E82               	movlw	130
  1192   0020D4  6E0B               	movwf	PORT_Output@display1^0,c
  1193   0020D6                     l1333:
  1194                           
  1195                           ;main.c: 154:     if(first_dig == 7) display1 = 0xF8;
  1196   0020D6  0E07               	movlw	7
  1197   0020D8  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1198   0020DA  A4D8               	btfss	status,2,c
  1199   0020DC  EF72  F010         	goto	u941
  1200   0020E0  EF74  F010         	goto	u940
  1201   0020E4                     u941:
  1202   0020E4  EF76  F010         	goto	l1337
  1203   0020E8                     u940:
  1204   0020E8  0EF8               	movlw	248
  1205   0020EA  6E0B               	movwf	PORT_Output@display1^0,c
  1206   0020EC                     l1337:
  1207                           
  1208                           ;main.c: 155:     if(first_dig == 8) display1 = 0x80;
  1209   0020EC  0E08               	movlw	8
  1210   0020EE  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1211   0020F0  A4D8               	btfss	status,2,c
  1212   0020F2  EF7D  F010         	goto	u951
  1213   0020F6  EF7F  F010         	goto	u950
  1214   0020FA                     u951:
  1215   0020FA  EF81  F010         	goto	l1341
  1216   0020FE                     u950:
  1217   0020FE  0E80               	movlw	128
  1218   002100  6E0B               	movwf	PORT_Output@display1^0,c
  1219   002102                     l1341:
  1220                           
  1221                           ;main.c: 156:     if(first_dig == 9) display1 = 0x98;
  1222   002102  0E09               	movlw	9
  1223   002104  180D               	xorwf	PORT_Output@first_dig^0,w,c
  1224   002106  A4D8               	btfss	status,2,c
  1225   002108  EF88  F010         	goto	u961
  1226   00210C  EF8A  F010         	goto	u960
  1227   002110                     u961:
  1228   002110  EF8C  F010         	goto	l107
  1229   002114                     u960:
  1230   002114  0E98               	movlw	152
  1231   002116  6E0B               	movwf	PORT_Output@display1^0,c
  1232   002118                     l107:
  1233                           
  1234                           ;main.c: 158:     if(second_dig == 0) display2 = 0xC0;
  1235   002118  500E               	movf	PORT_Output@second_dig^0,w,c
  1236   00211A  A4D8               	btfss	status,2,c
  1237   00211C  EF92  F010         	goto	u971
  1238   002120  EF94  F010         	goto	u970
  1239   002124                     u971:
  1240   002124  EF96  F010         	goto	l1347
  1241   002128                     u970:
  1242   002128  0EC0               	movlw	192
  1243   00212A  6E0C               	movwf	PORT_Output@display2^0,c
  1244   00212C                     l1347:
  1245                           
  1246                           ;main.c: 159:     if(second_dig == 1) display2 = 0xF9;
  1247   00212C  040E               	decf	PORT_Output@second_dig^0,w,c
  1248   00212E  A4D8               	btfss	status,2,c
  1249   002130  EF9C  F010         	goto	u981
  1250   002134  EF9E  F010         	goto	u980
  1251   002138                     u981:
  1252   002138  EFA0  F010         	goto	l1351
  1253   00213C                     u980:
  1254   00213C  0EF9               	movlw	249
  1255   00213E  6E0C               	movwf	PORT_Output@display2^0,c
  1256   002140                     l1351:
  1257                           
  1258                           ;main.c: 160:     if(second_dig == 2) display2 = 0xA4;
  1259   002140  0E02               	movlw	2
  1260   002142  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1261   002144  A4D8               	btfss	status,2,c
  1262   002146  EFA7  F010         	goto	u991
  1263   00214A  EFA9  F010         	goto	u990
  1264   00214E                     u991:
  1265   00214E  EFAB  F010         	goto	l1355
  1266   002152                     u990:
  1267   002152  0EA4               	movlw	164
  1268   002154  6E0C               	movwf	PORT_Output@display2^0,c
  1269   002156                     l1355:
  1270                           
  1271                           ;main.c: 161:     if(second_dig == 3) display2 = 0xB0;
  1272   002156  0E03               	movlw	3
  1273   002158  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1274   00215A  A4D8               	btfss	status,2,c
  1275   00215C  EFB2  F010         	goto	u1001
  1276   002160  EFB4  F010         	goto	u1000
  1277   002164                     u1001:
  1278   002164  EFB6  F010         	goto	l1359
  1279   002168                     u1000:
  1280   002168  0EB0               	movlw	176
  1281   00216A  6E0C               	movwf	PORT_Output@display2^0,c
  1282   00216C                     l1359:
  1283                           
  1284                           ;main.c: 162:     if(second_dig == 4) display2 = 0x99;
  1285   00216C  0E04               	movlw	4
  1286   00216E  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1287   002170  A4D8               	btfss	status,2,c
  1288   002172  EFBD  F010         	goto	u1011
  1289   002176  EFBF  F010         	goto	u1010
  1290   00217A                     u1011:
  1291   00217A  EFC1  F010         	goto	l1363
  1292   00217E                     u1010:
  1293   00217E  0E99               	movlw	153
  1294   002180  6E0C               	movwf	PORT_Output@display2^0,c
  1295   002182                     l1363:
  1296                           
  1297                           ;main.c: 163:     if(second_dig == 5) display2 = 0x92;
  1298   002182  0E05               	movlw	5
  1299   002184  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1300   002186  A4D8               	btfss	status,2,c
  1301   002188  EFC8  F010         	goto	u1021
  1302   00218C  EFCA  F010         	goto	u1020
  1303   002190                     u1021:
  1304   002190  EFCC  F010         	goto	l1367
  1305   002194                     u1020:
  1306   002194  0E92               	movlw	146
  1307   002196  6E0C               	movwf	PORT_Output@display2^0,c
  1308   002198                     l1367:
  1309                           
  1310                           ;main.c: 164:     if(second_dig == 6) display2 = 0x82;
  1311   002198  0E06               	movlw	6
  1312   00219A  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1313   00219C  A4D8               	btfss	status,2,c
  1314   00219E  EFD3  F010         	goto	u1031
  1315   0021A2  EFD5  F010         	goto	u1030
  1316   0021A6                     u1031:
  1317   0021A6  EFD7  F010         	goto	l1371
  1318   0021AA                     u1030:
  1319   0021AA  0E82               	movlw	130
  1320   0021AC  6E0C               	movwf	PORT_Output@display2^0,c
  1321   0021AE                     l1371:
  1322                           
  1323                           ;main.c: 165:     if(second_dig == 7) display2 = 0xF8;
  1324   0021AE  0E07               	movlw	7
  1325   0021B0  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1326   0021B2  A4D8               	btfss	status,2,c
  1327   0021B4  EFDE  F010         	goto	u1041
  1328   0021B8  EFE0  F010         	goto	u1040
  1329   0021BC                     u1041:
  1330   0021BC  EFE2  F010         	goto	l1375
  1331   0021C0                     u1040:
  1332   0021C0  0EF8               	movlw	248
  1333   0021C2  6E0C               	movwf	PORT_Output@display2^0,c
  1334   0021C4                     l1375:
  1335                           
  1336                           ;main.c: 166:     if(second_dig == 8) display2 = 0x80;
  1337   0021C4  0E08               	movlw	8
  1338   0021C6  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1339   0021C8  A4D8               	btfss	status,2,c
  1340   0021CA  EFE9  F010         	goto	u1051
  1341   0021CE  EFEB  F010         	goto	u1050
  1342   0021D2                     u1051:
  1343   0021D2  EFED  F010         	goto	l1379
  1344   0021D6                     u1050:
  1345   0021D6  0E80               	movlw	128
  1346   0021D8  6E0C               	movwf	PORT_Output@display2^0,c
  1347   0021DA                     l1379:
  1348                           
  1349                           ;main.c: 167:     if(second_dig == 9) display2 = 0x98;
  1350   0021DA  0E09               	movlw	9
  1351   0021DC  180E               	xorwf	PORT_Output@second_dig^0,w,c
  1352   0021DE  A4D8               	btfss	status,2,c
  1353   0021E0  EFF4  F010         	goto	u1061
  1354   0021E4  EFF6  F010         	goto	u1060
  1355   0021E8                     u1061:
  1356   0021E8  EFF8  F010         	goto	l1383
  1357   0021EC                     u1060:
  1358   0021EC  0E98               	movlw	152
  1359   0021EE  6E0C               	movwf	PORT_Output@display2^0,c
  1360   0021F0                     l1383:
  1361                           
  1362                           ;main.c: 169:     PORTBbits.RB2 = 1;
  1363   0021F0  84CB               	bsf	203,2,c	;volatile
  1364                           
  1365                           ;main.c: 170:     while (PORTAbits.RA3 == 0){
  1366   0021F2  EFFD  F010         	goto	l1387
  1367   0021F6                     l1385:
  1368                           
  1369                           ;main.c: 171:         PORTD = 0;
  1370   0021F6  0E00               	movlw	0
  1371   0021F8  6ECD               	movwf	205,c	;volatile
  1372   0021FA                     l1387:
  1373                           
  1374                           ;main.c: 170:     while (PORTAbits.RA3 == 0){
  1375   0021FA  A6CA               	btfss	202,3,c	;volatile
  1376   0021FC  EF02  F011         	goto	u1071
  1377   002200  EF04  F011         	goto	u1070
  1378   002204                     u1071:
  1379   002204  EFFB  F010         	goto	l1385
  1380   002208                     u1070:
  1381   002208                     
  1382                           ;main.c: 174:     for(i = 1; i<10000; i++)
  1383   002208  0E01               	movlw	1
  1384   00220A  6E09               	movwf	PORT_Output@i^0,c
  1385   00220C                     l121:
  1386                           
  1387                           ;main.c: 175:     {;main.c: 176:         PORTBbits.RB5 = 1;
  1388   00220C  8ACB               	bsf	203,5,c	;volatile
  1389                           
  1390                           ;main.c: 177:         PORTD = display1;
  1391   00220E  0060  F02F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1392                           
  1393                           ;main.c: 178:         PORTBbits.RB5 = 0;
  1394   002214  9ACB               	bcf	203,5,c	;volatile
  1395                           
  1396                           ;main.c: 179:         PORTBbits.RB6 = 1;
  1397   002216  8CCB               	bsf	203,6,c	;volatile
  1398                           
  1399                           ;main.c: 180:         PORTD = display2;
  1400   002218  0060  F033  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1401                           
  1402                           ;main.c: 181:         PORTBbits.RB6 = 0;
  1403   00221E  9CCB               	bcf	203,6,c	;volatile
  1404   002220                     
  1405                           ;main.c: 182:     }
  1406   002220  2A09               	incf	PORT_Output@i^0,f,c
  1407   002222  EF06  F011         	goto	l121
  1408   002226  0012               	return		;funcret
  1409   002228                     __end_of_PORT_Output:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function ___awmod *****************
  1413 ;; Defined at:
  1414 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  dividend        2    0[COMRAM] int 
  1417 ;;  divisor         2    2[COMRAM] int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  sign            1    5[COMRAM] unsigned char 
  1420 ;;  counter         1    4[COMRAM] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2    0[COMRAM] int 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1434 ;;Total ram usage:        6 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_PORT_Output
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text6
  1444   0024D8                     __ptext6:
  1445                           	callstack 0
  1446   0024D8                     ___awmod:
  1447                           	callstack 29
  1448   0024D8  0E00               	movlw	0
  1449   0024DA  6E06               	movwf	___awmod@sign^0,c
  1450   0024DC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1451   0024DE  EF75  F012         	goto	u740
  1452   0024E2  EF73  F012         	goto	u741
  1453   0024E6                     u741:
  1454   0024E6  EF7B  F012         	goto	l1227
  1455   0024EA                     u740:
  1456   0024EA  6C01               	negf	___awmod@dividend^0,c
  1457   0024EC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1458   0024EE  B0D8               	btfsc	status,0,c
  1459   0024F0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1460   0024F2  0E01               	movlw	1
  1461   0024F4  6E06               	movwf	___awmod@sign^0,c
  1462   0024F6                     l1227:
  1463   0024F6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1464   0024F8  EF82  F012         	goto	u750
  1465   0024FC  EF80  F012         	goto	u751
  1466   002500                     u751:
  1467   002500  EF86  F012         	goto	l1231
  1468   002504                     u750:
  1469   002504  6C03               	negf	___awmod@divisor^0,c
  1470   002506  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1471   002508  B0D8               	btfsc	status,0,c
  1472   00250A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1473   00250C                     l1231:
  1474   00250C  5003               	movf	___awmod@divisor^0,w,c
  1475   00250E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1476   002510  B4D8               	btfsc	status,2,c
  1477   002512  EF8D  F012         	goto	u761
  1478   002516  EF8F  F012         	goto	u760
  1479   00251A                     u761:
  1480   00251A  EFB3  F012         	goto	l1247
  1481   00251E                     u760:
  1482   00251E  0E01               	movlw	1
  1483   002520  6E05               	movwf	___awmod@counter^0,c
  1484   002522  EF97  F012         	goto	l1237
  1485   002526                     l1235:
  1486   002526  90D8               	bcf	status,0,c
  1487   002528  3603               	rlcf	___awmod@divisor^0,f,c
  1488   00252A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1489   00252C  2A05               	incf	___awmod@counter^0,f,c
  1490   00252E                     l1237:
  1491   00252E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1492   002530  EF9C  F012         	goto	u771
  1493   002534  EF9E  F012         	goto	u770
  1494   002538                     u771:
  1495   002538  EF93  F012         	goto	l1235
  1496   00253C                     u770:
  1497   00253C                     l1239:
  1498   00253C  5003               	movf	___awmod@divisor^0,w,c
  1499   00253E  5C01               	subwf	___awmod@dividend^0,w,c
  1500   002540  5004               	movf	(___awmod@divisor+1)^0,w,c
  1501   002542  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1502   002544  A0D8               	btfss	status,0,c
  1503   002546  EFA7  F012         	goto	u781
  1504   00254A  EFA9  F012         	goto	u780
  1505   00254E                     u781:
  1506   00254E  EFAD  F012         	goto	l1243
  1507   002552                     u780:
  1508   002552  5003               	movf	___awmod@divisor^0,w,c
  1509   002554  5E01               	subwf	___awmod@dividend^0,f,c
  1510   002556  5004               	movf	(___awmod@divisor+1)^0,w,c
  1511   002558  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1512   00255A                     l1243:
  1513   00255A  90D8               	bcf	status,0,c
  1514   00255C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1515   00255E  3203               	rrcf	___awmod@divisor^0,f,c
  1516   002560  2E05               	decfsz	___awmod@counter^0,f,c
  1517   002562  EF9E  F012         	goto	l1239
  1518   002566                     l1247:
  1519   002566  5006               	movf	___awmod@sign^0,w,c
  1520   002568  B4D8               	btfsc	status,2,c
  1521   00256A  EFB9  F012         	goto	u791
  1522   00256E  EFBB  F012         	goto	u790
  1523   002572                     u791:
  1524   002572  EFBF  F012         	goto	l1251
  1525   002576                     u790:
  1526   002576  6C01               	negf	___awmod@dividend^0,c
  1527   002578  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1528   00257A  B0D8               	btfsc	status,0,c
  1529   00257C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1530   00257E                     l1251:
  1531   00257E  C001  F001         	movff	___awmod@dividend,?___awmod
  1532   002582  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1533   002586  0012               	return		;funcret
  1534   002588                     __end_of___awmod:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function ___awdiv *****************
  1538 ;; Defined at:
  1539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  dividend        2    0[COMRAM] int 
  1542 ;;  divisor         2    2[COMRAM] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  quotient        2    6[COMRAM] int 
  1545 ;;  sign            1    5[COMRAM] unsigned char 
  1546 ;;  counter         1    4[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    0[COMRAM] int 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1559 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1560 ;;Total ram usage:        8 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_PORT_Output
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text7
  1570   002414                     __ptext7:
  1571                           	callstack 0
  1572   002414                     ___awdiv:
  1573                           	callstack 29
  1574   002414  0E00               	movlw	0
  1575   002416  6E06               	movwf	___awdiv@sign^0,c
  1576   002418  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1577   00241A  EF13  F012         	goto	u680
  1578   00241E  EF11  F012         	goto	u681
  1579   002422                     u681:
  1580   002422  EF19  F012         	goto	l1183
  1581   002426                     u680:
  1582   002426  6C03               	negf	___awdiv@divisor^0,c
  1583   002428  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1584   00242A  B0D8               	btfsc	status,0,c
  1585   00242C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1586   00242E  0E01               	movlw	1
  1587   002430  6E06               	movwf	___awdiv@sign^0,c
  1588   002432                     l1183:
  1589   002432  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1590   002434  EF20  F012         	goto	u690
  1591   002438  EF1E  F012         	goto	u691
  1592   00243C                     u691:
  1593   00243C  EF26  F012         	goto	l1189
  1594   002440                     u690:
  1595   002440  6C01               	negf	___awdiv@dividend^0,c
  1596   002442  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1597   002444  B0D8               	btfsc	status,0,c
  1598   002446  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1599   002448  0E01               	movlw	1
  1600   00244A  1A06               	xorwf	___awdiv@sign^0,f,c
  1601   00244C                     l1189:
  1602   00244C  0E00               	movlw	0
  1603   00244E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1604   002450  0E00               	movlw	0
  1605   002452  6E07               	movwf	___awdiv@quotient^0,c
  1606   002454  5003               	movf	___awdiv@divisor^0,w,c
  1607   002456  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1608   002458  B4D8               	btfsc	status,2,c
  1609   00245A  EF31  F012         	goto	u701
  1610   00245E  EF33  F012         	goto	u700
  1611   002462                     u701:
  1612   002462  EF5B  F012         	goto	l1211
  1613   002466                     u700:
  1614   002466  0E01               	movlw	1
  1615   002468  6E05               	movwf	___awdiv@counter^0,c
  1616   00246A  EF3B  F012         	goto	l1197
  1617   00246E                     l1195:
  1618   00246E  90D8               	bcf	status,0,c
  1619   002470  3603               	rlcf	___awdiv@divisor^0,f,c
  1620   002472  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1621   002474  2A05               	incf	___awdiv@counter^0,f,c
  1622   002476                     l1197:
  1623   002476  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1624   002478  EF40  F012         	goto	u711
  1625   00247C  EF42  F012         	goto	u710
  1626   002480                     u711:
  1627   002480  EF37  F012         	goto	l1195
  1628   002484                     u710:
  1629   002484                     l1199:
  1630   002484  90D8               	bcf	status,0,c
  1631   002486  3607               	rlcf	___awdiv@quotient^0,f,c
  1632   002488  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1633   00248A  5003               	movf	___awdiv@divisor^0,w,c
  1634   00248C  5C01               	subwf	___awdiv@dividend^0,w,c
  1635   00248E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1636   002490  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1637   002492  A0D8               	btfss	status,0,c
  1638   002494  EF4E  F012         	goto	u721
  1639   002498  EF50  F012         	goto	u720
  1640   00249C                     u721:
  1641   00249C  EF55  F012         	goto	l1207
  1642   0024A0                     u720:
  1643   0024A0  5003               	movf	___awdiv@divisor^0,w,c
  1644   0024A2  5E01               	subwf	___awdiv@dividend^0,f,c
  1645   0024A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1646   0024A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1647   0024A8  8007               	bsf	___awdiv@quotient^0,0,c
  1648   0024AA                     l1207:
  1649   0024AA  90D8               	bcf	status,0,c
  1650   0024AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1651   0024AE  3203               	rrcf	___awdiv@divisor^0,f,c
  1652   0024B0  2E05               	decfsz	___awdiv@counter^0,f,c
  1653   0024B2  EF42  F012         	goto	l1199
  1654   0024B6                     l1211:
  1655   0024B6  5006               	movf	___awdiv@sign^0,w,c
  1656   0024B8  B4D8               	btfsc	status,2,c
  1657   0024BA  EF61  F012         	goto	u731
  1658   0024BE  EF63  F012         	goto	u730
  1659   0024C2                     u731:
  1660   0024C2  EF67  F012         	goto	l1215
  1661   0024C6                     u730:
  1662   0024C6  6C07               	negf	___awdiv@quotient^0,c
  1663   0024C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1664   0024CA  B0D8               	btfsc	status,0,c
  1665   0024CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1666   0024CE                     l1215:
  1667   0024CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1668   0024D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1669   0024D6  0012               	return		;funcret
  1670   0024D8                     __end_of___awdiv:
  1671                           	callstack 0
  1672                           
  1673                           	psect	smallconst
  1674   002000                     __psmallconst:
  1675                           	callstack 0
  1676   002000  00                 	db	0
  1677   002001  00                 	db	0	; dummy byte at the end
  1678   000000                     
  1679                           	psect	rparam
  1680   000000                     tosu	equ	0x3FFF
  1681                           tosh	equ	0x3FFE
  1682                           tosl	equ	0x3FFD
  1683                           stkptr	equ	0x3FFC
  1684                           pclatu	equ	0x3FFB
  1685                           pclath	equ	0x3FFA
  1686                           pcl	equ	0x3FF9
  1687                           tblptru	equ	0x3FF8
  1688                           tblptrh	equ	0x3FF7
  1689                           tblptrl	equ	0x3FF6
  1690                           tablat	equ	0x3FF5
  1691                           prodh	equ	0x3FF4
  1692                           prodl	equ	0x3FF3
  1693                           indf0	equ	0x3FEF
  1694                           postinc0	equ	0x3FEE
  1695                           postdec0	equ	0x3FED
  1696                           preinc0	equ	0x3FEC
  1697                           plusw0	equ	0x3FEB
  1698                           fsr0h	equ	0x3FEA
  1699                           fsr0l	equ	0x3FE9
  1700                           wreg	equ	0x3FE8
  1701                           indf1	equ	0x3FE7
  1702                           postinc1	equ	0x3FE6
  1703                           postdec1	equ	0x3FE5
  1704                           preinc1	equ	0x3FE4
  1705                           plusw1	equ	0x3FE3
  1706                           fsr1h	equ	0x3FE2
  1707                           fsr1l	equ	0x3FE1
  1708                           bsr	equ	0x3FE0
  1709                           indf2	equ	0x3FDF
  1710                           postinc2	equ	0x3FDE
  1711                           postdec2	equ	0x3FDD
  1712                           preinc2	equ	0x3FDC
  1713                           plusw2	equ	0x3FDB
  1714                           fsr2h	equ	0x3FDA
  1715                           fsr2l	equ	0x3FD9
  1716                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2243
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                          6     6      0    1457
                                              8 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      13       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBIGSFRhhhh       32      0       0      68        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRhl          1      0       0      71        0.0%
BITBIGSFRlhhh      551      0       0      72        0.0%
BITBIGSFRlhhl       1F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
ABS                  0      0      13      76        0.0%
BIGRAM            1FFF      0       0      77        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 13:56:31 2024

           PORT_Output@i 0009                       l52 2238                       l45 2686  
                     l80 25DA                       l65 232C                       l81 2590  
                     l90 2618                       l91 2630                       l77 2412  
                     l94 266C                       l87 25FA          ?_scan_operation 0001  
           ___awdiv@sign 0006                      l121 220C                      l107 2118  
                    l370 2586                      l532 2724                      l357 24D6  
                    l911 225A                      l921 2274                      l913 225E  
                    l905 2228                      l931 22A6                      l923 2282  
                    l915 226C                      l907 2248                      l941 22C0  
                    l933 22AA                      l925 2286                      l917 2270  
                    l909 224C                      l951 22F2                      l943 22CE  
                    l935 22B8                      l927 2294                      l919 2272  
                    l961 2320                      l953 22F6                      l945 22D2  
                    l937 22BC                      l929 2298                      l971 2352  
                    l963 2324                      l947 22E0                      l939 22BE  
                    l955 22F8                      l981 2376                      l973 2360  
                    l965 233C                      l957 230A                      l949 22E4  
                    l991 239E                      l983 237A                      l975 2364  
                    l967 2340                      l959 2318                      l993 23AC  
                    l985 2388                      l977 2366                      l969 234E  
                    l995 23B0                      l987 238C                      l979 2368  
                    l997 23B2                      l989 239A                      l999 23B4  
                    u200 2294                      u201 2290                      u210 22A6  
                    u211 22A2                      u300 2376                      u220 22B8  
                    u301 2372                      u221 22B4                      u310 2388  
                    u230 22CE                      u311 2384                      u231 22CA  
                    u320 239A                      u240 22E0                      u160 2248  
                    u400 25C4                      u321 2396                      u241 22DC  
                    u161 2244                      u401 25C0                      u330 23AC  
                    u250 22F2                      u170 225A                      u410 25D6  
                    u331 23A8                      u251 22EE                      u171 2256  
                    u411 25D2                      u340 23C2                      u260 230A  
                    u180 226C                      u420 25EA                      u341 23BE  
                    u261 2306                      u181 2268                      u421 25E6  
                    u350 23D4                      u270 233C                      u190 2282  
                    u351 23D0                      u271 2338                      u191 227E  
                    u360 23E6                      u280 234E                      u361 23E2  
                    u281 234A                      u370 23FE                      u290 2360  
                    u371 23FA                      u291 235C                      u700 2466  
                    u380 25A0                      u701 2462                      u381 259C  
                    u710 2484                      u390 25B2                      u711 2480  
                    u391 25AE                      u720 24A0                      u800 26E0  
                    u721 249C                      u801 26DC                      u730 24C6  
                    u810 26FC                      u731 24C2                      u811 26F8  
                    u740 24EA                      u900 2090                      u820 2712  
                    u741 24E6                      u901 208C                      u821 270E  
                    u750 2504                      u910 20A6                      u830 2612  
                    u751 2500                      u911 20A2                      u831 260E  
                    u680 2426                      u760 251E                      u920 20BC  
                    u840 262A                      u681 2422                      u761 251A  
                    u921 20B8                      u841 2626                      u690 2440  
                    u770 253C                      u930 20D2                      u850 2642  
                    u691 243C                      u771 2538                      u931 20CE  
                    u851 263E                      u780 2552                      u940 20E8  
                    u860 265E                      u781 254E                      u941 20E4  
                    u861 265A                      u790 2576                      u950 20FE  
                    u870 2050                      u791 2572                      u951 20FA  
                    u871 204C                      u960 2114                      u880 2064  
                    u961 2110                      u881 2060                      u970 2128  
                    u890 207A                      u971 2124                      u891 2076  
                    u980 213C                      u981 2138                      u990 2152  
                    u991 214E             ___awmod@sign 0006                      wreg 3FE8  
                   l1001 23C2                     l1011 23EA                     l1003 23C6  
                   l1005 23D4                     l1013 23EC                     l1015 23FE  
                   l1007 23D8                     l1031 25B6                     l1023 2588  
                   l1201 248A                     l1017 2402                     l1009 23E6  
                   l1041 25F8                     l1033 25C4                     l1025 25A0  
                   l1203 24A0                     l1211 24B6                     l1019 2410  
                   l1035 25C8                     l1027 25A4                     l1213 24C6  
                   l1205 24A8                     l1221 24DC                     l1037 25D6  
                   l1029 25B2                     l1215 24CE                     l1207 24AA  
                   l1231 250C                     l1223 24EA                     l1311 2064  
                   l1303 2014                     l1039 25EA                     l1209 24B0  
                   l1241 2552                     l1233 251E                     l1225 24F2  
                   l1321 2094                     l1313 2068                     l1305 2040  
                   l1401 269A                     l1251 257E                     l1243 255A  
                   l1235 2526                     l1227 24F6                     l1219 24D8  
                   l1331 20D2                     l1323 20A6                     l1315 207A  
                   l1307 2050                     l1403 26A0                     l1181 242E  
                   l1245 2560                     l1237 252E                     l1229 2504  
                   l1341 2102                     l1333 20D6                     l1325 20AA  
                   l1317 207E                     l1309 2054                     l1261 26E8  
                   l1405 26A6                     l1191 2454                     l1183 2432  
                   l1175 2414                     l1239 253C                     l1247 2566  
                   l1351 2140                     l1343 2114                     l1335 20E8  
                   l1327 20BC                     l1319 2090                     l1271 2716  
                   l1263 26EC                     l1255 26CC                     l1407 26AC  
                   l1193 2466                     l1185 2440                     l1177 2418  
                   l1249 2576                     l1361 217E                     l1353 2152  
                   l1345 2128                     l1337 20EC                     l1329 20C0  
                   l1273 2718                     l1265 26EE                     l1257 26D0  
                   l1281 25FE                     l1409 26BC                     l1195 246E  
                   l1187 2448                     l1179 2426                     l1371 21AE  
                   l1363 2182                     l1355 2156                     l1347 212C  
                   l1339 20FE                     l1275 271C                     l1267 26FC  
                   l1259 26E0                     l1291 264C                     l1283 2602  
                   l1197 2476                     l1189 244C                     l1381 21EC  
                   l1373 21C0                     l1365 2194                     l1357 2168  
                   l1349 213C                     l1269 2712                     l1277 2722  
                   l1293 265E                     l1285 2612                     l1199 2484  
                   l1383 21F0                     l1375 21C4                     l1367 2198  
                   l1359 216C                     l1295 266A                     l1287 262A  
                   l1393 2220                     l1385 21F6                     l1377 21D6  
                   l1369 21AA                     l1289 2642                     l1387 21FA  
                   l1379 21DA                     l1299 2004                     l1389 2208  
                   l1397 266E                     l1399 2670                     u1000 2168  
                   u1001 2164                     u1010 217E                     u1011 217A  
                   u1020 2194                     u1021 2190                     u1030 21AA  
                   u1031 21A6                     u1040 21C0                     u1041 21BC  
                   u1050 21D6                     u1051 21D2                     u1107 2408  
                   u1060 21EC                     u1061 21E8                     u1070 2208  
                   u1071 2204                     u1087 25F0                     u1097 2310  
                   _main 266E                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 24D8  
        __end_of___lbdiv 2726          __end_of___awmod 2588          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTB 3FCB                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISD 3FC5  
      PORT_Output@answer 000A                    status 3FD8          ___lbdiv@divisor 0001  
        ___lbdiv@counter 0003             ?_scan_number 0001          __initialization 2726  
           __end_of_main 26CA                   ??_main 000F            __activetblptr 0000  
       ___awdiv@dividend 0001                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELD 3A70                ??___awdiv 0005                ??___lbdiv 0002  
              ??___awmod 0005         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005             __mediumconst 0000  
           ?_PORT_Output 0001         ___lbdiv@dividend 0002               __accesstop 0060  
__end_of__initialization 2726            ___rparam_used 0001         ??_scan_operation 0001  
         __pcstackCOMRAM 0001         scan_number@count 0003         scan_number@input 0005  
       ___lbdiv@quotient 0004              _X_Input_REG 0013              _Y_Input_REG 0012  
             __pnvCOMRAM 000F        __end_of_calculate 266E      PORT_Output@display1 000B  
    PORT_Output@display2 000C                  __Hparam 0000               calculate@x 0008  
             calculate@y 0005                  __Lparam 0000                  ___awdiv 2414  
                ___lbdiv 26CA                  ___awmod 24D8             __psmallconst 2000  
                __pcinit 2726                  __ramtop 2000                  __ptext0 266E  
                __ptext1 2588                  __ptext2 2228                  __ptext3 25FC  
                __ptext4 26CA                  __ptext5 2002                  __ptext6 24D8  
                __ptext7 2414         ___awmod@dividend 0001     end_of_initialization 2726  
              _PORTAbits 3FCA                _PORTBbits 3FCB            _Operation_REG 0011  
      scan_number@button 0002      start_initialization 2726        scan_number@output 0004  
            _calculation 0010    PORT_Output@second_dig 000E                _calculate 25FC  
          ??_scan_number 0001                 ?___awdiv 0001                 ?___lbdiv 0001  
               ?___awmod 0001              __smallconst 2000               ?_calculate 0005  
        calculate@output 0007      __end_of_scan_number 2414            ??_PORT_Output 0009  
   PORT_Output@first_dig 000D              calculate@op 0006                 __Hrparam 0000  
               __Lrparam 0000      __end_of_PORT_Output 2228              ??_calculate 0007  
            _scan_number 2228                 isa$xinst 0000           _scan_operation 2588  
     _Display_Result_REG 000F     scan_operation@op_key 0002   __end_of_scan_operation 25FC  
            _PORT_Output 2002  
