

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 08 09:34:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _TRISC	set	16324
    57   000000                     _TRISD	set	16325
    58   000000                     _TRISB	set	16323
    59                           
    60                           	psect	nvCOMRAM
    61   000013                     __pnvCOMRAM:
    62                           	callstack 0
    63   000013                     _Display_Result_REG:
    64                           	callstack 0
    65   000013                     	ds	1
    66   000014                     _calculation:
    67                           	callstack 0
    68   000014                     	ds	1
    69   000015                     _Operation_REG:
    70                           	callstack 0
    71   000015                     	ds	1
    72   000016                     _Y_Input_REG:
    73                           	callstack 0
    74   000016                     	ds	1
    75   000017                     _X_Input_REG:
    76                           	callstack 0
    77   000017                     	ds	1
    78   000000                     _PORTCbits	set	16332
    79   000000                     _PORTB	set	16331
    80   000000                     _ANSELA	set	14912
    81   000000                     _TRISA	set	16322
    82   000000                     _ANSELB	set	14928
    83   000000                     _ANSELC	set	14944
    84   000000                     _ANSELD	set	14960
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _PORTC	set	16332
    88   000000                     _PORTD	set	16333
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   0028A8                     __pcinit:
    94                           	callstack 0
    95   0028A8                     start_initialization:
    96                           	callstack 0
    97   0028A8                     __initialization:
    98                           	callstack 0
    99   0028A8                     end_of_initialization:
   100                           	callstack 0
   101   0028A8                     __end_of__initialization:
   102                           	callstack 0
   103   0028A8  0100               	movlb	0
   104   0028AA  EFD6  F013         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ??_scan_number:
   110   000001                     ??_scan_operation:
   111   000001                     ?___wmul:
   112                           	callstack 0
   113   000001                     ?___awdiv:
   114                           	callstack 0
   115   000001                     ?___awmod:
   116                           	callstack 0
   117   000001                     ___lbdiv@divisor:
   118                           	callstack 0
   119   000001                     ___wmul@multiplier:
   120                           	callstack 0
   121   000001                     ___awdiv@dividend:
   122                           	callstack 0
   123   000001                     ___awmod@dividend:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ___lbdiv@dividend:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132   000002                     	ds	1
   133   000003                     scan_number@button:
   134                           	callstack 0
   135   000003                     scan_operation@op_key:
   136                           	callstack 0
   137   000003                     ___lbdiv@counter:
   138                           	callstack 0
   139   000003                     ___wmul@multiplicand:
   140                           	callstack 0
   141   000003                     ___awdiv@divisor:
   142                           	callstack 0
   143   000003                     ___awmod@divisor:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x2
   147   000003                     	ds	1
   148   000004                     scan_number@count:
   149                           	callstack 0
   150   000004                     ___lbdiv@quotient:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154   000004                     	ds	1
   155   000005                     ?_calculate:
   156                           	callstack 0
   157   000005                     scan_number@output:
   158                           	callstack 0
   159   000005                     calculate@y:
   160                           	callstack 0
   161   000005                     ___awdiv@counter:
   162                           	callstack 0
   163   000005                     ___awmod@counter:
   164                           	callstack 0
   165   000005                     ___wmul@product:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x4
   169   000005                     	ds	1
   170   000006                     scan_number@LED_Count:
   171                           	callstack 0
   172   000006                     calculate@op:
   173                           	callstack 0
   174   000006                     ___awdiv@sign:
   175                           	callstack 0
   176   000006                     ___awmod@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180   000006                     	ds	1
   181   000007                     scan_number@input:
   182                           	callstack 0
   183   000007                     calculate@output:
   184                           	callstack 0
   185   000007                     ___awdiv@quotient:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x6
   189   000007                     	ds	1
   190   000008                     calculate@x:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x7
   194   000008                     	ds	1
   195   000009                     PORT_Output@answer:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x8
   199   000009                     	ds	2
   200   00000B                     ??_PORT_Output:
   201                           
   202                           ; 1 bytes @ 0xA
   203   00000B                     	ds	1
   204   00000C                     PORT_Output@enter:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xB
   208   00000C                     	ds	1
   209   00000D                     PORT_Output@i:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0xC
   213   00000D                     	ds	2
   214   00000F                     PORT_Output@display1:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0xE
   218   00000F                     	ds	1
   219   000010                     PORT_Output@display2:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0xF
   223   000010                     	ds	1
   224   000011                     PORT_Output@second_dig:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x10
   228   000011                     	ds	1
   229   000012                     PORT_Output@first_dig:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x11
   233   000012                     	ds	1
   234   000013                     
   235                           ; 1 bytes @ 0x12
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 32 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  LED_Count       1    0        unsigned char 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called: 2
   261 ;; This function calls:
   262 ;;		_PORT_Output
   263 ;;		_calculate
   264 ;;		_scan_number
   265 ;;		_scan_operation
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           	psect	text0
   272   0027AC                     __ptext0:
   273                           	callstack 0
   274   0027AC                     _main:
   275                           	callstack 29
   276   0027AC                     
   277                           ;main.c: 33:     TRISA = 0xFF;
   278   0027AC  68C2               	setf	194,c	;volatile
   279   0027AE                     
   280                           ;main.c: 34:     ANSELA = 0;
   281   0027AE  0E00               	movlw	0
   282   0027B0  013A               	movlb	58	; () banked
   283   0027B2  6F40               	movwf	64,b	;volatile
   284                           
   285                           ;main.c: 35:     TRISB = 0;
   286   0027B4  0E00               	movlw	0
   287   0027B6  6EC3               	movwf	195,c	;volatile
   288                           
   289                           ;main.c: 36:     ANSELB = 0;
   290   0027B8  0E00               	movlw	0
   291   0027BA  6F50               	movwf	80,b	;volatile
   292                           
   293                           ;main.c: 37:     ANSELD = 0;
   294   0027BC  0E00               	movlw	0
   295   0027BE  6F70               	movwf	112,b	;volatile
   296                           
   297                           ;main.c: 38:     TRISD = 0;
   298   0027C0  0E00               	movlw	0
   299   0027C2  6EC5               	movwf	197,c	;volatile
   300                           
   301                           ;main.c: 39:     TRISC = 0;
   302   0027C4  0E00               	movlw	0
   303   0027C6  6EC4               	movwf	196,c	;volatile
   304                           
   305                           ;main.c: 40:     ANSELC = 0;
   306   0027C8  0E00               	movlw	0
   307   0027CA  6F60               	movwf	96,b	;volatile
   308   0027CC                     
   309                           ; BSR set to: 58
   310                           ;main.c: 41:     PORTD = 0xFF;
   311   0027CC  68CD               	setf	205,c	;volatile
   312   0027CE                     
   313                           ; BSR set to: 58
   314                           ;main.c: 42:     PORTC = 0xFF;
   315   0027CE  68CC               	setf	204,c	;volatile
   316   0027D0                     l53:
   317                           
   318                           ;main.c: 45:     X_Input_REG = 0;
   319   0027D0  0E00               	movlw	0
   320   0027D2  6E17               	movwf	_X_Input_REG^0,c
   321                           
   322                           ;main.c: 46:     Y_Input_REG = 0;
   323   0027D4  0E00               	movlw	0
   324   0027D6  6E16               	movwf	_Y_Input_REG^0,c
   325                           
   326                           ;main.c: 47:     Operation_REG = 0;
   327   0027D8  0E00               	movlw	0
   328   0027DA  6E15               	movwf	_Operation_REG^0,c
   329                           
   330                           ;main.c: 48:     calculation = 0;
   331   0027DC  0E00               	movlw	0
   332   0027DE  6E14               	movwf	_calculation^0,c
   333                           
   334                           ;main.c: 51:     Display_Result_REG = 0;
   335   0027E0  0E00               	movlw	0
   336   0027E2  6E13               	movwf	_Display_Result_REG^0,c
   337   0027E4                     
   338                           ;main.c: 52:     X_Input_REG = scan_number(LED_Count);
   339   0027E4  0E01               	movlw	1
   340   0027E6  EC87  F011         	call	_scan_number
   341   0027EA  6E17               	movwf	_X_Input_REG^0,c
   342   0027EC                     
   343                           ;main.c: 53:     Operation_REG = scan_operation();
   344   0027EC  EC5A  F013         	call	_scan_operation	;wreg free
   345   0027F0  6E15               	movwf	_Operation_REG^0,c
   346   0027F2                     
   347                           ;main.c: 55:     Y_Input_REG = scan_number(LED_Count);
   348   0027F2  0E02               	movlw	2
   349   0027F4  EC87  F011         	call	_scan_number
   350   0027F8  6E16               	movwf	_Y_Input_REG^0,c
   351   0027FA                     
   352                           ;main.c: 56:     calculation = calculate(X_Input_REG, Y_Input_REG, Operation_REG);
   353   0027FA  C016  F005         	movff	_Y_Input_REG,calculate@y
   354   0027FE  C015  F006         	movff	_Operation_REG,calculate@op
   355   002802  5017               	movf	_X_Input_REG^0,w,c
   356   002804  EC99  F013         	call	_calculate
   357   002808  5005               	movf	?_calculate^0,w,c
   358   00280A  6E14               	movwf	_calculation^0,c
   359   00280C                     
   360                           ;main.c: 57:     PORT_Output(calculation);
   361   00280C  5014               	movf	_calculation^0,w,c
   362   00280E  6E09               	movwf	PORT_Output@answer^0,c
   363   002810  6A0A               	clrf	(PORT_Output@answer+1)^0,c
   364   002812  BE09               	btfsc	PORT_Output@answer^0,7,c
   365   002814  060A               	decf	(PORT_Output@answer+1)^0,f,c
   366   002816  EC01  F010         	call	_PORT_Output	;wreg free
   367   00281A  EFE8  F013         	goto	l53
   368   00281E  EFFE  F0FF         	goto	start
   369   002822                     __end_of_main:
   370                           	callstack 0
   371                           
   372 ;; *************** function _scan_operation *****************
   373 ;; Defined at:
   374 ;;		line 133 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  op_key          1    2[COMRAM] char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      char 
   381 ;; Registers used:
   382 ;;		wreg, status,2
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   392 ;;Total ram usage:        3 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402   0026B4                     __ptext1:
   403                           	callstack 0
   404   0026B4                     _scan_operation:
   405                           	callstack 30
   406   0026B4                     
   407                           ;main.c: 134:     signed char op_key = 0;
   408   0026B4  0E00               	movlw	0
   409   0026B6  6E03               	movwf	scan_operation@op_key^0,c
   410                           
   411                           ;main.c: 135:     while (op_key ==0) {
   412   0026B8  EF83  F013         	goto	l90
   413   0026BC                     l91:
   414                           
   415                           ;main.c: 137:      PORTBbits.RB3 = 1;
   416   0026BC  86CB               	bsf	203,3,c	;volatile
   417                           
   418                           ;main.c: 138:         if(PORTAbits.RA0 == 1) op_key = 1;
   419   0026BE  A0CA               	btfss	202,0,c	;volatile
   420   0026C0  EF64  F013         	goto	u401
   421   0026C4  EF66  F013         	goto	u400
   422   0026C8                     u401:
   423   0026C8  EF68  F013         	goto	l1072
   424   0026CC                     u400:
   425   0026CC  0E01               	movlw	1
   426   0026CE  6E03               	movwf	scan_operation@op_key^0,c
   427   0026D0                     l1072:
   428                           
   429                           ;main.c: 139:         if(PORTAbits.RA1 == 1) op_key = 2;
   430   0026D0  A2CA               	btfss	202,1,c	;volatile
   431   0026D2  EF6D  F013         	goto	u411
   432   0026D6  EF6F  F013         	goto	u410
   433   0026DA                     u411:
   434   0026DA  EF71  F013         	goto	l1076
   435   0026DE                     u410:
   436   0026DE  0E02               	movlw	2
   437   0026E0  6E03               	movwf	scan_operation@op_key^0,c
   438   0026E2                     l1076:
   439                           
   440                           ;main.c: 140:         if(PORTAbits.RA2 == 1) op_key = 3;
   441   0026E2  A4CA               	btfss	202,2,c	;volatile
   442   0026E4  EF76  F013         	goto	u421
   443   0026E8  EF78  F013         	goto	u420
   444   0026EC                     u421:
   445   0026EC  EF7A  F013         	goto	l1080
   446   0026F0                     u420:
   447   0026F0  0E03               	movlw	3
   448   0026F2  6E03               	movwf	scan_operation@op_key^0,c
   449   0026F4                     l1080:
   450                           
   451                           ;main.c: 141:         if(PORTAbits.RA3 == 1) op_key = 4;
   452   0026F4  A6CA               	btfss	202,3,c	;volatile
   453   0026F6  EF7F  F013         	goto	u431
   454   0026FA  EF81  F013         	goto	u430
   455   0026FE                     u431:
   456   0026FE  EF83  F013         	goto	l90
   457   002702                     u430:
   458   002702  0E04               	movlw	4
   459   002704  6E03               	movwf	scan_operation@op_key^0,c
   460   002706                     l90:
   461                           
   462                           ;main.c: 135:     while (op_key ==0) {
   463   002706  5003               	movf	scan_operation@op_key^0,w,c
   464   002708  B4D8               	btfsc	status,2,c
   465   00270A  EF89  F013         	goto	u441
   466   00270E  EF8B  F013         	goto	u440
   467   002712                     u441:
   468   002712  EF5E  F013         	goto	l91
   469   002716                     u440:
   470   002716                     
   471                           ;main.c: 143:         _delay((unsigned long)((200)*(8000000/4000.0)));
   472   002716  0E03               	movlw	3
   473   002718  6E02               	movwf	(??_scan_operation+1)^0,c
   474   00271A  0E08               	movlw	8
   475   00271C  6E01               	movwf	??_scan_operation^0,c
   476   00271E  0E77               	movlw	119
   477   002720                     u1187:
   478   002720  2EE8               	decfsz	wreg,f,c
   479   002722  D7FE               	bra	u1187
   480   002724  2E01               	decfsz	??_scan_operation^0,f,c
   481   002726  D7FC               	bra	u1187
   482   002728  2E02               	decfsz	(??_scan_operation+1)^0,f,c
   483   00272A  D7FA               	bra	u1187
   484   00272C  0000               	nop	
   485   00272E                     
   486                           ;main.c: 144:         return op_key;
   487   00272E  5003               	movf	scan_operation@op_key^0,w,c
   488   002730  0012               	return		;funcret
   489   002732                     __end_of_scan_operation:
   490                           	callstack 0
   491                           
   492 ;; *************** function _scan_number *****************
   493 ;; Defined at:
   494 ;;		line 62 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  LED_Count       1    wreg     unsigned char 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  LED_Count       1    5[COMRAM] unsigned char 
   499 ;;  input           1    6[COMRAM] char 
   500 ;;  output          1    4[COMRAM] char 
   501 ;;  count           1    3[COMRAM] char 
   502 ;;  button          1    2[COMRAM] char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      char 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, prodl, prodh
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   513 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   515 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   516 ;;Total ram usage:        7 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text2
   526   00230E                     __ptext2:
   527                           	callstack 0
   528   00230E                     _scan_number:
   529                           	callstack 30
   530                           
   531                           ;incstack = 0
   532                           ;scan_number@LED_Count stored from wreg
   533   00230E  6E06               	movwf	scan_number@LED_Count^0,c
   534   002310                     
   535                           ;main.c: 63:     signed char input = 10;
   536   002310  0E0A               	movlw	10
   537   002312  6E07               	movwf	scan_number@input^0,c
   538                           
   539                           ;main.c: 65:     signed char button = 0;
   540   002314  0E00               	movlw	0
   541   002316  6E03               	movwf	scan_number@button^0,c
   542                           
   543                           ;main.c: 66:     signed char count = 2;
   544   002318  0E02               	movlw	2
   545   00231A  6E04               	movwf	scan_number@count^0,c
   546                           
   547                           ;main.c: 68:     while (input == 10)
   548   00231C  EFF0  F011         	goto	l992
   549   002320                     l60:
   550                           
   551                           ;main.c: 69:     {;main.c: 70:         PORTBbits.RB0 = 1;
   552   002320  80CB               	bsf	203,0,c	;volatile
   553                           
   554                           ;main.c: 71:         if (PORTAbits.RA0 == 1)input = 1;
   555   002322  A0CA               	btfss	202,0,c	;volatile
   556   002324  EF96  F011         	goto	u161
   557   002328  EF98  F011         	goto	u160
   558   00232C                     u161:
   559   00232C  EF9A  F011         	goto	l946
   560   002330                     u160:
   561   002330  0E01               	movlw	1
   562   002332  6E07               	movwf	scan_number@input^0,c
   563   002334                     l946:
   564                           
   565                           ;main.c: 72:         if(PORTAbits.RA1 == 1) input = 4;
   566   002334  A2CA               	btfss	202,1,c	;volatile
   567   002336  EF9F  F011         	goto	u171
   568   00233A  EFA1  F011         	goto	u170
   569   00233E                     u171:
   570   00233E  EFA3  F011         	goto	l950
   571   002342                     u170:
   572   002342  0E04               	movlw	4
   573   002344  6E07               	movwf	scan_number@input^0,c
   574   002346                     l950:
   575                           
   576                           ;main.c: 73:         if(PORTAbits.RA2 == 1) input = 7;
   577   002346  A4CA               	btfss	202,2,c	;volatile
   578   002348  EFA8  F011         	goto	u181
   579   00234C  EFAA  F011         	goto	u180
   580   002350                     u181:
   581   002350  EFAC  F011         	goto	l954
   582   002354                     u180:
   583   002354  0E07               	movlw	7
   584   002356  6E07               	movwf	scan_number@input^0,c
   585   002358                     l954:
   586                           
   587                           ;main.c: 74:         PORTBbits.RB0 = 0;
   588   002358  90CB               	bcf	203,0,c	;volatile
   589   00235A                     
   590                           ;main.c: 76:          PORTBbits.RB1 = 1;
   591   00235A  82CB               	bsf	203,1,c	;volatile
   592   00235C                     
   593                           ;main.c: 77:         if (PORTAbits.RA0 == 1)input = 2;
   594   00235C  A0CA               	btfss	202,0,c	;volatile
   595   00235E  EFB3  F011         	goto	u191
   596   002362  EFB5  F011         	goto	u190
   597   002366                     u191:
   598   002366  EFB7  F011         	goto	l962
   599   00236A                     u190:
   600   00236A  0E02               	movlw	2
   601   00236C  6E07               	movwf	scan_number@input^0,c
   602   00236E                     l962:
   603                           
   604                           ;main.c: 78:         if(PORTAbits.RA1 == 1) input = 5;
   605   00236E  A2CA               	btfss	202,1,c	;volatile
   606   002370  EFBC  F011         	goto	u201
   607   002374  EFBE  F011         	goto	u200
   608   002378                     u201:
   609   002378  EFC0  F011         	goto	l966
   610   00237C                     u200:
   611   00237C  0E05               	movlw	5
   612   00237E  6E07               	movwf	scan_number@input^0,c
   613   002380                     l966:
   614                           
   615                           ;main.c: 79:         if(PORTAbits.RA2 == 1) input = 8;
   616   002380  A4CA               	btfss	202,2,c	;volatile
   617   002382  EFC5  F011         	goto	u211
   618   002386  EFC7  F011         	goto	u210
   619   00238A                     u211:
   620   00238A  EFC9  F011         	goto	l970
   621   00238E                     u210:
   622   00238E  0E08               	movlw	8
   623   002390  6E07               	movwf	scan_number@input^0,c
   624   002392                     l970:
   625                           
   626                           ;main.c: 80:         if(PORTAbits.RA3 == 1) input = 0;
   627   002392  A6CA               	btfss	202,3,c	;volatile
   628   002394  EFCE  F011         	goto	u221
   629   002398  EFD0  F011         	goto	u220
   630   00239C                     u221:
   631   00239C  EFD2  F011         	goto	l974
   632   0023A0                     u220:
   633   0023A0  0E00               	movlw	0
   634   0023A2  6E07               	movwf	scan_number@input^0,c
   635   0023A4                     l974:
   636                           
   637                           ;main.c: 81:         PORTBbits.RB1 = 0;
   638   0023A4  92CB               	bcf	203,1,c	;volatile
   639   0023A6                     
   640                           ;main.c: 83:          PORTBbits.RB2 = 1;
   641   0023A6  84CB               	bsf	203,2,c	;volatile
   642   0023A8                     
   643                           ;main.c: 84:         if (PORTAbits.RA0 == 1)input = 3;
   644   0023A8  A0CA               	btfss	202,0,c	;volatile
   645   0023AA  EFD9  F011         	goto	u231
   646   0023AE  EFDB  F011         	goto	u230
   647   0023B2                     u231:
   648   0023B2  EFDD  F011         	goto	l982
   649   0023B6                     u230:
   650   0023B6  0E03               	movlw	3
   651   0023B8  6E07               	movwf	scan_number@input^0,c
   652   0023BA                     l982:
   653                           
   654                           ;main.c: 85:         if(PORTAbits.RA1 == 1) input = 6;
   655   0023BA  A2CA               	btfss	202,1,c	;volatile
   656   0023BC  EFE2  F011         	goto	u241
   657   0023C0  EFE4  F011         	goto	u240
   658   0023C4                     u241:
   659   0023C4  EFE6  F011         	goto	l986
   660   0023C8                     u240:
   661   0023C8  0E06               	movlw	6
   662   0023CA  6E07               	movwf	scan_number@input^0,c
   663   0023CC                     l986:
   664                           
   665                           ;main.c: 86:         if(PORTAbits.RA2 == 1) input = 9;
   666   0023CC  A4CA               	btfss	202,2,c	;volatile
   667   0023CE  EFEB  F011         	goto	u251
   668   0023D2  EFED  F011         	goto	u250
   669   0023D6                     u251:
   670   0023D6  EFEF  F011         	goto	l990
   671   0023DA                     u250:
   672   0023DA  0E09               	movlw	9
   673   0023DC  6E07               	movwf	scan_number@input^0,c
   674   0023DE                     l990:
   675                           
   676                           ;main.c: 87:         PORTBbits.RB2 = 0;
   677   0023DE  94CB               	bcf	203,2,c	;volatile
   678   0023E0                     l992:
   679                           
   680                           ;main.c: 68:     while (input == 10)
   681   0023E0  0E0A               	movlw	10
   682   0023E2  1807               	xorwf	scan_number@input^0,w,c
   683   0023E4  B4D8               	btfsc	status,2,c
   684   0023E6  EFF7  F011         	goto	u261
   685   0023EA  EFF9  F011         	goto	u260
   686   0023EE                     u261:
   687   0023EE  EF90  F011         	goto	l60
   688   0023F2                     u260:
   689   0023F2                     
   690                           ;main.c: 90:     _delay((unsigned long)((200)*(8000000/4000.0)));
   691   0023F2  0E03               	movlw	3
   692   0023F4  6E02               	movwf	(??_scan_number+1)^0,c
   693   0023F6  0E08               	movlw	8
   694   0023F8  6E01               	movwf	??_scan_number^0,c
   695   0023FA  0E77               	movlw	119
   696   0023FC                     u1197:
   697   0023FC  2EE8               	decfsz	wreg,f,c
   698   0023FE  D7FE               	bra	u1197
   699   002400  2E01               	decfsz	??_scan_number^0,f,c
   700   002402  D7FC               	bra	u1197
   701   002404  2E02               	decfsz	(??_scan_number+1)^0,f,c
   702   002406  D7FA               	bra	u1197
   703   002408  0000               	nop	
   704   00240A                     
   705                           ;main.c: 92:     input *=10;
   706   00240A  0E0A               	movlw	10
   707   00240C  0207               	mulwf	scan_number@input^0,c
   708   00240E  50F3               	movf	prodl,w,c
   709   002410  6E07               	movwf	scan_number@input^0,c
   710   002412                     
   711                           ;main.c: 93:     output = input;
   712   002412  C007  F005         	movff	scan_number@input,scan_number@output
   713   002416                     
   714                           ;main.c: 95:     input = 10;
   715   002416  0E0A               	movlw	10
   716   002418  6E07               	movwf	scan_number@input^0,c
   717                           
   718                           ;main.c: 96:     while (input == 10)
   719   00241A  EF71  F012         	goto	l1050
   720   00241E                     l73:
   721                           
   722                           ;main.c: 97:     {;main.c: 98:         PORTBbits.RB0 = 1;
   723   00241E  80CB               	bsf	203,0,c	;volatile
   724                           
   725                           ;main.c: 99:         if (PORTAbits.RA0 == 1)input = 1;
   726   002420  A0CA               	btfss	202,0,c	;volatile
   727   002422  EF15  F012         	goto	u271
   728   002426  EF17  F012         	goto	u270
   729   00242A                     u271:
   730   00242A  EF19  F012         	goto	l1004
   731   00242E                     u270:
   732   00242E  0E01               	movlw	1
   733   002430  6E07               	movwf	scan_number@input^0,c
   734   002432                     l1004:
   735                           
   736                           ;main.c: 100:         if(PORTAbits.RA1 == 1) input = 4;
   737   002432  A2CA               	btfss	202,1,c	;volatile
   738   002434  EF1E  F012         	goto	u281
   739   002438  EF20  F012         	goto	u280
   740   00243C                     u281:
   741   00243C  EF22  F012         	goto	l1008
   742   002440                     u280:
   743   002440  0E04               	movlw	4
   744   002442  6E07               	movwf	scan_number@input^0,c
   745   002444                     l1008:
   746                           
   747                           ;main.c: 101:         if(PORTAbits.RA2 == 1) input = 7;
   748   002444  A4CA               	btfss	202,2,c	;volatile
   749   002446  EF27  F012         	goto	u291
   750   00244A  EF29  F012         	goto	u290
   751   00244E                     u291:
   752   00244E  EF2B  F012         	goto	l1012
   753   002452                     u290:
   754   002452  0E07               	movlw	7
   755   002454  6E07               	movwf	scan_number@input^0,c
   756   002456                     l1012:
   757                           
   758                           ;main.c: 102:         PORTBbits.RB0 = 0;
   759   002456  90CB               	bcf	203,0,c	;volatile
   760   002458                     
   761                           ;main.c: 104:          PORTBbits.RB1 = 1;
   762   002458  82CB               	bsf	203,1,c	;volatile
   763   00245A                     
   764                           ;main.c: 105:         if(PORTAbits.RA0 == 1) input = 2;
   765   00245A  A0CA               	btfss	202,0,c	;volatile
   766   00245C  EF32  F012         	goto	u301
   767   002460  EF34  F012         	goto	u300
   768   002464                     u301:
   769   002464  EF36  F012         	goto	l1020
   770   002468                     u300:
   771   002468  0E02               	movlw	2
   772   00246A  6E07               	movwf	scan_number@input^0,c
   773   00246C                     l1020:
   774                           
   775                           ;main.c: 106:         if(PORTAbits.RA1 == 1) input = 5;
   776   00246C  A2CA               	btfss	202,1,c	;volatile
   777   00246E  EF3B  F012         	goto	u311
   778   002472  EF3D  F012         	goto	u310
   779   002476                     u311:
   780   002476  EF3F  F012         	goto	l1024
   781   00247A                     u310:
   782   00247A  0E05               	movlw	5
   783   00247C  6E07               	movwf	scan_number@input^0,c
   784   00247E                     l1024:
   785                           
   786                           ;main.c: 107:         if(PORTAbits.RA2 == 1) input = 8;
   787   00247E  A4CA               	btfss	202,2,c	;volatile
   788   002480  EF44  F012         	goto	u321
   789   002484  EF46  F012         	goto	u320
   790   002488                     u321:
   791   002488  EF48  F012         	goto	l1028
   792   00248C                     u320:
   793   00248C  0E08               	movlw	8
   794   00248E  6E07               	movwf	scan_number@input^0,c
   795   002490                     l1028:
   796                           
   797                           ;main.c: 108:         if(PORTAbits.RA3 == 1) input = 0;
   798   002490  A6CA               	btfss	202,3,c	;volatile
   799   002492  EF4D  F012         	goto	u331
   800   002496  EF4F  F012         	goto	u330
   801   00249A                     u331:
   802   00249A  EF51  F012         	goto	l1032
   803   00249E                     u330:
   804   00249E  0E00               	movlw	0
   805   0024A0  6E07               	movwf	scan_number@input^0,c
   806   0024A2                     l1032:
   807                           
   808                           ;main.c: 109:         PORTBbits.RB1 = 0;
   809   0024A2  92CB               	bcf	203,1,c	;volatile
   810   0024A4                     
   811                           ;main.c: 111:          PORTBbits.RB2 = 1;
   812   0024A4  84CB               	bsf	203,2,c	;volatile
   813   0024A6                     
   814                           ;main.c: 112:         if (PORTAbits.RA0 == 1)input = 3;
   815   0024A6  A0CA               	btfss	202,0,c	;volatile
   816   0024A8  EF58  F012         	goto	u341
   817   0024AC  EF5A  F012         	goto	u340
   818   0024B0                     u341:
   819   0024B0  EF5C  F012         	goto	l1040
   820   0024B4                     u340:
   821   0024B4  0E03               	movlw	3
   822   0024B6  6E07               	movwf	scan_number@input^0,c
   823   0024B8                     l1040:
   824                           
   825                           ;main.c: 113:         if(PORTAbits.RA1 == 1) input = 6;
   826   0024B8  A2CA               	btfss	202,1,c	;volatile
   827   0024BA  EF61  F012         	goto	u351
   828   0024BE  EF63  F012         	goto	u350
   829   0024C2                     u351:
   830   0024C2  EF65  F012         	goto	l1044
   831   0024C6                     u350:
   832   0024C6  0E06               	movlw	6
   833   0024C8  6E07               	movwf	scan_number@input^0,c
   834   0024CA                     l1044:
   835                           
   836                           ;main.c: 114:         if(PORTAbits.RA2 == 1) input = 9;
   837   0024CA  A4CA               	btfss	202,2,c	;volatile
   838   0024CC  EF6A  F012         	goto	u361
   839   0024D0  EF6C  F012         	goto	u360
   840   0024D4                     u361:
   841   0024D4  EF6E  F012         	goto	l1048
   842   0024D8                     u360:
   843   0024D8  0E09               	movlw	9
   844   0024DA  6E07               	movwf	scan_number@input^0,c
   845   0024DC                     l1048:
   846                           
   847                           ;main.c: 115:         PORTBbits.RB2 = 0;
   848   0024DC  94CB               	bcf	203,2,c	;volatile
   849                           
   850                           ;main.c: 117:         PORTB = 0;
   851   0024DE  0E00               	movlw	0
   852   0024E0  6ECB               	movwf	203,c	;volatile
   853   0024E2                     l1050:
   854                           
   855                           ;main.c: 96:     while (input == 10)
   856   0024E2  0E0A               	movlw	10
   857   0024E4  1807               	xorwf	scan_number@input^0,w,c
   858   0024E6  B4D8               	btfsc	status,2,c
   859   0024E8  EF78  F012         	goto	u371
   860   0024EC  EF7A  F012         	goto	u370
   861   0024F0                     u371:
   862   0024F0  EF0F  F012         	goto	l73
   863   0024F4                     u370:
   864   0024F4                     
   865                           ;main.c: 119:     output += input;
   866   0024F4  5007               	movf	scan_number@input^0,w,c
   867   0024F6  2605               	addwf	scan_number@output^0,f,c
   868   0024F8                     
   869                           ;main.c: 120:     _delay((unsigned long)((200)*(8000000/4000.0)));
   870   0024F8  0E03               	movlw	3
   871   0024FA  6E02               	movwf	(??_scan_number+1)^0,c
   872   0024FC  0E08               	movlw	8
   873   0024FE  6E01               	movwf	??_scan_number^0,c
   874   002500  0E77               	movlw	119
   875   002502                     u1207:
   876   002502  2EE8               	decfsz	wreg,f,c
   877   002504  D7FE               	bra	u1207
   878   002506  2E01               	decfsz	??_scan_number^0,f,c
   879   002508  D7FC               	bra	u1207
   880   00250A  2E02               	decfsz	(??_scan_number+1)^0,f,c
   881   00250C  D7FA               	bra	u1207
   882   00250E  0000               	nop	
   883   002510                     
   884                           ;main.c: 121:     if(LED_Count == 1 ){
   885   002510  0406               	decf	scan_number@LED_Count^0,w,c
   886   002512  A4D8               	btfss	status,2,c
   887   002514  EF8E  F012         	goto	u381
   888   002518  EF90  F012         	goto	u380
   889   00251C                     u381:
   890   00251C  EF92  F012         	goto	l1060
   891   002520                     u380:
   892   002520                     
   893                           ;main.c: 122:             PORTBbits.RB5 = 1;
   894   002520  8ACB               	bsf	203,5,c	;volatile
   895                           
   896                           ;main.c: 123:             PORTCbits.RC7 = 0;
   897   002522  9ECC               	bcf	204,7,c	;volatile
   898   002524                     l1060:
   899                           
   900                           ;main.c: 125:     if(LED_Count == 2){
   901   002524  0E02               	movlw	2
   902   002526  1806               	xorwf	scan_number@LED_Count^0,w,c
   903   002528  A4D8               	btfss	status,2,c
   904   00252A  EF99  F012         	goto	u391
   905   00252E  EF9B  F012         	goto	u390
   906   002532                     u391:
   907   002532  EF9E  F012         	goto	l1064
   908   002536                     u390:
   909   002536                     
   910                           ;main.c: 126:             PORTCbits.RC7 = 1;
   911   002536  8ECC               	bsf	204,7,c	;volatile
   912                           
   913                           ;main.c: 127:             PORTBbits.RB6 = 1;
   914   002538  8CCB               	bsf	203,6,c	;volatile
   915                           
   916                           ;main.c: 128:             PORTCbits.RC6 = 0;
   917   00253A  9CCC               	bcf	204,6,c	;volatile
   918   00253C                     l1064:
   919                           
   920                           ;main.c: 130:     return output;
   921   00253C  5005               	movf	scan_number@output^0,w,c
   922   00253E  0012               	return		;funcret
   923   002540                     __end_of_scan_number:
   924                           	callstack 0
   925                           
   926 ;; *************** function _calculate *****************
   927 ;; Defined at:
   928 ;;		line 147 in file "main.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  x               1    wreg     unsigned char 
   931 ;;  y               1    4[COMRAM] unsigned char 
   932 ;;  op              1    5[COMRAM] unsigned char 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  x               1    7[COMRAM] unsigned char 
   935 ;;  output          1    6[COMRAM] char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2    4[COMRAM] int 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   949 ;;Total ram usage:        4 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 1
   952 ;; This function calls:
   953 ;;		___lbdiv
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text3
   960   002732                     __ptext3:
   961                           	callstack 0
   962   002732                     _calculate:
   963                           	callstack 29
   964                           
   965                           ;incstack = 0
   966                           ;calculate@x stored from wreg
   967   002732  6E08               	movwf	calculate@x^0,c
   968   002734                     
   969                           ;main.c: 148:     signed char output = 0;
   970   002734  0E00               	movlw	0
   971   002736  6E07               	movwf	calculate@output^0,c
   972   002738                     
   973                           ;main.c: 149:     if(op == 1)
   974   002738  0406               	decf	calculate@op^0,w,c
   975   00273A  A4D8               	btfss	status,2,c
   976   00273C  EFA2  F013         	goto	u891
   977   002740  EFA4  F013         	goto	u890
   978   002744                     u891:
   979   002744  EFA7  F013         	goto	l100
   980   002748                     u890:
   981   002748                     
   982                           ;main.c: 150:         output = x + y;
   983   002748  5008               	movf	calculate@x^0,w,c
   984   00274A  2405               	addwf	calculate@y^0,w,c
   985   00274C  6E07               	movwf	calculate@output^0,c
   986   00274E                     l100:
   987                           
   988                           ;main.c: 151:     if(op == 2)
   989   00274E  0E02               	movlw	2
   990   002750  1806               	xorwf	calculate@op^0,w,c
   991   002752  A4D8               	btfss	status,2,c
   992   002754  EFAE  F013         	goto	u901
   993   002758  EFB0  F013         	goto	u900
   994   00275C                     u901:
   995   00275C  EFB3  F013         	goto	l101
   996   002760                     u900:
   997   002760                     
   998                           ;main.c: 152:         output = x-y;
   999   002760  5005               	movf	calculate@y^0,w,c
  1000   002762  5C08               	subwf	calculate@x^0,w,c
  1001   002764  6E07               	movwf	calculate@output^0,c
  1002   002766                     l101:
  1003                           
  1004                           ;main.c: 153:     if(op == 3)
  1005   002766  0E03               	movlw	3
  1006   002768  1806               	xorwf	calculate@op^0,w,c
  1007   00276A  A4D8               	btfss	status,2,c
  1008   00276C  EFBA  F013         	goto	u911
  1009   002770  EFBC  F013         	goto	u910
  1010   002774                     u911:
  1011   002774  EFC1  F013         	goto	l1366
  1012   002778                     u910:
  1013   002778                     
  1014                           ;main.c: 154:         output = x*y;
  1015   002778  5008               	movf	calculate@x^0,w,c
  1016   00277A  0205               	mulwf	calculate@y^0,c
  1017   00277C  006F FFCC  F007    	movff	prodl,calculate@output
  1018   002782                     l1366:
  1019                           
  1020                           ;main.c: 155:     if(op == 4)
  1021   002782  0E04               	movlw	4
  1022   002784  1806               	xorwf	calculate@op^0,w,c
  1023   002786  A4D8               	btfss	status,2,c
  1024   002788  EFC8  F013         	goto	u921
  1025   00278C  EFCA  F013         	goto	u920
  1026   002790                     u921:
  1027   002790  EFD0  F013         	goto	l1370
  1028   002794                     u920:
  1029   002794                     
  1030                           ;main.c: 156:         output = x/y;
  1031   002794  C005  F001         	movff	calculate@y,___lbdiv@divisor
  1032   002798  5008               	movf	calculate@x^0,w,c
  1033   00279A  EC11  F014         	call	___lbdiv
  1034   00279E  6E07               	movwf	calculate@output^0,c
  1035   0027A0                     l1370:
  1036                           
  1037                           ;main.c: 157:     return output;
  1038   0027A0  5007               	movf	calculate@output^0,w,c
  1039   0027A2  6E05               	movwf	?_calculate^0,c
  1040   0027A4  6A06               	clrf	(?_calculate+1)^0,c
  1041   0027A6  BE05               	btfsc	?_calculate^0,7,c
  1042   0027A8  0606               	decf	(?_calculate+1)^0,f,c
  1043   0027AA  0012               	return		;funcret
  1044   0027AC                     __end_of_calculate:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function ___lbdiv *****************
  1048 ;; Defined at:
  1049 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lbdiv.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  dividend        1    wreg     unsigned char 
  1052 ;;  divisor         1    0[COMRAM] unsigned char 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  dividend        1    1[COMRAM] unsigned char 
  1055 ;;  quotient        1    3[COMRAM] unsigned char 
  1056 ;;  counter         1    2[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      unsigned char 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1070 ;;Total ram usage:        4 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_calculate
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text4
  1080   002822                     __ptext4:
  1081                           	callstack 0
  1082   002822                     ___lbdiv:
  1083                           	callstack 29
  1084                           
  1085                           ;incstack = 0
  1086                           ;___lbdiv@dividend stored from wreg
  1087   002822  6E02               	movwf	___lbdiv@dividend^0,c
  1088   002824  0E00               	movlw	0
  1089   002826  6E04               	movwf	___lbdiv@quotient^0,c
  1090   002828  5001               	movf	___lbdiv@divisor^0,w,c
  1091   00282A  B4D8               	btfsc	status,2,c
  1092   00282C  EF1A  F014         	goto	u861
  1093   002830  EF1C  F014         	goto	u860
  1094   002834                     u861:
  1095   002834  EF3D  F014         	goto	l1352
  1096   002838                     u860:
  1097   002838  0E01               	movlw	1
  1098   00283A  6E03               	movwf	___lbdiv@counter^0,c
  1099   00283C  EF23  F014         	goto	l1340
  1100   002840                     l1336:
  1101   002840  90D8               	bcf	status,0,c
  1102   002842  3601               	rlcf	___lbdiv@divisor^0,f,c
  1103   002844  2A03               	incf	___lbdiv@counter^0,f,c
  1104   002846                     l1340:
  1105   002846  AE01               	btfss	___lbdiv@divisor^0,7,c
  1106   002848  EF28  F014         	goto	u871
  1107   00284C  EF2A  F014         	goto	u870
  1108   002850                     u871:
  1109   002850  EF20  F014         	goto	l1336
  1110   002854                     u870:
  1111   002854                     l1342:
  1112   002854  90D8               	bcf	status,0,c
  1113   002856  3604               	rlcf	___lbdiv@quotient^0,f,c
  1114   002858  5001               	movf	___lbdiv@divisor^0,w,c
  1115   00285A  5C02               	subwf	___lbdiv@dividend^0,w,c
  1116   00285C  A0D8               	btfss	status,0,c
  1117   00285E  EF33  F014         	goto	u881
  1118   002862  EF35  F014         	goto	u880
  1119   002866                     u881:
  1120   002866  EF38  F014         	goto	l1348
  1121   00286A                     u880:
  1122   00286A  5001               	movf	___lbdiv@divisor^0,w,c
  1123   00286C  5E02               	subwf	___lbdiv@dividend^0,f,c
  1124   00286E  8004               	bsf	___lbdiv@quotient^0,0,c
  1125   002870                     l1348:
  1126   002870  90D8               	bcf	status,0,c
  1127   002872  3201               	rrcf	___lbdiv@divisor^0,f,c
  1128   002874  2E03               	decfsz	___lbdiv@counter^0,f,c
  1129   002876  EF2A  F014         	goto	l1342
  1130   00287A                     l1352:
  1131   00287A  5004               	movf	___lbdiv@quotient^0,w,c
  1132   00287C  0012               	return		;funcret
  1133   00287E                     __end_of___lbdiv:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _PORT_Output *****************
  1137 ;; Defined at:
  1138 ;;		line 160 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  answer          2    8[COMRAM] int 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  i               2   12[COMRAM] int 
  1143 ;;  first_dig       1   17[COMRAM] char 
  1144 ;;  second_dig      1   16[COMRAM] char 
  1145 ;;  display2        1   15[COMRAM] unsigned char 
  1146 ;;  display1        1   14[COMRAM] unsigned char 
  1147 ;;  enter           1   11[COMRAM] char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1158 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1160 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1161 ;;Total ram usage:       10 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 1
  1164 ;; This function calls:
  1165 ;;		___awdiv
  1166 ;;		___awmod
  1167 ;;		___wmul
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text5
  1174   002002                     __ptext5:
  1175                           	callstack 0
  1176   002002                     _PORT_Output:
  1177                           	callstack 29
  1178   002002                     
  1179                           ;main.c: 162:     signed char second_dig = 0;
  1180   002002  0E00               	movlw	0
  1181   002004  6E11               	movwf	PORT_Output@second_dig^0,c
  1182                           
  1183                           ;main.c: 163:     signed char enter = 0;
  1184   002006  0E00               	movlw	0
  1185   002008  6E0C               	movwf	PORT_Output@enter^0,c
  1186                           
  1187                           ;main.c: 164:     int i = 0;
  1188   00200A  0E00               	movlw	0
  1189   00200C  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1190   00200E  0E00               	movlw	0
  1191   002010  6E0D               	movwf	PORT_Output@i^0,c
  1192                           
  1193                           ;main.c: 165:     char display1 = 0;
  1194   002012  0E00               	movlw	0
  1195   002014  6E0F               	movwf	PORT_Output@display1^0,c
  1196                           
  1197                           ;main.c: 166:     char display2 = 0;
  1198   002016  0E00               	movlw	0
  1199   002018  6E10               	movwf	PORT_Output@display2^0,c
  1200   00201A                     
  1201                           ;main.c: 168:     if(answer<0){
  1202   00201A  BE0A               	btfsc	(PORT_Output@answer+1)^0,7,c
  1203   00201C  EF14  F010         	goto	u930
  1204   002020  EF12  F010         	goto	u931
  1205   002024                     u931:
  1206   002024  EF22  F010         	goto	l1382
  1207   002028                     u930:
  1208   002028                     
  1209                           ;main.c: 169:         answer*= -1;
  1210   002028  C009  F001         	movff	PORT_Output@answer,___wmul@multiplier
  1211   00202C  C00A  F002         	movff	PORT_Output@answer+1,___wmul@multiplier+1
  1212   002030  0EFF               	movlw	255
  1213   002032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1214   002034  6803               	setf	___wmul@multiplicand^0,c
  1215   002036  EC3F  F014         	call	___wmul	;wreg free
  1216   00203A  C001  F009         	movff	?___wmul,PORT_Output@answer
  1217   00203E  C002  F00A         	movff	?___wmul+1,PORT_Output@answer+1
  1218   002042                     
  1219                           ;main.c: 170:         PORTCbits.RC7 = 0;
  1220   002042  9ECC               	bcf	204,7,c	;volatile
  1221   002044                     l1382:
  1222                           
  1223                           ;main.c: 172:     first_dig = answer/10;
  1224   002044  C009  F001         	movff	PORT_Output@answer,___awdiv@dividend
  1225   002048  C00A  F002         	movff	PORT_Output@answer+1,___awdiv@dividend+1
  1226   00204C  0E00               	movlw	0
  1227   00204E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1228   002050  0E0A               	movlw	10
  1229   002052  6E03               	movwf	___awdiv@divisor^0,c
  1230   002054  ECA0  F012         	call	___awdiv	;wreg free
  1231   002058  5001               	movf	?___awdiv^0,w,c
  1232   00205A  6E12               	movwf	PORT_Output@first_dig^0,c
  1233   00205C                     
  1234                           ;main.c: 173:     second_dig = answer % 10;
  1235   00205C  C009  F001         	movff	PORT_Output@answer,___awmod@dividend
  1236   002060  C00A  F002         	movff	PORT_Output@answer+1,___awmod@dividend+1
  1237   002064  0E00               	movlw	0
  1238   002066  6E04               	movwf	(___awmod@divisor+1)^0,c
  1239   002068  0E0A               	movlw	10
  1240   00206A  6E03               	movwf	___awmod@divisor^0,c
  1241   00206C  EC02  F013         	call	___awmod	;wreg free
  1242   002070  5001               	movf	?___awmod^0,w,c
  1243   002072  6E11               	movwf	PORT_Output@second_dig^0,c
  1244   002074                     
  1245                           ;main.c: 175:     if(first_dig == 0) display1 = 0xC0;
  1246   002074  5012               	movf	PORT_Output@first_dig^0,w,c
  1247   002076  A4D8               	btfss	status,2,c
  1248   002078  EF40  F010         	goto	u941
  1249   00207C  EF42  F010         	goto	u940
  1250   002080                     u941:
  1251   002080  EF46  F010         	goto	l1390
  1252   002084                     u940:
  1253   002084  0EC0               	movlw	192
  1254   002086  6E0F               	movwf	PORT_Output@display1^0,c
  1255   002088  EFC2  F010         	goto	l109
  1256   00208C                     l1390:
  1257   00208C  0412               	decf	PORT_Output@first_dig^0,w,c
  1258   00208E  B4D8               	btfsc	status,2,c
  1259   002090  EF4C  F010         	goto	u951
  1260   002094  EF4E  F010         	goto	u950
  1261   002098                     u951:
  1262   002098  EF56  F010         	goto	l1394
  1263   00209C                     u950:
  1264   00209C  2812               	incf	PORT_Output@first_dig^0,w,c
  1265   00209E  A4D8               	btfss	status,2,c
  1266   0020A0  EF54  F010         	goto	u961
  1267   0020A4  EF56  F010         	goto	u960
  1268   0020A8                     u961:
  1269   0020A8  EF5A  F010         	goto	l1396
  1270   0020AC                     u960:
  1271   0020AC                     l1394:
  1272   0020AC  0EF9               	movlw	249
  1273   0020AE  6E0F               	movwf	PORT_Output@display1^0,c
  1274   0020B0  EFC2  F010         	goto	l109
  1275   0020B4                     l1396:
  1276   0020B4  0E02               	movlw	2
  1277   0020B6  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1278   0020B8  A4D8               	btfss	status,2,c
  1279   0020BA  EF61  F010         	goto	u971
  1280   0020BE  EF63  F010         	goto	u970
  1281   0020C2                     u971:
  1282   0020C2  EF67  F010         	goto	l1400
  1283   0020C6                     u970:
  1284   0020C6  0EA4               	movlw	164
  1285   0020C8  6E0F               	movwf	PORT_Output@display1^0,c
  1286   0020CA  EFC2  F010         	goto	l109
  1287   0020CE                     l1400:
  1288   0020CE  0E03               	movlw	3
  1289   0020D0  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1290   0020D2  A4D8               	btfss	status,2,c
  1291   0020D4  EF6E  F010         	goto	u981
  1292   0020D8  EF70  F010         	goto	u980
  1293   0020DC                     u981:
  1294   0020DC  EF74  F010         	goto	l1404
  1295   0020E0                     u980:
  1296   0020E0  0EB0               	movlw	176
  1297   0020E2  6E0F               	movwf	PORT_Output@display1^0,c
  1298   0020E4  EFC2  F010         	goto	l109
  1299   0020E8                     l1404:
  1300   0020E8  0E04               	movlw	4
  1301   0020EA  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1302   0020EC  A4D8               	btfss	status,2,c
  1303   0020EE  EF7B  F010         	goto	u991
  1304   0020F2  EF7D  F010         	goto	u990
  1305   0020F6                     u991:
  1306   0020F6  EF81  F010         	goto	l1408
  1307   0020FA                     u990:
  1308   0020FA  0E99               	movlw	153
  1309   0020FC  6E0F               	movwf	PORT_Output@display1^0,c
  1310   0020FE  EFC2  F010         	goto	l109
  1311   002102                     l1408:
  1312   002102  0E05               	movlw	5
  1313   002104  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1314   002106  A4D8               	btfss	status,2,c
  1315   002108  EF88  F010         	goto	u1001
  1316   00210C  EF8A  F010         	goto	u1000
  1317   002110                     u1001:
  1318   002110  EF8E  F010         	goto	l1412
  1319   002114                     u1000:
  1320   002114  0E92               	movlw	146
  1321   002116  6E0F               	movwf	PORT_Output@display1^0,c
  1322   002118  EFC2  F010         	goto	l109
  1323   00211C                     l1412:
  1324   00211C  0E06               	movlw	6
  1325   00211E  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1326   002120  A4D8               	btfss	status,2,c
  1327   002122  EF95  F010         	goto	u1011
  1328   002126  EF97  F010         	goto	u1010
  1329   00212A                     u1011:
  1330   00212A  EF9B  F010         	goto	l1416
  1331   00212E                     u1010:
  1332   00212E  0E82               	movlw	130
  1333   002130  6E0F               	movwf	PORT_Output@display1^0,c
  1334   002132  EFC2  F010         	goto	l109
  1335   002136                     l1416:
  1336   002136  0E07               	movlw	7
  1337   002138  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1338   00213A  A4D8               	btfss	status,2,c
  1339   00213C  EFA2  F010         	goto	u1021
  1340   002140  EFA4  F010         	goto	u1020
  1341   002144                     u1021:
  1342   002144  EFA8  F010         	goto	l1420
  1343   002148                     u1020:
  1344   002148  0EF8               	movlw	248
  1345   00214A  6E0F               	movwf	PORT_Output@display1^0,c
  1346   00214C  EFC2  F010         	goto	l109
  1347   002150                     l1420:
  1348   002150  0E08               	movlw	8
  1349   002152  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1350   002154  A4D8               	btfss	status,2,c
  1351   002156  EFAF  F010         	goto	u1031
  1352   00215A  EFB1  F010         	goto	u1030
  1353   00215E                     u1031:
  1354   00215E  EFB5  F010         	goto	l1424
  1355   002162                     u1030:
  1356   002162  0E80               	movlw	128
  1357   002164  6E0F               	movwf	PORT_Output@display1^0,c
  1358   002166  EFC2  F010         	goto	l109
  1359   00216A                     l1424:
  1360   00216A  0E09               	movlw	9
  1361   00216C  1812               	xorwf	PORT_Output@first_dig^0,w,c
  1362   00216E  A4D8               	btfss	status,2,c
  1363   002170  EFBC  F010         	goto	u1041
  1364   002174  EFBE  F010         	goto	u1040
  1365   002178                     u1041:
  1366   002178  EFC2  F010         	goto	l123
  1367   00217C                     u1040:
  1368   00217C  0E98               	movlw	152
  1369   00217E  6E0F               	movwf	PORT_Output@display1^0,c
  1370   002180  EFC2  F010         	goto	l109
  1371   002184                     l123:
  1372   002184                     l109:
  1373                           
  1374                           ;main.c: 186:     if(second_dig == 0) display2 = 0xC0;
  1375   002184  5011               	movf	PORT_Output@second_dig^0,w,c
  1376   002186  A4D8               	btfss	status,2,c
  1377   002188  EFC8  F010         	goto	u1051
  1378   00218C  EFCA  F010         	goto	u1050
  1379   002190                     u1051:
  1380   002190  EFCE  F010         	goto	l1430
  1381   002194                     u1050:
  1382   002194  0EC0               	movlw	192
  1383   002196  6E10               	movwf	PORT_Output@display2^0,c
  1384   002198  EF4E  F011         	goto	l148
  1385   00219C                     l1430:
  1386   00219C  0411               	decf	PORT_Output@second_dig^0,w,c
  1387   00219E  A4D8               	btfss	status,2,c
  1388   0021A0  EFD4  F010         	goto	u1061
  1389   0021A4  EFD6  F010         	goto	u1060
  1390   0021A8                     u1061:
  1391   0021A8  EFDA  F010         	goto	l1434
  1392   0021AC                     u1060:
  1393   0021AC  0EF9               	movlw	249
  1394   0021AE  6E10               	movwf	PORT_Output@display2^0,c
  1395   0021B0  EF4E  F011         	goto	l148
  1396   0021B4                     l1434:
  1397   0021B4  0E02               	movlw	2
  1398   0021B6  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1399   0021B8  A4D8               	btfss	status,2,c
  1400   0021BA  EFE1  F010         	goto	u1071
  1401   0021BE  EFE3  F010         	goto	u1070
  1402   0021C2                     u1071:
  1403   0021C2  EFE7  F010         	goto	l1438
  1404   0021C6                     u1070:
  1405   0021C6  0EA4               	movlw	164
  1406   0021C8  6E10               	movwf	PORT_Output@display2^0,c
  1407   0021CA  EF4E  F011         	goto	l148
  1408   0021CE                     l1438:
  1409   0021CE  0E03               	movlw	3
  1410   0021D0  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1411   0021D2  A4D8               	btfss	status,2,c
  1412   0021D4  EFEE  F010         	goto	u1081
  1413   0021D8  EFF0  F010         	goto	u1080
  1414   0021DC                     u1081:
  1415   0021DC  EFF4  F010         	goto	l1442
  1416   0021E0                     u1080:
  1417   0021E0  0EB0               	movlw	176
  1418   0021E2  6E10               	movwf	PORT_Output@display2^0,c
  1419   0021E4  EF4E  F011         	goto	l148
  1420   0021E8                     l1442:
  1421   0021E8  0E04               	movlw	4
  1422   0021EA  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1423   0021EC  A4D8               	btfss	status,2,c
  1424   0021EE  EFFB  F010         	goto	u1091
  1425   0021F2  EFFD  F010         	goto	u1090
  1426   0021F6                     u1091:
  1427   0021F6  EF01  F011         	goto	l1446
  1428   0021FA                     u1090:
  1429   0021FA  0E99               	movlw	153
  1430   0021FC  6E10               	movwf	PORT_Output@display2^0,c
  1431   0021FE  EF4E  F011         	goto	l148
  1432   002202                     l1446:
  1433   002202  0E05               	movlw	5
  1434   002204  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1435   002206  A4D8               	btfss	status,2,c
  1436   002208  EF08  F011         	goto	u1101
  1437   00220C  EF0A  F011         	goto	u1100
  1438   002210                     u1101:
  1439   002210  EF0E  F011         	goto	l1450
  1440   002214                     u1100:
  1441   002214  0E92               	movlw	146
  1442   002216  6E10               	movwf	PORT_Output@display2^0,c
  1443   002218  EF4E  F011         	goto	l148
  1444   00221C                     l1450:
  1445   00221C  0E06               	movlw	6
  1446   00221E  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1447   002220  A4D8               	btfss	status,2,c
  1448   002222  EF15  F011         	goto	u1111
  1449   002226  EF17  F011         	goto	u1110
  1450   00222A                     u1111:
  1451   00222A  EF1B  F011         	goto	l1454
  1452   00222E                     u1110:
  1453   00222E  0E82               	movlw	130
  1454   002230  6E10               	movwf	PORT_Output@display2^0,c
  1455   002232  EF4E  F011         	goto	l148
  1456   002236                     l1454:
  1457   002236  0E07               	movlw	7
  1458   002238  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1459   00223A  A4D8               	btfss	status,2,c
  1460   00223C  EF22  F011         	goto	u1121
  1461   002240  EF24  F011         	goto	u1120
  1462   002244                     u1121:
  1463   002244  EF28  F011         	goto	l1458
  1464   002248                     u1120:
  1465   002248  0EF8               	movlw	248
  1466   00224A  6E10               	movwf	PORT_Output@display2^0,c
  1467   00224C  EF4E  F011         	goto	l148
  1468   002250                     l1458:
  1469   002250  0E08               	movlw	8
  1470   002252  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1471   002254  A4D8               	btfss	status,2,c
  1472   002256  EF2F  F011         	goto	u1131
  1473   00225A  EF31  F011         	goto	u1130
  1474   00225E                     u1131:
  1475   00225E  EF35  F011         	goto	l1462
  1476   002262                     u1130:
  1477   002262  0E80               	movlw	128
  1478   002264  6E10               	movwf	PORT_Output@display2^0,c
  1479   002266  EF4E  F011         	goto	l148
  1480   00226A                     l1462:
  1481   00226A  0E09               	movlw	9
  1482   00226C  1811               	xorwf	PORT_Output@second_dig^0,w,c
  1483   00226E  A4D8               	btfss	status,2,c
  1484   002270  EF3C  F011         	goto	u1141
  1485   002274  EF3E  F011         	goto	u1140
  1486   002278                     u1141:
  1487   002278  EF42  F011         	goto	l142
  1488   00227C                     u1140:
  1489   00227C  0E98               	movlw	152
  1490   00227E  6E10               	movwf	PORT_Output@display2^0,c
  1491   002280  EF4E  F011         	goto	l148
  1492   002284                     l142:
  1493   002284  EF4E  F011         	goto	l148
  1494   002288                     l149:
  1495                           
  1496                           ;main.c: 198:         PORTBbits.RB2 = 1;
  1497   002288  84CB               	bsf	203,2,c	;volatile
  1498                           
  1499                           ;main.c: 199:         if(PORTAbits.RA3 == 1) enter =1;
  1500   00228A  A6CA               	btfss	202,3,c	;volatile
  1501   00228C  EF4A  F011         	goto	u1151
  1502   002290  EF4C  F011         	goto	u1150
  1503   002294                     u1151:
  1504   002294  EF4E  F011         	goto	l148
  1505   002298                     u1150:
  1506   002298  0E01               	movlw	1
  1507   00229A  6E0C               	movwf	PORT_Output@enter^0,c
  1508   00229C                     l148:
  1509                           
  1510                           ;main.c: 197:     while(enter == 0){
  1511   00229C  500C               	movf	PORT_Output@enter^0,w,c
  1512   00229E  B4D8               	btfsc	status,2,c
  1513   0022A0  EF54  F011         	goto	u1161
  1514   0022A4  EF56  F011         	goto	u1160
  1515   0022A8                     u1161:
  1516   0022A8  EF44  F011         	goto	l149
  1517   0022AC                     u1160:
  1518   0022AC                     
  1519                           ;main.c: 202:     PORTCbits.RC6 = 1;
  1520   0022AC  8CCC               	bsf	204,6,c	;volatile
  1521   0022AE                     
  1522                           ;main.c: 203:     for(i = 1; i<1000; i++)
  1523   0022AE  0E00               	movlw	0
  1524   0022B0  6E0E               	movwf	(PORT_Output@i+1)^0,c
  1525   0022B2  0E01               	movlw	1
  1526   0022B4  6E0D               	movwf	PORT_Output@i^0,c
  1527   0022B6                     l152:
  1528                           
  1529                           ;main.c: 204:     {;main.c: 205:         PORTBbits.RB5 = 1;
  1530   0022B6  8ACB               	bsf	203,5,c	;volatile
  1531                           
  1532                           ;main.c: 206:         PORTD = display1;
  1533   0022B8  0060  F03F  FFCD   	movff	PORT_Output@display1,16333	;volatile
  1534   0022BE                     
  1535                           ;main.c: 207:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1536   0022BE  0E03               	movlw	3
  1537   0022C0  6E0B               	movwf	??_PORT_Output^0,c
  1538   0022C2  0E98               	movlw	152
  1539   0022C4                     u1217:
  1540   0022C4  2EE8               	decfsz	wreg,f,c
  1541   0022C6  D7FE               	bra	u1217
  1542   0022C8  2E0B               	decfsz	??_PORT_Output^0,f,c
  1543   0022CA  D7FC               	bra	u1217
  1544   0022CC                     
  1545                           ;main.c: 208:         PORTBbits.RB5 = 0;
  1546   0022CC  9ACB               	bcf	203,5,c	;volatile
  1547   0022CE                     
  1548                           ;main.c: 209:         PORTBbits.RB6 = 1;
  1549   0022CE  8CCB               	bsf	203,6,c	;volatile
  1550   0022D0                     
  1551                           ;main.c: 210:         PORTD = display2;
  1552   0022D0  0060  F043  FFCD   	movff	PORT_Output@display2,16333	;volatile
  1553                           
  1554                           ;main.c: 211:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1555   0022D6  0E03               	movlw	3
  1556   0022D8  6E0B               	movwf	??_PORT_Output^0,c
  1557   0022DA  0E98               	movlw	152
  1558   0022DC                     u1227:
  1559   0022DC  2EE8               	decfsz	wreg,f,c
  1560   0022DE  D7FE               	bra	u1227
  1561   0022E0  2E0B               	decfsz	??_PORT_Output^0,f,c
  1562   0022E2  D7FC               	bra	u1227
  1563   0022E4                     
  1564                           ;main.c: 212:         PORTBbits.RB6 = 0;
  1565   0022E4  9CCB               	bcf	203,6,c	;volatile
  1566   0022E6                     
  1567                           ;main.c: 214:     }
  1568   0022E6  4A0D               	infsnz	PORT_Output@i^0,f,c
  1569   0022E8  2A0E               	incf	(PORT_Output@i+1)^0,f,c
  1570   0022EA  BE0E               	btfsc	(PORT_Output@i+1)^0,7,c
  1571   0022EC  EF81  F011         	goto	u1171
  1572   0022F0  0EE8               	movlw	232
  1573   0022F2  5C0D               	subwf	PORT_Output@i^0,w,c
  1574   0022F4  0E03               	movlw	3
  1575   0022F6  580E               	subwfb	(PORT_Output@i+1)^0,w,c
  1576   0022F8  A0D8               	btfss	status,0,c
  1577   0022FA  EF81  F011         	goto	u1171
  1578   0022FE  EF83  F011         	goto	u1170
  1579   002302                     u1171:
  1580   002302  EF5B  F011         	goto	l152
  1581   002306                     u1170:
  1582   002306                     
  1583                           ;main.c: 215:     PORTD = 0xFF;
  1584   002306  68CD               	setf	205,c	;volatile
  1585   002308                     
  1586                           ;main.c: 216:     PORTB = 0;
  1587   002308  0E00               	movlw	0
  1588   00230A  6ECB               	movwf	203,c	;volatile
  1589   00230C  0012               	return		;funcret
  1590   00230E                     __end_of_PORT_Output:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function ___wmul *****************
  1594 ;; Defined at:
  1595 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  multiplier      2    0[COMRAM] unsigned int 
  1598 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  product         2    4[COMRAM] unsigned int 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  2    0[COMRAM] unsigned int 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, prodl, prodh
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;Total ram usage:        6 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_PORT_Output
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text6
  1624   00287E                     __ptext6:
  1625                           	callstack 0
  1626   00287E                     ___wmul:
  1627                           	callstack 29
  1628   00287E  5001               	movf	___wmul@multiplier^0,w,c
  1629   002880  0203               	mulwf	___wmul@multiplicand^0,c
  1630   002882  006F FFCC  F005    	movff	prodl,___wmul@product
  1631   002888  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1632   00288E  5001               	movf	___wmul@multiplier^0,w,c
  1633   002890  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1634   002892  50F3               	movf	243,w,c
  1635   002894  2606               	addwf	(___wmul@product+1)^0,f,c
  1636   002896  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1637   002898  0203               	mulwf	___wmul@multiplicand^0,c
  1638   00289A  50F3               	movf	243,w,c
  1639   00289C  2606               	addwf	(___wmul@product+1)^0,f,c
  1640   00289E  C005  F001         	movff	___wmul@product,?___wmul
  1641   0028A2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1642   0028A6  0012               	return		;funcret
  1643   0028A8                     __end_of___wmul:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function ___awmod *****************
  1647 ;; Defined at:
  1648 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dividend        2    0[COMRAM] int 
  1651 ;;  divisor         2    2[COMRAM] int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  sign            1    5[COMRAM] unsigned char 
  1654 ;;  counter         1    4[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    0[COMRAM] int 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;Total ram usage:        6 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_PORT_Output
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text7
  1678   002604                     __ptext7:
  1679                           	callstack 0
  1680   002604                     ___awmod:
  1681                           	callstack 29
  1682   002604  0E00               	movlw	0
  1683   002606  6E06               	movwf	___awmod@sign^0,c
  1684   002608  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1685   00260A  EF0B  F013         	goto	u800
  1686   00260E  EF09  F013         	goto	u801
  1687   002612                     u801:
  1688   002612  EF11  F013         	goto	l1302
  1689   002616                     u800:
  1690   002616  6C01               	negf	___awmod@dividend^0,c
  1691   002618  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1692   00261A  B0D8               	btfsc	status,0,c
  1693   00261C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1694   00261E  0E01               	movlw	1
  1695   002620  6E06               	movwf	___awmod@sign^0,c
  1696   002622                     l1302:
  1697   002622  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1698   002624  EF18  F013         	goto	u810
  1699   002628  EF16  F013         	goto	u811
  1700   00262C                     u811:
  1701   00262C  EF1C  F013         	goto	l1306
  1702   002630                     u810:
  1703   002630  6C03               	negf	___awmod@divisor^0,c
  1704   002632  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1705   002634  B0D8               	btfsc	status,0,c
  1706   002636  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1707   002638                     l1306:
  1708   002638  5003               	movf	___awmod@divisor^0,w,c
  1709   00263A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1710   00263C  B4D8               	btfsc	status,2,c
  1711   00263E  EF23  F013         	goto	u821
  1712   002642  EF25  F013         	goto	u820
  1713   002646                     u821:
  1714   002646  EF49  F013         	goto	l1322
  1715   00264A                     u820:
  1716   00264A  0E01               	movlw	1
  1717   00264C  6E05               	movwf	___awmod@counter^0,c
  1718   00264E  EF2D  F013         	goto	l1312
  1719   002652                     l1310:
  1720   002652  90D8               	bcf	status,0,c
  1721   002654  3603               	rlcf	___awmod@divisor^0,f,c
  1722   002656  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1723   002658  2A05               	incf	___awmod@counter^0,f,c
  1724   00265A                     l1312:
  1725   00265A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1726   00265C  EF32  F013         	goto	u831
  1727   002660  EF34  F013         	goto	u830
  1728   002664                     u831:
  1729   002664  EF29  F013         	goto	l1310
  1730   002668                     u830:
  1731   002668                     l1314:
  1732   002668  5003               	movf	___awmod@divisor^0,w,c
  1733   00266A  5C01               	subwf	___awmod@dividend^0,w,c
  1734   00266C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1735   00266E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1736   002670  A0D8               	btfss	status,0,c
  1737   002672  EF3D  F013         	goto	u841
  1738   002676  EF3F  F013         	goto	u840
  1739   00267A                     u841:
  1740   00267A  EF43  F013         	goto	l1318
  1741   00267E                     u840:
  1742   00267E  5003               	movf	___awmod@divisor^0,w,c
  1743   002680  5E01               	subwf	___awmod@dividend^0,f,c
  1744   002682  5004               	movf	(___awmod@divisor+1)^0,w,c
  1745   002684  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1746   002686                     l1318:
  1747   002686  90D8               	bcf	status,0,c
  1748   002688  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1749   00268A  3203               	rrcf	___awmod@divisor^0,f,c
  1750   00268C  2E05               	decfsz	___awmod@counter^0,f,c
  1751   00268E  EF34  F013         	goto	l1314
  1752   002692                     l1322:
  1753   002692  5006               	movf	___awmod@sign^0,w,c
  1754   002694  B4D8               	btfsc	status,2,c
  1755   002696  EF4F  F013         	goto	u851
  1756   00269A  EF51  F013         	goto	u850
  1757   00269E                     u851:
  1758   00269E  EF55  F013         	goto	l1326
  1759   0026A2                     u850:
  1760   0026A2  6C01               	negf	___awmod@dividend^0,c
  1761   0026A4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1762   0026A6  B0D8               	btfsc	status,0,c
  1763   0026A8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1764   0026AA                     l1326:
  1765   0026AA  C001  F001         	movff	___awmod@dividend,?___awmod
  1766   0026AE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1767   0026B2  0012               	return		;funcret
  1768   0026B4                     __end_of___awmod:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function ___awdiv *****************
  1772 ;; Defined at:
  1773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  dividend        2    0[COMRAM] int 
  1776 ;;  divisor         2    2[COMRAM] int 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  quotient        2    6[COMRAM] int 
  1779 ;;  sign            1    5[COMRAM] unsigned char 
  1780 ;;  counter         1    4[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    0[COMRAM] int 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1791 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1794 ;;Total ram usage:        8 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_PORT_Output
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text8
  1804   002540                     __ptext8:
  1805                           	callstack 0
  1806   002540                     ___awdiv:
  1807                           	callstack 29
  1808   002540  0E00               	movlw	0
  1809   002542  6E06               	movwf	___awdiv@sign^0,c
  1810   002544  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1811   002546  EFA9  F012         	goto	u740
  1812   00254A  EFA7  F012         	goto	u741
  1813   00254E                     u741:
  1814   00254E  EFAF  F012         	goto	l1258
  1815   002552                     u740:
  1816   002552  6C03               	negf	___awdiv@divisor^0,c
  1817   002554  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1818   002556  B0D8               	btfsc	status,0,c
  1819   002558  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1820   00255A  0E01               	movlw	1
  1821   00255C  6E06               	movwf	___awdiv@sign^0,c
  1822   00255E                     l1258:
  1823   00255E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1824   002560  EFB6  F012         	goto	u750
  1825   002564  EFB4  F012         	goto	u751
  1826   002568                     u751:
  1827   002568  EFBC  F012         	goto	l1264
  1828   00256C                     u750:
  1829   00256C  6C01               	negf	___awdiv@dividend^0,c
  1830   00256E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1831   002570  B0D8               	btfsc	status,0,c
  1832   002572  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1833   002574  0E01               	movlw	1
  1834   002576  1A06               	xorwf	___awdiv@sign^0,f,c
  1835   002578                     l1264:
  1836   002578  0E00               	movlw	0
  1837   00257A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1838   00257C  0E00               	movlw	0
  1839   00257E  6E07               	movwf	___awdiv@quotient^0,c
  1840   002580  5003               	movf	___awdiv@divisor^0,w,c
  1841   002582  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1842   002584  B4D8               	btfsc	status,2,c
  1843   002586  EFC7  F012         	goto	u761
  1844   00258A  EFC9  F012         	goto	u760
  1845   00258E                     u761:
  1846   00258E  EFF1  F012         	goto	l1286
  1847   002592                     u760:
  1848   002592  0E01               	movlw	1
  1849   002594  6E05               	movwf	___awdiv@counter^0,c
  1850   002596  EFD1  F012         	goto	l1272
  1851   00259A                     l1270:
  1852   00259A  90D8               	bcf	status,0,c
  1853   00259C  3603               	rlcf	___awdiv@divisor^0,f,c
  1854   00259E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1855   0025A0  2A05               	incf	___awdiv@counter^0,f,c
  1856   0025A2                     l1272:
  1857   0025A2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1858   0025A4  EFD6  F012         	goto	u771
  1859   0025A8  EFD8  F012         	goto	u770
  1860   0025AC                     u771:
  1861   0025AC  EFCD  F012         	goto	l1270
  1862   0025B0                     u770:
  1863   0025B0                     l1274:
  1864   0025B0  90D8               	bcf	status,0,c
  1865   0025B2  3607               	rlcf	___awdiv@quotient^0,f,c
  1866   0025B4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1867   0025B6  5003               	movf	___awdiv@divisor^0,w,c
  1868   0025B8  5C01               	subwf	___awdiv@dividend^0,w,c
  1869   0025BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1870   0025BC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1871   0025BE  A0D8               	btfss	status,0,c
  1872   0025C0  EFE4  F012         	goto	u781
  1873   0025C4  EFE6  F012         	goto	u780
  1874   0025C8                     u781:
  1875   0025C8  EFEB  F012         	goto	l1282
  1876   0025CC                     u780:
  1877   0025CC  5003               	movf	___awdiv@divisor^0,w,c
  1878   0025CE  5E01               	subwf	___awdiv@dividend^0,f,c
  1879   0025D0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1880   0025D2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1881   0025D4  8007               	bsf	___awdiv@quotient^0,0,c
  1882   0025D6                     l1282:
  1883   0025D6  90D8               	bcf	status,0,c
  1884   0025D8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1885   0025DA  3203               	rrcf	___awdiv@divisor^0,f,c
  1886   0025DC  2E05               	decfsz	___awdiv@counter^0,f,c
  1887   0025DE  EFD8  F012         	goto	l1274
  1888   0025E2                     l1286:
  1889   0025E2  5006               	movf	___awdiv@sign^0,w,c
  1890   0025E4  B4D8               	btfsc	status,2,c
  1891   0025E6  EFF7  F012         	goto	u791
  1892   0025EA  EFF9  F012         	goto	u790
  1893   0025EE                     u791:
  1894   0025EE  EFFD  F012         	goto	l1290
  1895   0025F2                     u790:
  1896   0025F2  6C07               	negf	___awdiv@quotient^0,c
  1897   0025F4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1898   0025F6  B0D8               	btfsc	status,0,c
  1899   0025F8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1900   0025FA                     l1290:
  1901   0025FA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1902   0025FE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1903   002602  0012               	return		;funcret
  1904   002604                     __end_of___awdiv:
  1905                           	callstack 0
  1906                           
  1907                           	psect	smallconst
  1908   002000                     __psmallconst:
  1909                           	callstack 0
  1910   002000  00                 	db	0
  1911   002001  00                 	db	0	; dummy byte at the end
  1912   000000                     
  1913                           	psect	rparam
  1914   000000                     
  1915                           	psect	config
  1916                           
  1917                           ;Config register CONFIG1L @ 0x300000
  1918                           ;	External Oscillator Selection
  1919                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1920                           ;	Reset Oscillator Selection
  1921                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1922   300000                     	org	3145728
  1923   300000  F8                 	db	248
  1924                           
  1925                           ;Config register CONFIG1H @ 0x300001
  1926                           ;	Clock out Enable bit
  1927                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1928                           ;	PRLOCKED One-Way Set Enable bit
  1929                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1930                           ;	Clock Switch Enable bit
  1931                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1932                           ;	Fail-Safe Clock Monitor Enable bit
  1933                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1934   300001                     	org	3145729
  1935   300001  FF                 	db	255
  1936                           
  1937                           ;Config register CONFIG2L @ 0x300002
  1938                           ;	MCLR Enable bit
  1939                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1940                           ;	Power-up timer selection bits
  1941                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1942                           ;	Multi-vector enable bit
  1943                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1944                           ;	IVTLOCK bit One-way set enable bit
  1945                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1946                           ;	Low Power BOR Enable bit
  1947                           ;	LPBOREN = OFF, ULPBOR disabled
  1948                           ;	Brown-out Reset Enable bits
  1949                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1950   300002                     	org	3145730
  1951   300002  FF                 	db	255
  1952                           
  1953                           ;Config register CONFIG2H @ 0x300003
  1954                           ;	Brown-out Reset Voltage Selection bits
  1955                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1956                           ;	ZCD Disable bit
  1957                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1958                           ;	PPSLOCK bit One-Way Set Enable bit
  1959                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1960                           ;	Stack Full/Underflow Reset Enable bit
  1961                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1962                           ;	Debugger Enable bit
  1963                           ;	DEBUG = OFF, Background debugger disabled
  1964                           ;	Extended Instruction Set Enable bit
  1965                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1966   300003                     	org	3145731
  1967   300003  FF                 	db	255
  1968                           
  1969                           ;Config register CONFIG3L @ 0x300004
  1970                           ;	WDT Period selection bits
  1971                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1972                           ;	WDT operating mode
  1973                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1974   300004                     	org	3145732
  1975   300004  9F                 	db	159
  1976                           
  1977                           ;Config register CONFIG3H @ 0x300005
  1978                           ;	WDT Window Select bits
  1979                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1980                           ;	WDT input clock selector
  1981                           ;	WDTCCS = SC, Software Control
  1982   300005                     	org	3145733
  1983   300005  FF                 	db	255
  1984                           
  1985                           ;Config register CONFIG4L @ 0x300006
  1986                           ;	Boot Block Size selection bits
  1987                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1988                           ;	Boot Block enable bit
  1989                           ;	BBEN = OFF, Boot block disabled
  1990                           ;	Storage Area Flash enable bit
  1991                           ;	SAFEN = OFF, SAF disabled
  1992                           ;	Application Block write protection bit
  1993                           ;	WRTAPP = OFF, Application Block not write protected
  1994   300006                     	org	3145734
  1995   300006  FF                 	db	255
  1996                           
  1997                           ;Config register CONFIG4H @ 0x300007
  1998                           ;	Boot Block Write Protection bit
  1999                           ;	WRTB = OFF, Boot Block not write-protected
  2000                           ;	Configuration Register Write Protection bit
  2001                           ;	WRTC = OFF, Configuration registers not write-protected
  2002                           ;	Data EEPROM Write Protection bit
  2003                           ;	WRTD = OFF, Data EEPROM not write-protected
  2004                           ;	SAF Write protection bit
  2005                           ;	WRTSAF = OFF, SAF not Write Protected
  2006                           ;	Low Voltage Programming Enable bit
  2007                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2008   300007                     	org	3145735
  2009   300007  FF                 	db	255
  2010                           
  2011                           ;Config register CONFIG5L @ 0x300008
  2012                           ;	PFM and Data EEPROM Code Protection bit
  2013                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2014   300008                     	org	3145736
  2015   300008  FF                 	db	255
  2016                           
  2017                           ;Config register CONFIG5H @ 0x300009
  2018                           ;	unspecified, using default values
  2019   300009                     	org	3145737
  2020   300009  FF                 	db	255
  2021                           tosu	equ	0x3FFF
  2022                           tosh	equ	0x3FFE
  2023                           tosl	equ	0x3FFD
  2024                           stkptr	equ	0x3FFC
  2025                           pclatu	equ	0x3FFB
  2026                           pclath	equ	0x3FFA
  2027                           pcl	equ	0x3FF9
  2028                           tblptru	equ	0x3FF8
  2029                           tblptrh	equ	0x3FF7
  2030                           tblptrl	equ	0x3FF6
  2031                           tablat	equ	0x3FF5
  2032                           prodh	equ	0x3FF4
  2033                           prodl	equ	0x3FF3
  2034                           indf0	equ	0x3FEF
  2035                           postinc0	equ	0x3FEE
  2036                           postdec0	equ	0x3FED
  2037                           preinc0	equ	0x3FEC
  2038                           plusw0	equ	0x3FEB
  2039                           fsr0h	equ	0x3FEA
  2040                           fsr0l	equ	0x3FE9
  2041                           wreg	equ	0x3FE8
  2042                           indf1	equ	0x3FE7
  2043                           postinc1	equ	0x3FE6
  2044                           postdec1	equ	0x3FE5
  2045                           preinc1	equ	0x3FE4
  2046                           plusw1	equ	0x3FE3
  2047                           fsr1h	equ	0x3FE2
  2048                           fsr1l	equ	0x3FE1
  2049                           bsr	equ	0x3FE0
  2050                           indf2	equ	0x3FDF
  2051                           postinc2	equ	0x3FDE
  2052                           postdec2	equ	0x3FDD
  2053                           preinc2	equ	0x3FDC
  2054                           plusw2	equ	0x3FDB
  2055                           fsr2h	equ	0x3FDA
  2056                           fsr2l	equ	0x3FD9
  2057                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PORT_Output
    _calculate->___lbdiv
    _PORT_Output->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2841
                        _PORT_Output
                          _calculate
                        _scan_number
                     _scan_operation
 ---------------------------------------------------------------------------------
 (1) _scan_operation                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _scan_number                                          7     7      0     105
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2     681
                                              4 COMRAM     4     2      2
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PORT_Output                                         10     8      2    1979
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Output
     ___awdiv
     ___awmod
     ___wmul
   _calculate
     ___lbdiv
   _scan_number
   _scan_operation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      17       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
ABS                  0      0      17      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhhh        32      0       0      69        0.0%
BITBIGSFRhhl         4      0       0      70        0.0%
BITBIGSFRlhhh      551      0       0      71        0.0%
BITBIGSFRlhhlh       F      0       0      72        0.0%
BITBIGSFRlhhll       F      0       0      73        0.0%
BITBIGSFRlhl         F      0       0      74        0.0%
BITBIGSFRll        240      0       0      75        0.0%
BIGRAM            1FFF      0       0      76        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 08 09:34:33 2024

           PORT_Output@i 000D                       l60 2320                       l53 27D0  
                     l73 241E                       l90 2706                       l91 26BC  
                     l87 253E                       l97 2730          ?_scan_operation 0001  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l100 274E  
                    l101 2766                      l104 27AA                      l123 2184  
                    l109 2184                      l142 2284                      l151 22AC  
                    l152 22B6                      l401 26B2                      l153 2306  
                    l154 230C                      l148 229C                      l157 28A6  
                    l149 2288                      l563 287C                      l388 2602  
                    l950 2346                      l942 2310                      l960 236A  
                    l952 2354                      l944 2330                      l970 2392  
                    l962 236E                      l954 2358                      l946 2334  
                    l980 23B6                      l972 23A0                      l964 237C  
                    l956 235A                      l948 2342                      l990 23DE  
                    l982 23BA                      l974 23A4                      l966 2380  
                    l958 235C                      l984 23C8                      l976 23A6  
                    l968 238E                      l992 23E0                      l994 23F2  
                    l986 23CC                      l978 23A8                      l996 240A  
                    l988 23DA                      l998 2412                      u200 237C  
                    u201 2378                      u210 238E                      u211 238A  
                    u300 2468                      u220 23A0                      u301 2464  
                    u221 239C                      u310 247A                      u230 23B6  
                    u311 2476                      u231 23B2                      u320 248C  
                    u240 23C8                      u160 2330                      u400 26CC  
                    u321 2488                      u241 23C4                      u161 232C  
                    u401 26C8                      u330 249E                      u250 23DA  
                    u170 2342                      u410 26DE                      u331 249A  
                    u251 23D6                      u171 233E                      u411 26DA  
                    u340 24B4                      u260 23F2                      u180 2354  
                    u420 26F0                      u341 24B0                      u261 23EE  
                    u181 2350                      u421 26EC                      u350 24C6  
                    u270 242E                      u190 236A                      u430 2702  
                    u351 24C2                      u271 242A                      u191 2366  
                    u431 26FE                      u360 24D8                      u280 2440  
                    u440 2716                      u361 24D4                      u281 243C  
                    u441 2712                      u370 24F4                      u290 2452  
                    u371 24F0                      u291 244E                      u380 2520  
                    u381 251C                      u390 2536                      u391 2532  
                    u800 2616                      u801 2612                      u810 2630  
                    u811 262C                      u740 2552                      u820 264A  
                    u900 2760                      u741 254E                      u821 2646  
                    u901 275C                      u750 256C                      u830 2668  
                    u910 2778                      u751 2568                      u831 2664  
                    u911 2774                      u760 2592                      u840 267E  
                    u920 2794                      u761 258E                      u841 267A  
                    u921 2790                      u770 25B0                      u850 26A2  
                    u930 2028                      u771 25AC                      u851 269E  
                    u931 2024                      u780 25CC                      u940 2084  
                    u860 2838                      u781 25C8                      u941 2080  
                    u861 2834                      u790 25F2                      u950 209C  
                    u870 2854                      u791 25EE                      u951 2098  
                    u871 2850                      u960 20AC                      u880 286A  
                    u961 20A8                      u881 2866                      u970 20C6  
                    u890 2748                      u971 20C2                      u891 2744  
                    u980 20E0                      u981 20DC                      u990 20FA  
                    u991 20F6             ___awmod@sign 0006                      wreg 3FE8  
                   l1000 2416                     l1010 2452                     l1002 242E  
                   l1020 246C                     l1012 2456                     l1004 2432  
                   l1030 249E                     l1022 247A                     l1014 2458  
                   l1006 2440                     l1040 24B8                     l1032 24A2  
                   l1024 247E                     l1016 245A                     l1008 2444  
                   l1042 24C6                     l1034 24A4                     l1026 248C  
                   l1018 2468                     l1050 24E2                     l1300 261E  
                   l1060 2524                     l1052 24F4                     l1044 24CA  
                   l1036 24A6                     l1028 2490                     l1310 2652  
                   l1302 2622                     l1062 2536                     l1054 24F8  
                   l1046 24D8                     l1038 24B4                     l1070 26CC  
                   l1320 268C                     l1312 265A                     l1304 2630  
                   l1400 20CE                     l1064 253C                     l1056 2510  
                   l1048 24DC                     l1080 26F4                     l1072 26D0  
                   l1250 2540                     l1314 2668                     l1322 2692  
                   l1306 2638                     l1410 2114                     l1402 20E0  
                   l1330 2824                     l1058 2520                     l1082 2702  
                   l1074 26DE                     l1260 256C                     l1252 2544  
                   l1324 26A2                     l1316 267E                     l1308 264A  
                   l1244 287E                     l1420 2150                     l1412 211C  
                   l1404 20E8                     l1340 2846                     l1332 2828  
                   l1084 2716                     l1076 26E2                     l1068 26B4  
                   l1500 27EC                     l1270 259A                     l1262 2574  
                   l1254 2552                     l1326 26AA                     l1318 2686  
                   l1246 289E                     l1430 219C                     l1422 2162  
                   l1414 212E                     l1406 20FA                     l1350 2874  
                   l1342 2854                     l1334 2838                     l1086 272E  
                   l1078 26F0                     l1502 27F2                     l1280 25D4  
                   l1272 25A2                     l1264 2578                     l1256 255A  
                   l1440 21E0                     l1432 21AC                     l1424 216A  
                   l1416 2136                     l1408 2102                     l1344 286A  
                   l1336 2840                     l1352 287A                     l1360 2748  
                   l1504 27F2                     l1290 25FA                     l1282 25D6  
                   l1274 25B0                     l1266 2580                     l1258 255E  
                   l1450 221C                     l1442 21E8                     l1434 21B4  
                   l1426 217C                     l1418 2148                     l1346 286E  
                   l1338 2844                     l1370 27A0                     l1362 2760  
                   l1506 27FA                     l1284 25DC                     l1276 25B6  
                   l1268 2592                     l1460 2262                     l1452 222E  
                   l1444 21FA                     l1436 21C6                     l1428 2194  
                   l1380 2042                     l1348 2870                     l1364 2778  
                   l1356 2734                     l1508 280C                     l1278 25CC  
                   l1286 25E2                     l1294 2604                     l1462 226A  
                   l1454 2236                     l1446 2202                     l1438 21CE  
                   l1390 208C                     l1382 2044                     l1374 2002  
                   l1366 2782                     l1358 2738                     l1288 25F2  
                   l1296 2608                     l1480 22D0                     l1464 227C  
                   l1456 2248                     l1448 2214                     l1392 209C  
                   l1384 205C                     l1376 201A                     l1368 2794  
                   l1298 2616                     l1482 22E4                     l1474 22BE  
                   l1466 2298                     l1458 2250                     l1394 20AC  
                   l1386 2074                     l1378 2028                     l1490 27AC  
                   l1484 22E6                     l1476 22CC                     l1468 22AE  
                   l1396 20B4                     l1388 2084                     l1492 27AE  
                   l1486 2308                     l1478 22CE                     l1398 20C6  
                   l1494 27CC                     l1496 27CE                     l1498 27E4  
                   u1000 2114                     u1001 2110                     u1010 212E  
                   u1011 212A                     u1100 2214                     u1020 2148  
                   u1101 2210                     u1021 2144                     u1110 222E  
                   u1030 2162                     u1111 222A                     u1031 215E  
                   u1120 2248                     u1040 217C                     u1121 2244  
                   u1041 2178                     u1130 2262                     u1050 2194  
                   u1131 225E                     u1051 2190                     u1140 227C  
                   u1060 21AC                     u1141 2278                     u1061 21A8  
                   u1150 2298                     u1070 21C6                     u1151 2294  
                   u1071 21C2                     u1207 2502                     u1160 22AC  
                   u1080 21E0                     u1217 22C4                     u1161 22A8  
                   u1081 21DC                     u1170 2306                     u1090 21FA  
                   u1171 2302                     u1227 22DC                     u1091 21F6  
                   u1187 2720                     u1197 23FC         PORT_Output@enter 000C  
                   _main 27AC                     prodh 3FF4                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 2604          __end_of___lbdiv 287E          __end_of___awmod 26B4  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTB 3FCB  
                  _PORTC 3FCC                    _PORTD 3FCD                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
      PORT_Output@answer 0009                    status 3FD8          ___lbdiv@divisor 0001  
        ___lbdiv@counter 0003             ?_scan_number 0001          __initialization 28A8  
           __end_of_main 2822                   ??_main 0013            __activetblptr 0000  
       ___awdiv@dividend 0001                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELC 3A60                   _ANSELD 3A70                   ___wmul 287E  
              ??___awdiv 0005                ??___lbdiv 0002                ??___awmod 0005  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005     scan_number@LED_Count 0006             __mediumconst 0000  
           ?_PORT_Output 0009         ___lbdiv@dividend 0002               __accesstop 0060  
__end_of__initialization 28A8            ___rparam_used 0001         ??_scan_operation 0001  
         __pcstackCOMRAM 0001         scan_number@count 0004         scan_number@input 0007  
       ___lbdiv@quotient 0004              _X_Input_REG 0017              _Y_Input_REG 0016  
             __pnvCOMRAM 0013                  ?___wmul 0001        __end_of_calculate 27AC  
    PORT_Output@display1 000F      PORT_Output@display2 0010                  __Hparam 0000  
             calculate@x 0008               calculate@y 0005                  __Lparam 0000  
                ___awdiv 2540                  ___lbdiv 2822                  ___awmod 2604  
           __psmallconst 2000                  __pcinit 28A8                  __ramtop 2000  
                __ptext0 27AC                  __ptext1 26B4                  __ptext2 230E  
                __ptext3 2732                  __ptext4 2822                  __ptext5 2002  
                __ptext6 287E                  __ptext7 2604                  __ptext8 2540  
       ___awmod@dividend 0001     end_of_initialization 28A8                _PORTAbits 3FCA  
              _PORTBbits 3FCB                _PORTCbits 3FCC           __end_of___wmul 28A8  
          _Operation_REG 0015        scan_number@button 0003      start_initialization 28A8  
      scan_number@output 0005                 ??___wmul 0005              _calculation 0014  
  PORT_Output@second_dig 0011                _calculate 2732            ??_scan_number 0001  
               ?___awdiv 0001                 ?___lbdiv 0001                 ?___awmod 0001  
            __smallconst 2000           ___wmul@product 0005               ?_calculate 0005  
        calculate@output 0007      __end_of_scan_number 2540        ___wmul@multiplier 0001  
          ??_PORT_Output 000B     PORT_Output@first_dig 0012              calculate@op 0006  
               __Hrparam 0000                 __Lrparam 0000      __end_of_PORT_Output 230E  
            ??_calculate 0007              _scan_number 230E                 isa$xinst 0000  
         _scan_operation 26B4       _Display_Result_REG 0013     scan_operation@op_key 0003  
 __end_of_scan_operation 2732              _PORT_Output 2002  
