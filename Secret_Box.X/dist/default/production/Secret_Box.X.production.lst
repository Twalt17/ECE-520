

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 22 10:45:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=4,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F47K42 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _TRISC	set	16324
    62   000000                     _TRISD	set	16325
    63   000000                     _PORTC	set	16332
    64   000000                     _PORTA	set	16330
    65   000000                     _LATD1	set	130537
    66   000000                     _IPR1bits	set	14721
    67   000000                     _PIR1bits	set	14753
    68   000000                     _LATB	set	16315
    69   000000                     _TRISB	set	16323
    70   000000                     _PORTAbits	set	16330
    71   000000                     _LATD0	set	130536
    72   000000                     _TRISA	set	16322
    73   000000                     _PORTCbits	set	16332
    74   000000                     _INTCON0bits	set	16338
    75   000000                     _ANSELA	set	14912
    76   000000                     _WPUA	set	14913
    77   000000                     _ANSELC	set	14944
    78   000000                     _INT0PPS	set	15040
    79   000000                     _PIE1bits	set	14737
    80                           
    81                           	psect	smallconst
    82   002000                     __psmallconst:
    83                           	callstack 0
    84   002000  00                 	db	0
    85   002001                     STR_1:
    86   002001  43                 	db	67	;'C'
    87   002002  6F                 	db	111	;'o'
    88   002003  72                 	db	114	;'r'
    89   002004  72                 	db	114	;'r'
    90   002005  65                 	db	101	;'e'
    91   002006  63                 	db	99	;'c'
    92   002007  74                 	db	116	;'t'
    93   002008  21                 	db	33
    94   002009  00                 	db	0
    95   00200A                     STR_2:
    96   00200A  57                 	db	87	;'W'
    97   00200B  72                 	db	114	;'r'
    98   00200C  6F                 	db	111	;'o'
    99   00200D  6E                 	db	110	;'n'
   100   00200E  67                 	db	103	;'g'
   101   00200F  21                 	db	33
   102   002010  00                 	db	0
   103   002011  00                 	db	0	; dummy byte at the end
   104   000000                     
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   004474                     __pcinit:
   109                           	callstack 0
   110   004474                     start_initialization:
   111                           	callstack 0
   112   004474                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (2 bytes)
   116   004474  6A19               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117   004476  6A18               	clrf	__pbssCOMRAM& (0+255),c
   118                           
   119                           ;
   120                           ; Setup IVTBASE
   121                           ;
   122   004478  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   123   00447A  6ED5               	movwf	213,c
   124   00447C  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   125   00447E  6ED6               	movwf	214,c
   126   004480  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   127   004482  6ED7               	movwf	215,c
   128   004484                     end_of_initialization:
   129                           	callstack 0
   130   004484                     __end_of__initialization:
   131                           	callstack 0
   132   004484  0E00               	movlw	low (__Lsmallconst shr (0+16))
   133   004486  6EF8               	movwf	tblptru,c
   134   004488  0E20               	movlw	high __Lsmallconst
   135   00448A  6EF7               	movwf	tblptrh,c
   136   00448C  0100               	movlb	0
   137   00448E  EF96  F021         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMRAM
   140   000018                     __pbssCOMRAM:
   141                           	callstack 0
   142   000018                     _input2:
   143                           	callstack 0
   144   000018                     	ds	1
   145   000019                     _input:
   146                           	callstack 0
   147   000019                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150   000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152   000001                     delay_us@us:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x0
   156   000001                     	ds	2
   157   000003                     delay_us@i:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x2
   161   000003                     	ds	2
   162   000005                     INT0_ISR@i:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x4
   166   000005                     	ds	1
   167   000006                     INT0_ISR@timer:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x5
   171   000006                     	ds	2
   172   000008                     MSdelay@val:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x7
   176   000008                     	ds	2
   177   00000A                     MSdelay@i:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x9
   181   00000A                     	ds	2
   182   00000C                     MSdelay@j:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0xB
   186   00000C                     	ds	2
   187   00000E                     LCD_Command@cmd:
   188                           	callstack 0
   189   00000E                     LCD_Char@dat:
   190                           	callstack 0
   191   00000E                     LightScan@pinNumber:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xD
   195   00000E                     	ds	1
   196   00000F                     LCD_String@msg:
   197                           	callstack 0
   198   00000F                     LightScan@counter:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0xE
   202   00000F                     	ds	1
   203   000010                     LCD_String_xy@pos:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0xF
   207   000010                     	ds	1
   208   000011                     LCD_String_xy@msg:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x10
   212   000011                     	ds	1
   213   000012                     LCD_String_xy@row:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x11
   217   000012                     	ds	1
   218   000013                     LCD_String_xy@location:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x12
   222   000013                     	ds	1
   223   000014                     Decision@input2:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x13
   227   000014                     	ds	1
   228   000015                     Decision@input1:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x14
   232   000015                     	ds	1
   233   000016                     Decision@timer:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x15
   237   000016                     	ds	2
   238   000018                     
   239                           ; 1 bytes @ 0x17
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   242 ;;
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 71 in file "main.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   263 ;;Total ram usage:        0 bytes
   264 ;; Hardware stack levels required when called: 7
   265 ;; This function calls:
   266 ;;		_Decision
   267 ;;		_LCD_Char
   268 ;;		_LCD_Clear
   269 ;;		_LCD_Init
   270 ;;		_LightScan
   271 ;;		_initialize
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278   00432C                     __ptext0:
   279                           	callstack 0
   280   00432C                     _main:
   281                           	callstack 24
   282   00432C                     
   283                           ;main.c: 92:     initialize();
   284   00432C  ECD3  F021         	call	_initialize	;wreg free
   285   004330                     l1259:
   286                           
   287                           ;main.c: 94:     {;main.c: 95:     LCD_Init();
   288   004330  EC23  F022         	call	_LCD_Init	;wreg free
   289   004334                     
   290                           ;main.c: 96:     LCD_Clear();
   291   004334  EC67  F022         	call	_LCD_Clear	;wreg free
   292   004338                     
   293                           ;main.c: 97:     input = LightScan(1);
   294   004338  0E01               	movlw	1
   295   00433A  ECC9  F020         	call	_LightScan
   296   00433E  6E19               	movwf	_input^0,c
   297   004340                     
   298                           ;main.c: 98:     LCD_Char(input + '0');
   299   004340  5019               	movf	_input^0,w,c
   300   004342  0F30               	addlw	48
   301   004344  EC49  F022         	call	_LCD_Char
   302   004348                     
   303                           ;main.c: 99:     input2 = LightScan(2);
   304   004348  0E02               	movlw	2
   305   00434A  ECC9  F020         	call	_LightScan
   306   00434E  6E18               	movwf	_input2^0,c
   307   004350                     
   308                           ;main.c: 100:     LCD_Char(input2 + '0');
   309   004350  5018               	movf	_input2^0,w,c
   310   004352  0F30               	addlw	48
   311   004354  EC49  F022         	call	_LCD_Char
   312   004358                     
   313                           ;main.c: 101:     Decision(input,input2);
   314   004358  C018  F014         	movff	_input2,Decision@input2
   315   00435C  5019               	movf	_input^0,w,c
   316   00435E  EC24  F021         	call	_Decision
   317   004362  EF98  F021         	goto	l1259
   318   004366  EF57  F020         	goto	start
   319   00436A                     __end_of_main:
   320                           	callstack 0
   321                           
   322 ;; *************** function _initialize *****************
   323 ;; Defined at:
   324 ;;		line 1 in file "./Initialization.h"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; Hardware stack levels required when called: 2
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353   0043A6                     __ptext1:
   354                           	callstack 0
   355   0043A6                     _initialize:
   356                           	callstack 28
   357   0043A6                     
   358                           ;./Initialization.h: 3:     TRISA = 0xFF;
   359   0043A6  68C2               	setf	194,c	;volatile
   360   0043A8                     
   361                           ;./Initialization.h: 4:     ANSELA = 0;
   362   0043A8  0E00               	movlw	0
   363   0043AA  013A               	movlb	58	; () banked
   364   0043AC  6F40               	movwf	64,b	;volatile
   365                           
   366                           ;./Initialization.h: 5:     PORTA = 0;
   367   0043AE  0E00               	movlw	0
   368   0043B0  6ECA               	movwf	202,c	;volatile
   369                           
   370                           ;./Initialization.h: 6:     TRISC = 0x00;
   371   0043B2  0E00               	movlw	0
   372   0043B4  6EC4               	movwf	196,c	;volatile
   373                           
   374                           ;./Initialization.h: 7:     ANSELC = 0;
   375   0043B6  0E00               	movlw	0
   376   0043B8  6F60               	movwf	96,b	;volatile
   377                           
   378                           ;./Initialization.h: 8:     PORTC = 0;
   379   0043BA  0E00               	movlw	0
   380   0043BC  6ECC               	movwf	204,c	;volatile
   381   0043BE                     
   382                           ; BSR set to: 58
   383                           ;./Initialization.h: 9:     PORTCbits.RC4 = 1;
   384   0043BE  88CC               	bsf	204,4,c	;volatile
   385   0043C0                     
   386                           ; BSR set to: 58
   387                           ;./Initialization.h: 10:     INTCON0bits.INT0EDG = 1;
   388   0043C0  80D2               	bsf	210,0,c	;volatile
   389   0043C2                     
   390                           ; BSR set to: 58
   391                           ;./Initialization.h: 11:     INT0PPS = PORTAbits.RA0;
   392   0043C2  0E00               	movlw	0
   393   0043C4  B0CA               	btfsc	202,0,c	;volatile
   394   0043C6  0E01               	movlw	1
   395   0043C8  6FC0               	movwf	192,b	;volatile
   396   0043CA                     
   397                           ; BSR set to: 58
   398                           ;./Initialization.h: 12:     WPUA=0xFF;
   399   0043CA  6941               	setf	65,b	;volatile
   400   0043CC                     
   401                           ; BSR set to: 58
   402                           ;./Initialization.h: 13:     INTCON0bits.IPEN = 1;
   403   0043CC  8AD2               	bsf	210,5,c	;volatile
   404   0043CE                     
   405                           ; BSR set to: 58
   406                           ;./Initialization.h: 14:     INTCON0bits.GIEH = 1;
   407   0043CE  8ED2               	bsf	210,7,c	;volatile
   408   0043D0                     
   409                           ; BSR set to: 58
   410                           ;./Initialization.h: 15:     INTCON0bits.GIEL = 1;
   411   0043D0  8CD2               	bsf	210,6,c	;volatile
   412   0043D2                     
   413                           ; BSR set to: 58
   414                           ;./Initialization.h: 16:     INTCON0bits.INT0EDG = 1;
   415   0043D2  80D2               	bsf	210,0,c	;volatile
   416   0043D4                     
   417                           ; BSR set to: 58
   418                           ;./Initialization.h: 17:     IPR1bits.INT0IP = 1;
   419   0043D4  0139               	movlb	57	; () banked
   420   0043D6  8181               	bsf	129,0,b	;volatile
   421   0043D8                     
   422                           ; BSR set to: 57
   423                           ;./Initialization.h: 18:     PIE1bits.INT0IE = 1;
   424   0043D8  8191               	bsf	145,0,b	;volatile
   425   0043DA                     
   426                           ; BSR set to: 57
   427                           ;./Initialization.h: 20:     PIR1bits.INT0IF = 0;
   428   0043DA  91A1               	bcf	161,0,b	;volatile
   429   0043DC                     
   430                           ; BSR set to: 57
   431   0043DC  0012               	return		;funcret
   432   0043DE                     __end_of_initialize:
   433                           	callstack 0
   434                           
   435 ;; *************** function _LightScan *****************
   436 ;; Defined at:
   437 ;;		line 108 in file "./LCD.h"
   438 ;; Parameters:    Size  Location     Type
   439 ;;  pinNumber       1    wreg     unsigned char 
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  pinNumber       1   13[COMRAM] unsigned char 
   442 ;;  counter         1   14[COMRAM] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      unsigned char 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   456 ;;Total ram usage:        2 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 3
   459 ;; This function calls:
   460 ;;		_MSdelay
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text2
   467   004192                     __ptext2:
   468                           	callstack 0
   469   004192                     _LightScan:
   470                           	callstack 27
   471                           
   472                           ; BSR set to: 57
   473                           ;incstack = 0
   474                           ;LightScan@pinNumber stored from wreg
   475   004192  6E0E               	movwf	LightScan@pinNumber^0,c
   476   004194                     
   477                           ;./LCD.h: 110:     unsigned char counter =0;
   478   004194  0E00               	movlw	0
   479   004196  6E0F               	movwf	LightScan@counter^0,c
   480   004198                     
   481                           ;./LCD.h: 112:     if (pinNumber == 1)
   482   004198  040E               	decf	LightScan@pinNumber^0,w,c
   483   00419A  A4D8               	btfss	status,2,c
   484   00419C  EFD2  F020         	goto	u241
   485   0041A0  EFD4  F020         	goto	u240
   486   0041A4                     u241:
   487   0041A4  EF19  F021         	goto	l1167
   488   0041A8                     u240:
   489   0041A8  EFF6  F020         	goto	l1151
   490   0041AC                     l92:
   491                           
   492                           ;./LCD.h: 115:     {;./LCD.h: 116:         if(PORTAbits.RA3 == 1)
   493   0041AC  A6CA               	btfss	202,3,c	;volatile
   494   0041AE  EFDB  F020         	goto	u251
   495   0041B2  EFDD  F020         	goto	u250
   496   0041B6                     u251:
   497   0041B6  EFE6  F020         	goto	l93
   498   0041BA                     u250:
   499   0041BA                     l1137:
   500                           
   501                           ;./LCD.h: 117:         {;./LCD.h: 118:             MSdelay(500);
   502   0041BA  0E01               	movlw	1
   503   0041BC  6E09               	movwf	(MSdelay@val+1)^0,c
   504   0041BE  0EF4               	movlw	244
   505   0041C0  6E08               	movwf	MSdelay@val^0,c
   506   0041C2  EC71  F021         	call	_MSdelay	;wreg free
   507   0041C6                     l1139:
   508                           
   509                           ;./LCD.h: 119:             return counter;
   510   0041C6  500F               	movf	LightScan@counter^0,w,c
   511   0041C8  EF23  F021         	goto	l94
   512   0041CC                     l93:
   513                           
   514                           ;./LCD.h: 122:         if (PORTAbits.RA1 == 1)
   515   0041CC  A2CA               	btfss	202,1,c	;volatile
   516   0041CE  EFEB  F020         	goto	u261
   517   0041D2  EFED  F020         	goto	u260
   518   0041D6                     u261:
   519   0041D6  EFF6  F020         	goto	l1151
   520   0041DA                     u260:
   521   0041DA                     
   522                           ;./LCD.h: 123:         {;./LCD.h: 124:             counter ++;
   523   0041DA  2A0F               	incf	LightScan@counter^0,f,c
   524   0041DC                     
   525                           ;./LCD.h: 125:             PORTCbits.RC7 = 1;
   526   0041DC  8ECC               	bsf	204,7,c	;volatile
   527   0041DE                     
   528                           ;./LCD.h: 126:             MSdelay(500);
   529   0041DE  0E01               	movlw	1
   530   0041E0  6E09               	movwf	(MSdelay@val+1)^0,c
   531   0041E2  0EF4               	movlw	244
   532   0041E4  6E08               	movwf	MSdelay@val^0,c
   533   0041E6  EC71  F021         	call	_MSdelay	;wreg free
   534   0041EA                     
   535                           ;./LCD.h: 127:             PORTCbits.RC7 = 0;
   536   0041EA  9ECC               	bcf	204,7,c	;volatile
   537   0041EC                     l1151:
   538                           
   539                           ;./LCD.h: 114:     while(counter < 4)
   540   0041EC  0E03               	movlw	3
   541   0041EE  640F               	cpfsgt	LightScan@counter^0,c
   542   0041F0  EFFC  F020         	goto	u271
   543   0041F4  EFFE  F020         	goto	u270
   544   0041F8                     u271:
   545   0041F8  EFD6  F020         	goto	l92
   546   0041FC                     u270:
   547   0041FC  EFE3  F020         	goto	l1139
   548   004200                     l99:
   549                           
   550                           ;./LCD.h: 135:     {;./LCD.h: 136:               if(PORTAbits.RA3 == 1){
   551   004200  A6CA               	btfss	202,3,c	;volatile
   552   004202  EF05  F021         	goto	u281
   553   004206  EF07  F021         	goto	u280
   554   00420A                     u281:
   555   00420A  EF09  F021         	goto	l100
   556   00420E                     u280:
   557   00420E  EFDD  F020         	goto	l1137
   558   004212                     l100:
   559                           
   560                           ;./LCD.h: 140:         if (PORTAbits.RA2 == 1)
   561   004212  A4CA               	btfss	202,2,c	;volatile
   562   004214  EF0E  F021         	goto	u291
   563   004218  EF10  F021         	goto	u290
   564   00421C                     u291:
   565   00421C  EF19  F021         	goto	l1167
   566   004220                     u290:
   567   004220                     
   568                           ;./LCD.h: 141:         {;./LCD.h: 142:             counter ++;
   569   004220  2A0F               	incf	LightScan@counter^0,f,c
   570   004222                     
   571                           ;./LCD.h: 143:             PORTCbits.RC7 = 1;
   572   004222  8ECC               	bsf	204,7,c	;volatile
   573   004224                     
   574                           ;./LCD.h: 144:             MSdelay(500);
   575   004224  0E01               	movlw	1
   576   004226  6E09               	movwf	(MSdelay@val+1)^0,c
   577   004228  0EF4               	movlw	244
   578   00422A  6E08               	movwf	MSdelay@val^0,c
   579   00422C  EC71  F021         	call	_MSdelay	;wreg free
   580   004230                     
   581                           ;./LCD.h: 145:             PORTCbits.RC7 = 0;
   582   004230  9ECC               	bcf	204,7,c	;volatile
   583   004232                     l1167:
   584                           
   585                           ;./LCD.h: 134:          while(counter < 4)
   586   004232  0E03               	movlw	3
   587   004234  640F               	cpfsgt	LightScan@counter^0,c
   588   004236  EF1F  F021         	goto	u301
   589   00423A  EF21  F021         	goto	u300
   590   00423E                     u301:
   591   00423E  EF00  F021         	goto	l99
   592   004242                     u300:
   593   004242  EFE3  F020         	goto	l1139
   594   004246                     l94:
   595   004246  0012               	return		;funcret
   596   004248                     __end_of_LightScan:
   597                           	callstack 0
   598                           
   599 ;; *************** function _LCD_Init *****************
   600 ;; Defined at:
   601 ;;		line 38 in file "./LCD.h"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 4
   622 ;; This function calls:
   623 ;;		_LCD_Command
   624 ;;		_MSdelay
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631   004446                     __ptext3:
   632                           	callstack 0
   633   004446                     _LCD_Init:
   634                           	callstack 26
   635   004446                     
   636                           ;./LCD.h: 40:     MSdelay(15);
   637   004446  0E00               	movlw	0
   638   004448  6E09               	movwf	(MSdelay@val+1)^0,c
   639   00444A  0E0F               	movlw	15
   640   00444C  6E08               	movwf	MSdelay@val^0,c
   641   00444E  EC71  F021         	call	_MSdelay	;wreg free
   642   004452                     
   643                           ;./LCD.h: 41:     TRISB = 0x00;
   644   004452  0E00               	movlw	0
   645   004454  6EC3               	movwf	195,c	;volatile
   646   004456                     
   647                           ;./LCD.h: 42:     TRISD = 0x00;
   648   004456  0E00               	movlw	0
   649   004458  6EC5               	movwf	197,c	;volatile
   650                           
   651                           ;./LCD.h: 43:     LCD_Command(0x01);
   652   00445A  0E01               	movlw	1
   653   00445C  EC58  F022         	call	_LCD_Command
   654                           
   655                           ;./LCD.h: 44:     LCD_Command(0x38);
   656   004460  0E38               	movlw	56
   657   004462  EC58  F022         	call	_LCD_Command
   658                           
   659                           ;./LCD.h: 45:     LCD_Command(0x0c);
   660   004466  0E0C               	movlw	12
   661   004468  EC58  F022         	call	_LCD_Command
   662                           
   663                           ;./LCD.h: 46:     LCD_Command(0x06);
   664   00446C  0E06               	movlw	6
   665   00446E  EC58  F022         	call	_LCD_Command
   666   004472  0012               	return		;funcret
   667   004474                     __end_of_LCD_Init:
   668                           	callstack 0
   669                           
   670 ;; *************** function _LCD_Clear *****************
   671 ;; Defined at:
   672 ;;		line 49 in file "./LCD.h"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 4
   693 ;; This function calls:
   694 ;;		_LCD_Command
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text4
   701   0044CE                     __ptext4:
   702                           	callstack 0
   703   0044CE                     _LCD_Clear:
   704                           	callstack 26
   705   0044CE                     
   706                           ;./LCD.h: 51:         LCD_Command(0x01);
   707   0044CE  0E01               	movlw	1
   708   0044D0  EC58  F022         	call	_LCD_Command
   709   0044D4  0012               	return		;funcret
   710   0044D6                     __end_of_LCD_Clear:
   711                           	callstack 0
   712                           
   713 ;; *************** function _Decision *****************
   714 ;; Defined at:
   715 ;;		line 155 in file "./LCD.h"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  input1          1    wreg     unsigned char 
   718 ;;  input2          1   19[COMRAM] unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  input1          1   20[COMRAM] unsigned char 
   721 ;;  timer           2   21[COMRAM] unsigned int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   731 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   735 ;;Total ram usage:        4 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 6
   738 ;; This function calls:
   739 ;;		_LCD_String_xy
   740 ;;		_MSdelay
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text5
   747   004248                     __ptext5:
   748                           	callstack 0
   749   004248                     _Decision:
   750                           	callstack 24
   751                           
   752                           ;incstack = 0
   753                           ;Decision@input1 stored from wreg
   754   004248  6E15               	movwf	Decision@input1^0,c
   755   00424A                     
   756                           ;./LCD.h: 156:     if (input1 == 2 && input2 == 4)
   757   00424A  0E02               	movlw	2
   758   00424C  1815               	xorwf	Decision@input1^0,w,c
   759   00424E  A4D8               	btfss	status,2,c
   760   004250  EF2C  F021         	goto	u311
   761   004254  EF2E  F021         	goto	u310
   762   004258                     u311:
   763   004258  EF49  F021         	goto	l1191
   764   00425C                     u310:
   765   00425C  0E04               	movlw	4
   766   00425E  1814               	xorwf	Decision@input2^0,w,c
   767   004260  A4D8               	btfss	status,2,c
   768   004262  EF35  F021         	goto	u321
   769   004266  EF37  F021         	goto	u320
   770   00426A                     u321:
   771   00426A  EF49  F021         	goto	l1191
   772   00426E                     u320:
   773   00426E                     
   774                           ;./LCD.h: 157:     {;./LCD.h: 158:         LCD_String_xy(2,0,"Correct!");
   775   00426E  0E00               	movlw	0
   776   004270  6E10               	movwf	LCD_String_xy@pos^0,c
   777   004272  0E01               	movlw	low STR_1
   778   004274  6E11               	movwf	LCD_String_xy@msg^0,c
   779   004276  0E02               	movlw	2
   780   004278  ECB5  F021         	call	_LCD_String_xy
   781   00427C                     
   782                           ;./LCD.h: 159:         PORTCbits.RC3 = 1;
   783   00427C  86CC               	bsf	204,3,c	;volatile
   784   00427E                     
   785                           ;./LCD.h: 160:         PORTCbits.RC2 = 0;
   786   00427E  94CC               	bcf	204,2,c	;volatile
   787   004280                     
   788                           ;./LCD.h: 161:         MSdelay(500);
   789   004280  0E01               	movlw	1
   790   004282  6E09               	movwf	(MSdelay@val+1)^0,c
   791   004284  0EF4               	movlw	244
   792   004286  6E08               	movwf	MSdelay@val^0,c
   793   004288  EC71  F021         	call	_MSdelay	;wreg free
   794   00428C                     
   795                           ;./LCD.h: 162:         PORTCbits.RC3 = 0;
   796   00428C  96CC               	bcf	204,3,c	;volatile
   797   00428E  EF70  F021         	goto	l106
   798   004292                     l1191:
   799                           
   800                           ;./LCD.h: 167:     {;./LCD.h: 168:         LCD_String_xy(2,0,"Wrong!");
   801   004292  0E00               	movlw	0
   802   004294  6E10               	movwf	LCD_String_xy@pos^0,c
   803   004296  0E0A               	movlw	low STR_2
   804   004298  6E11               	movwf	LCD_String_xy@msg^0,c
   805   00429A  0E02               	movlw	2
   806   00429C  ECB5  F021         	call	_LCD_String_xy
   807   0042A0                     
   808                           ;./LCD.h: 169:         unsigned int timer = 1000;
   809   0042A0  0E03               	movlw	3
   810   0042A2  6E17               	movwf	(Decision@timer+1)^0,c
   811   0042A4  0EE8               	movlw	232
   812   0042A6  6E16               	movwf	Decision@timer^0,c
   813                           
   814                           ;./LCD.h: 171:         while(timer >0)
   815   0042A8  EF67  F021         	goto	l1203
   816   0042AC                     l1195:
   817                           
   818                           ;./LCD.h: 172:          {;./LCD.h: 173:             MSdelay(1);
   819   0042AC  0E00               	movlw	0
   820   0042AE  6E09               	movwf	(MSdelay@val+1)^0,c
   821   0042B0  0E01               	movlw	1
   822   0042B2  6E08               	movwf	MSdelay@val^0,c
   823   0042B4  EC71  F021         	call	_MSdelay	;wreg free
   824   0042B8                     
   825                           ;./LCD.h: 174:             PORTCbits.RC4 = 1;
   826   0042B8  88CC               	bsf	204,4,c	;volatile
   827                           
   828                           ;./LCD.h: 175:             MSdelay(1);
   829   0042BA  0E00               	movlw	0
   830   0042BC  6E09               	movwf	(MSdelay@val+1)^0,c
   831   0042BE  0E01               	movlw	1
   832   0042C0  6E08               	movwf	MSdelay@val^0,c
   833   0042C2  EC71  F021         	call	_MSdelay	;wreg free
   834   0042C6                     
   835                           ;./LCD.h: 176:             PORTCbits.RC4 = 0;
   836   0042C6  98CC               	bcf	204,4,c	;volatile
   837   0042C8                     
   838                           ;./LCD.h: 177:             timer--;
   839   0042C8  0616               	decf	Decision@timer^0,f,c
   840   0042CA  A0D8               	btfss	status,0,c
   841   0042CC  0617               	decf	(Decision@timer+1)^0,f,c
   842   0042CE                     l1203:
   843                           
   844                           ;./LCD.h: 171:         while(timer >0)
   845   0042CE  5016               	movf	Decision@timer^0,w,c
   846   0042D0  1017               	iorwf	(Decision@timer+1)^0,w,c
   847   0042D2  A4D8               	btfss	status,2,c
   848   0042D4  EF6E  F021         	goto	u331
   849   0042D8  EF70  F021         	goto	u330
   850   0042DC                     u331:
   851   0042DC  EF56  F021         	goto	l1195
   852   0042E0                     u330:
   853   0042E0                     l106:
   854   0042E0  0012               	return		;funcret
   855   0042E2                     __end_of_Decision:
   856                           	callstack 0
   857                           
   858 ;; *************** function _LCD_String_xy *****************
   859 ;; Defined at:
   860 ;;		line 84 in file "./LCD.h"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  row             1    wreg     unsigned char 
   863 ;;  pos             1   15[COMRAM] unsigned char 
   864 ;;  msg             1   16[COMRAM] PTR const unsigned char 
   865 ;;		 -> STR_2(7), STR_1(9), 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  row             1   17[COMRAM] unsigned char 
   868 ;;  location        1   18[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;Total ram usage:        4 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 5
   885 ;; This function calls:
   886 ;;		_LCD_Command
   887 ;;		_LCD_String
   888 ;; This function is called by:
   889 ;;		_Decision
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text6
   894   00436A                     __ptext6:
   895                           	callstack 0
   896   00436A                     _LCD_String_xy:
   897                           	callstack 24
   898                           
   899                           ;incstack = 0
   900                           ;LCD_String_xy@row stored from wreg
   901   00436A  6E12               	movwf	LCD_String_xy@row^0,c
   902   00436C                     
   903                           ;./LCD.h: 87:     if(row<=1)
   904   00436C  0E02               	movlw	2
   905   00436E  6012               	cpfslt	LCD_String_xy@row^0,c
   906   004370  EFBC  F021         	goto	u231
   907   004374  EFBE  F021         	goto	u230
   908   004378                     u231:
   909   004378  EFC7  F021         	goto	l1117
   910   00437C                     u230:
   911   00437C                     
   912                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
   913   00437C  5010               	movf	LCD_String_xy@pos^0,w,c
   914   00437E  0B0F               	andlw	15
   915   004380  0980               	iorlw	128
   916   004382  6E13               	movwf	LCD_String_xy@location^0,c
   917   004384                     
   918                           ;./LCD.h: 90:         LCD_Command(location);
   919   004384  5013               	movf	LCD_String_xy@location^0,w,c
   920   004386  EC58  F022         	call	_LCD_Command
   921                           
   922                           ;./LCD.h: 91:     }
   923   00438A  EFCE  F021         	goto	l1121
   924   00438E                     l1117:
   925                           
   926                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
   927   00438E  5010               	movf	LCD_String_xy@pos^0,w,c
   928   004390  0B0F               	andlw	15
   929   004392  09C0               	iorlw	192
   930   004394  6E13               	movwf	LCD_String_xy@location^0,c
   931   004396                     
   932                           ;./LCD.h: 95:         LCD_Command(location);
   933   004396  5013               	movf	LCD_String_xy@location^0,w,c
   934   004398  EC58  F022         	call	_LCD_Command
   935   00439C                     l1121:
   936                           
   937                           ;./LCD.h: 97:     LCD_String(msg);
   938   00439C  C011  F00F         	movff	LCD_String_xy@msg,LCD_String@msg
   939   0043A0  EC0B  F022         	call	_LCD_String	;wreg free
   940   0043A4  0012               	return		;funcret
   941   0043A6                     __end_of_LCD_String_xy:
   942                           	callstack 0
   943                           
   944 ;; *************** function _LCD_String *****************
   945 ;; Defined at:
   946 ;;		line 75 in file "./LCD.h"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  msg             1   14[COMRAM] PTR const unsigned char 
   949 ;;		 -> STR_2(7), STR_1(9), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   961 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;Total ram usage:        1 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 4
   968 ;; This function calls:
   969 ;;		_LCD_Char
   970 ;; This function is called by:
   971 ;;		_LCD_String_xy
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text7
   976   004416                     __ptext7:
   977                           	callstack 0
   978   004416                     _LCD_String:
   979                           	callstack 24
   980   004416                     
   981                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
   982   004416  EF15  F022         	goto	l1107
   983   00441A                     l1103:
   984                           
   985                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
   986   00441A  0060  F03F  FFF6   	movff	LCD_String@msg,tblptrl
   987   004420                     	if	0	;There is only one active tblptr byte
   988   004420                     	endif
   989   004420                     	if	0	;tblptru may be non-zero
   990   004420                     	endif
   991   004420                     	if	0	;tblptru may be non-zero
   992   004420                     	endif
   993   004420  0008               	tblrd		*
   994   004422  50F5               	movf	tablat,w,c
   995   004424  EC49  F022         	call	_LCD_Char
   996   004428                     
   997                           ;./LCD.h: 80:       msg++;
   998   004428  2A0F               	incf	LCD_String@msg^0,f,c
   999   00442A                     l1107:
  1000                           
  1001                           ;./LCD.h: 77:     while((*msg)!=0)
  1002   00442A  0060  F03F  FFF6   	movff	LCD_String@msg,tblptrl
  1003   004430                     	if	0	;There is only one active tblptr byte
  1004   004430                     	endif
  1005   004430                     	if	0	;tblptru may be non-zero
  1006   004430                     	endif
  1007   004430                     	if	0	;tblptru may be non-zero
  1008   004430                     	endif
  1009   004430  0008               	tblrd		*
  1010   004432  50F5               	movf	tablat,w,c
  1011   004434  0900               	iorlw	0
  1012   004436  A4D8               	btfss	status,2,c
  1013   004438  EF20  F022         	goto	u221
  1014   00443C  EF22  F022         	goto	u220
  1015   004440                     u221:
  1016   004440  EF0D  F022         	goto	l1103
  1017   004444                     u220:
  1018   004444  0012               	return		;funcret
  1019   004446                     __end_of_LCD_String:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _LCD_Char *****************
  1023 ;; Defined at:
  1024 ;;		line 64 in file "./LCD.h"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  dat             1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  dat             1   13[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 3
  1045 ;; This function calls:
  1046 ;;		_MSdelay
  1047 ;; This function is called by:
  1048 ;;		_LCD_String
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text8
  1054   004492                     __ptext8:
  1055                           	callstack 0
  1056   004492                     _LCD_Char:
  1057                           	callstack 27
  1058                           
  1059                           ;incstack = 0
  1060                           ;LCD_Char@dat stored from wreg
  1061   004492  6E0E               	movwf	LCD_Char@dat^0,c
  1062   004494                     
  1063                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
  1064   004494  0060  F03B  FFBB   	movff	LCD_Char@dat,16315	;volatile
  1065   00449A                     
  1066                           ;./LCD.h: 67:     LATD0 = 1;
  1067   00449A  80BD               	bsf	16317,0,c	;volatile
  1068   00449C                     
  1069                           ;./LCD.h: 68:     LATD1=1;
  1070   00449C  82BD               	bsf	16317,1,c	;volatile
  1071   00449E                     
  1072                           ;./LCD.h: 69:     __nop();
  1073   00449E  0000               	nop	
  1074   0044A0                     
  1075                           ;./LCD.h: 70:     LATD1=0;
  1076   0044A0  92BD               	bcf	16317,1,c	;volatile
  1077   0044A2                     
  1078                           ;./LCD.h: 71:     MSdelay(1);
  1079   0044A2  0E00               	movlw	0
  1080   0044A4  6E09               	movwf	(MSdelay@val+1)^0,c
  1081   0044A6  0E01               	movlw	1
  1082   0044A8  6E08               	movwf	MSdelay@val^0,c
  1083   0044AA  EC71  F021         	call	_MSdelay	;wreg free
  1084   0044AE  0012               	return		;funcret
  1085   0044B0                     __end_of_LCD_Char:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _LCD_Command *****************
  1089 ;; Defined at:
  1090 ;;		line 54 in file "./LCD.h"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  cmd             1    wreg     unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  cmd             1   13[COMRAM] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1108 ;;Total ram usage:        1 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 3
  1111 ;; This function calls:
  1112 ;;		_MSdelay
  1113 ;; This function is called by:
  1114 ;;		_LCD_Init
  1115 ;;		_LCD_Clear
  1116 ;;		_LCD_String_xy
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text9
  1121   0044B0                     __ptext9:
  1122                           	callstack 0
  1123   0044B0                     _LCD_Command:
  1124                           	callstack 26
  1125                           
  1126                           ;incstack = 0
  1127                           ;LCD_Command@cmd stored from wreg
  1128   0044B0  6E0E               	movwf	LCD_Command@cmd^0,c
  1129   0044B2                     
  1130                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
  1131   0044B2  0060  F03B  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  1132   0044B8                     
  1133                           ;./LCD.h: 57:     LATD0 = 0;
  1134   0044B8  90BD               	bcf	16317,0,c	;volatile
  1135   0044BA                     
  1136                           ;./LCD.h: 58:     LATD1 = 1;
  1137   0044BA  82BD               	bsf	16317,1,c	;volatile
  1138   0044BC                     
  1139                           ;./LCD.h: 59:     __nop();
  1140   0044BC  0000               	nop	
  1141   0044BE                     
  1142                           ;./LCD.h: 60:     LATD1 = 0;
  1143   0044BE  92BD               	bcf	16317,1,c	;volatile
  1144   0044C0                     
  1145                           ;./LCD.h: 61:     MSdelay(3);
  1146   0044C0  0E00               	movlw	0
  1147   0044C2  6E09               	movwf	(MSdelay@val+1)^0,c
  1148   0044C4  0E03               	movlw	3
  1149   0044C6  6E08               	movwf	MSdelay@val^0,c
  1150   0044C8  EC71  F021         	call	_MSdelay	;wreg free
  1151   0044CC  0012               	return		;funcret
  1152   0044CE                     __end_of_LCD_Command:
  1153                           	callstack 0
  1154                           
  1155 ;; *************** function _MSdelay *****************
  1156 ;; Defined at:
  1157 ;;		line 101 in file "./LCD.h"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  val             2    7[COMRAM] unsigned int 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  j               2   11[COMRAM] unsigned int 
  1162 ;;  i               2    9[COMRAM] unsigned int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1173 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1176 ;;Total ram usage:        6 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 2
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_LCD_Init
  1183 ;;		_LCD_Command
  1184 ;;		_LCD_Char
  1185 ;;		_LightScan
  1186 ;;		_Decision
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text10
  1191   0042E2                     __ptext10:
  1192                           	callstack 0
  1193   0042E2                     _MSdelay:
  1194                           	callstack 27
  1195   0042E2                     
  1196                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1197   0042E2  0E00               	movlw	0
  1198   0042E4  6E0B               	movwf	(MSdelay@i+1)^0,c
  1199   0042E6  0E00               	movlw	0
  1200   0042E8  6E0A               	movwf	MSdelay@i^0,c
  1201   0042EA  EF8A  F021         	goto	l1075
  1202   0042EE                     l1063:
  1203                           
  1204                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1205   0042EE  0E00               	movlw	0
  1206   0042F0  6E0D               	movwf	(MSdelay@j+1)^0,c
  1207   0042F2  0E00               	movlw	0
  1208   0042F4  6E0C               	movwf	MSdelay@j^0,c
  1209   0042F6                     l1069:
  1210   0042F6  4A0C               	infsnz	MSdelay@j^0,f,c
  1211   0042F8  2A0D               	incf	(MSdelay@j+1)^0,f,c
  1212   0042FA  500D               	movf	(MSdelay@j+1)^0,w,c
  1213   0042FC  E109               	bnz	u200
  1214   0042FE  0EA5               	movlw	165
  1215   004300  5C0C               	subwf	MSdelay@j^0,w,c
  1216   004302  A0D8               	btfss	status,0,c
  1217   004304  EF86  F021         	goto	u201
  1218   004308  EF88  F021         	goto	u200
  1219   00430C                     u201:
  1220   00430C  EF7B  F021         	goto	l1069
  1221   004310                     u200:
  1222   004310  4A0A               	infsnz	MSdelay@i^0,f,c
  1223   004312  2A0B               	incf	(MSdelay@i+1)^0,f,c
  1224   004314                     l1075:
  1225   004314  5008               	movf	MSdelay@val^0,w,c
  1226   004316  5C0A               	subwf	MSdelay@i^0,w,c
  1227   004318  5009               	movf	(MSdelay@val+1)^0,w,c
  1228   00431A  580B               	subwfb	(MSdelay@i+1)^0,w,c
  1229   00431C  A0D8               	btfss	status,0,c
  1230   00431E  EF93  F021         	goto	u211
  1231   004322  EF95  F021         	goto	u210
  1232   004326                     u211:
  1233   004326  EF77  F021         	goto	l1063
  1234   00432A                     u210:
  1235   00432A  0012               	return		;funcret
  1236   00432C                     __end_of_MSdelay:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _INT0_ISR *****************
  1240 ;; Defined at:
  1241 ;;		line 198 in file "./LCD.h"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  timer           2    5[COMRAM] unsigned int 
  1246 ;;  i               1    4[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1257 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1260 ;;Total ram usage:        3 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 1
  1263 ;; This function calls:
  1264 ;;		_delay_us
  1265 ;; This function is called by:
  1266 ;;		Interrupt level 2
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text11
  1271   0040B4                     __ptext11:
  1272                           	callstack 0
  1273   0040B4                     _INT0_ISR:
  1274                           	callstack 24
  1275   0040B4                     
  1276                           ;./LCD.h: 200:     for(char i =0; i<3;i++)
  1277   0040B4  0E00               	movlw	0
  1278   0040B6  6E05               	movwf	INT0_ISR@i^0,c
  1279   0040B8                     i2l1217:
  1280                           
  1281                           ;./LCD.h: 201:     {;./LCD.h: 202:     unsigned int timer = 100;
  1282   0040B8  0E00               	movlw	0
  1283   0040BA  6E07               	movwf	(INT0_ISR@timer+1)^0,c
  1284   0040BC  0E64               	movlw	100
  1285   0040BE  6E06               	movwf	INT0_ISR@timer^0,c
  1286                           
  1287                           ;./LCD.h: 204:     while(timer >0)
  1288   0040C0  EF73  F020         	goto	i2l1227
  1289   0040C4                     i2l1219:
  1290                           
  1291                           ;./LCD.h: 205:     {;./LCD.h: 206:     delay_us(100);
  1292   0040C4  0E00               	movlw	0
  1293   0040C6  6E02               	movwf	(delay_us@us+1)^0,c
  1294   0040C8  0E64               	movlw	100
  1295   0040CA  6E01               	movwf	delay_us@us^0,c
  1296   0040CC  ECEF  F021         	call	_delay_us	;wreg free
  1297   0040D0                     
  1298                           ;./LCD.h: 207:     PORTCbits.RC4 = 1;
  1299   0040D0  88CC               	bsf	204,4,c	;volatile
  1300                           
  1301                           ;./LCD.h: 208:     delay_us(100);
  1302   0040D2  0E00               	movlw	0
  1303   0040D4  6E02               	movwf	(delay_us@us+1)^0,c
  1304   0040D6  0E64               	movlw	100
  1305   0040D8  6E01               	movwf	delay_us@us^0,c
  1306   0040DA  ECEF  F021         	call	_delay_us	;wreg free
  1307   0040DE                     
  1308                           ;./LCD.h: 209:     PORTCbits.RC4 = 0;
  1309   0040DE  98CC               	bcf	204,4,c	;volatile
  1310   0040E0                     
  1311                           ;./LCD.h: 210:     timer--;
  1312   0040E0  0606               	decf	INT0_ISR@timer^0,f,c
  1313   0040E2  A0D8               	btfss	status,0,c
  1314   0040E4  0607               	decf	(INT0_ISR@timer+1)^0,f,c
  1315   0040E6                     i2l1227:
  1316                           
  1317                           ;./LCD.h: 204:     while(timer >0)
  1318   0040E6  5006               	movf	INT0_ISR@timer^0,w,c
  1319   0040E8  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
  1320   0040EA  A4D8               	btfss	status,2,c
  1321   0040EC  EF7A  F020         	goto	i2u35_41
  1322   0040F0  EF7C  F020         	goto	i2u35_40
  1323   0040F4                     i2u35_41:
  1324   0040F4  EF62  F020         	goto	i2l1219
  1325   0040F8                     i2u35_40:
  1326   0040F8                     
  1327                           ;./LCD.h: 213:     timer = 200;
  1328   0040F8  0E00               	movlw	0
  1329   0040FA  6E07               	movwf	(INT0_ISR@timer+1)^0,c
  1330   0040FC  0EC8               	movlw	200
  1331   0040FE  6E06               	movwf	INT0_ISR@timer^0,c
  1332                           
  1333                           ;./LCD.h: 215:     while(timer >0)
  1334   004100  EF93  F020         	goto	i2l1239
  1335   004104                     i2l1231:
  1336                           
  1337                           ;./LCD.h: 216:     {;./LCD.h: 217:     delay_us(50);
  1338   004104  0E00               	movlw	0
  1339   004106  6E02               	movwf	(delay_us@us+1)^0,c
  1340   004108  0E32               	movlw	50
  1341   00410A  6E01               	movwf	delay_us@us^0,c
  1342   00410C  ECEF  F021         	call	_delay_us	;wreg free
  1343   004110                     
  1344                           ;./LCD.h: 218:     PORTCbits.RC4 = 1;
  1345   004110  88CC               	bsf	204,4,c	;volatile
  1346                           
  1347                           ;./LCD.h: 219:     delay_us(50);
  1348   004112  0E00               	movlw	0
  1349   004114  6E02               	movwf	(delay_us@us+1)^0,c
  1350   004116  0E32               	movlw	50
  1351   004118  6E01               	movwf	delay_us@us^0,c
  1352   00411A  ECEF  F021         	call	_delay_us	;wreg free
  1353   00411E                     
  1354                           ;./LCD.h: 220:     PORTCbits.RC4 = 0;
  1355   00411E  98CC               	bcf	204,4,c	;volatile
  1356   004120                     
  1357                           ;./LCD.h: 221:     timer--;
  1358   004120  0606               	decf	INT0_ISR@timer^0,f,c
  1359   004122  A0D8               	btfss	status,0,c
  1360   004124  0607               	decf	(INT0_ISR@timer+1)^0,f,c
  1361   004126                     i2l1239:
  1362                           
  1363                           ;./LCD.h: 215:     while(timer >0)
  1364   004126  5006               	movf	INT0_ISR@timer^0,w,c
  1365   004128  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
  1366   00412A  A4D8               	btfss	status,2,c
  1367   00412C  EF9A  F020         	goto	i2u36_41
  1368   004130  EF9C  F020         	goto	i2u36_40
  1369   004134                     i2u36_41:
  1370   004134  EF82  F020         	goto	i2l1231
  1371   004138                     i2u36_40:
  1372   004138                     
  1373                           ;./LCD.h: 224:     timer = 400;
  1374   004138  0E01               	movlw	1
  1375   00413A  6E07               	movwf	(INT0_ISR@timer+1)^0,c
  1376   00413C  0E90               	movlw	144
  1377   00413E  6E06               	movwf	INT0_ISR@timer^0,c
  1378                           
  1379                           ;./LCD.h: 226:     while(timer >0)
  1380   004140  EFB3  F020         	goto	i2l1251
  1381   004144                     i2l1243:
  1382                           
  1383                           ;./LCD.h: 227:     {;./LCD.h: 228:     delay_us(25);
  1384   004144  0E00               	movlw	0
  1385   004146  6E02               	movwf	(delay_us@us+1)^0,c
  1386   004148  0E19               	movlw	25
  1387   00414A  6E01               	movwf	delay_us@us^0,c
  1388   00414C  ECEF  F021         	call	_delay_us	;wreg free
  1389   004150                     
  1390                           ;./LCD.h: 229:     PORTCbits.RC4 = 1;
  1391   004150  88CC               	bsf	204,4,c	;volatile
  1392                           
  1393                           ;./LCD.h: 230:     delay_us(25);
  1394   004152  0E00               	movlw	0
  1395   004154  6E02               	movwf	(delay_us@us+1)^0,c
  1396   004156  0E19               	movlw	25
  1397   004158  6E01               	movwf	delay_us@us^0,c
  1398   00415A  ECEF  F021         	call	_delay_us	;wreg free
  1399   00415E                     
  1400                           ;./LCD.h: 231:     PORTCbits.RC4 = 0;
  1401   00415E  98CC               	bcf	204,4,c	;volatile
  1402   004160                     
  1403                           ;./LCD.h: 232:     timer--;
  1404   004160  0606               	decf	INT0_ISR@timer^0,f,c
  1405   004162  A0D8               	btfss	status,0,c
  1406   004164  0607               	decf	(INT0_ISR@timer+1)^0,f,c
  1407   004166                     i2l1251:
  1408                           
  1409                           ;./LCD.h: 226:     while(timer >0)
  1410   004166  5006               	movf	INT0_ISR@timer^0,w,c
  1411   004168  1007               	iorwf	(INT0_ISR@timer+1)^0,w,c
  1412   00416A  A4D8               	btfss	status,2,c
  1413   00416C  EFBA  F020         	goto	i2u37_41
  1414   004170  EFBC  F020         	goto	i2u37_40
  1415   004174                     i2u37_41:
  1416   004174  EFA2  F020         	goto	i2l1243
  1417   004178                     i2u37_40:
  1418   004178                     
  1419                           ;./LCD.h: 234:     }
  1420   004178  2A05               	incf	INT0_ISR@i^0,f,c
  1421   00417A  0E02               	movlw	2
  1422   00417C  6405               	cpfsgt	INT0_ISR@i^0,c
  1423   00417E  EFC3  F020         	goto	i2u38_41
  1424   004182  EFC5  F020         	goto	i2u38_40
  1425   004186                     i2u38_41:
  1426   004186  EF5C  F020         	goto	i2l1217
  1427   00418A                     i2u38_40:
  1428   00418A                     
  1429                           ;./LCD.h: 236:     PORTCbits.RC4 = 1;
  1430   00418A  88CC               	bsf	204,4,c	;volatile
  1431                           
  1432                           ;./LCD.h: 237:     PIR1bits.INT0IF = 0;
  1433   00418C  0139               	movlb	57	; () banked
  1434   00418E  91A1               	bcf	161,0,b	;volatile
  1435   004190                     
  1436                           ; BSR set to: 57
  1437   004190  0011               	retfie		f
  1438   004192                     __end_of_INT0_ISR:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _delay_us *****************
  1442 ;; Defined at:
  1443 ;;		line 183 in file "./LCD.h"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  us              2    0[COMRAM] unsigned int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  i               2    2[COMRAM] unsigned int 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1461 ;;Total ram usage:        4 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_INT0_ISR
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text12
  1471   0043DE                     __ptext12:
  1472                           	callstack 0
  1473   0043DE                     _delay_us:
  1474                           	callstack 24
  1475   0043DE                     
  1476                           ;./LCD.h: 185:     for (unsigned int i = 0; i < us; i++) {
  1477   0043DE  0E00               	movlw	0
  1478   0043E0  6E04               	movwf	(delay_us@i+1)^0,c
  1479   0043E2  0E00               	movlw	0
  1480   0043E4  6E03               	movwf	delay_us@i^0,c
  1481   0043E6  EFFF  F021         	goto	i2l1209
  1482   0043EA                     i2l114:
  1483   0043EA  0000               	nop		;# 
  1484   0043EC  0000               	nop		;# 
  1485   0043EE  0000               	nop		;# 
  1486   0043F0  0000               	nop		;# 
  1487   0043F2  0000               	nop		;# 
  1488   0043F4  0000               	nop		;# 
  1489   0043F6  0000               	nop		;# 
  1490   0043F8  0000               	nop		;# 
  1491   0043FA                     
  1492                           ;./LCD.h: 194:     }
  1493   0043FA  4A03               	infsnz	delay_us@i^0,f,c
  1494   0043FC  2A04               	incf	(delay_us@i+1)^0,f,c
  1495   0043FE                     i2l1209:
  1496   0043FE  5001               	movf	delay_us@us^0,w,c
  1497   004400  5C03               	subwf	delay_us@i^0,w,c
  1498   004402  5002               	movf	(delay_us@us+1)^0,w,c
  1499   004404  5804               	subwfb	(delay_us@i+1)^0,w,c
  1500   004406  A0D8               	btfss	status,0,c
  1501   004408  EF08  F022         	goto	i2u34_41
  1502   00440C  EF0A  F022         	goto	i2u34_40
  1503   004410                     i2u34_41:
  1504   004410  EFF5  F021         	goto	i2l114
  1505   004414                     i2u34_40:
  1506   004414  0012               	return		;funcret
  1507   004416                     __end_of_delay_us:
  1508                           	callstack 0
  1509                           
  1510                           ;
  1511                           ; H/W Interrupt Vector Table @ 0x4008
  1512                           ;
  1513                           
  1514                           	psect	ivt0x4008
  1515   004008                     __pivt0x4008:
  1516                           	callstack 0
  1517   004008                     ivt0x4008_base:
  1518                           	callstack 0
  1519                           
  1520                           ; Vector 0 : SWINT
  1521   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1522                           
  1523                           ; Vector 1 : HLVD
  1524   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1525                           
  1526                           ; Vector 2 : OSF
  1527   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1528                           
  1529                           ; Vector 3 : CSW
  1530   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1531                           
  1532                           ; Vector 4 : NVM
  1533   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1534                           
  1535                           ; Vector 5 : SCAN
  1536   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1537                           
  1538                           ; Vector 6 : CRC
  1539   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1540                           
  1541                           ; Vector 7 : IOC
  1542   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1543                           
  1544                           ; Vector 8 : INT0
  1545   004018  102D               	dw	_INT0_ISR shr (0+2)
  1546                           
  1547                           ; Vector 9 : ZCD
  1548   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1549                           
  1550                           ; Vector 10 : AD
  1551   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1552                           
  1553                           ; Vector 11 : ADT
  1554   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1555                           
  1556                           ; Vector 12 : CMP1
  1557   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1558                           
  1559                           ; Vector 13 : SMT1
  1560   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1561                           
  1562                           ; Vector 14 : SMT1PRA
  1563   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1564                           
  1565                           ; Vector 15 : SMT1PRW
  1566   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1567                           
  1568                           ; Vector 16 : DMA1SCNT
  1569   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1570                           
  1571                           ; Vector 17 : DMA1DCNT
  1572   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1573                           
  1574                           ; Vector 18 : DMA1OR
  1575   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1576                           
  1577                           ; Vector 19 : DMA1A
  1578   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1579                           
  1580                           ; Vector 20 : SPI1RX
  1581   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1582                           
  1583                           ; Vector 21 : SPI1TX
  1584   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1585                           
  1586                           ; Vector 22 : SPI1
  1587   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1588                           
  1589                           ; Vector 23 : I2C1RX
  1590   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1591                           
  1592                           ; Vector 24 : I2C1TX
  1593   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1594                           
  1595                           ; Vector 25 : I2C1
  1596   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1597                           
  1598                           ; Vector 26 : I2C1E
  1599   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1600                           
  1601                           ; Vector 27 : U1RX
  1602   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1603                           
  1604                           ; Vector 28 : U1TX
  1605   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1606                           
  1607                           ; Vector 29 : U1E
  1608   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1609                           
  1610                           ; Vector 30 : U1
  1611   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1612                           
  1613                           ; Vector 31 : TMR0
  1614   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1615                           
  1616                           ; Vector 32 : TMR1
  1617   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1618                           
  1619                           ; Vector 33 : TMR1G
  1620   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1621                           
  1622                           ; Vector 34 : TMR2
  1623   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1624                           
  1625                           ; Vector 35 : CCP1
  1626   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1627                           
  1628                           ; Vector 36 : Undefined
  1629   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1630                           
  1631                           ; Vector 37 : NCO1
  1632   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1633                           
  1634                           ; Vector 38 : CWG1
  1635   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1636                           
  1637                           ; Vector 39 : CLC1
  1638   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1639                           
  1640                           ; Vector 40 : INT1
  1641   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1642                           
  1643                           ; Vector 41 : CMP2
  1644   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1645                           
  1646                           ; Vector 42 : DMA2SCNT
  1647   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1648                           
  1649                           ; Vector 43 : DMA2DCNT
  1650   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1651                           
  1652                           ; Vector 44 : DMA2OR
  1653   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1654                           
  1655                           ; Vector 45 : DMA2A
  1656   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1657                           
  1658                           ; Vector 46 : I2C2RX
  1659   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1660                           
  1661                           ; Vector 47 : I2C2TX
  1662   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1663                           
  1664                           ; Vector 48 : I2C2
  1665   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1666                           
  1667                           ; Vector 49 : I2C2E
  1668   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1669                           
  1670                           ; Vector 50 : U2RX
  1671   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1672                           
  1673                           ; Vector 51 : U2TX
  1674   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1675                           
  1676                           ; Vector 52 : U2E
  1677   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1678                           
  1679                           ; Vector 53 : U2
  1680   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1681                           
  1682                           ; Vector 54 : TMR3
  1683   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1684                           
  1685                           ; Vector 55 : TMR3G
  1686   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1687                           
  1688                           ; Vector 56 : TMR4
  1689   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1690                           
  1691                           ; Vector 57 : CCP2
  1692   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1693                           
  1694                           ; Vector 58 : Undefined
  1695   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1696                           
  1697                           ; Vector 59 : CWG2
  1698   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1699                           
  1700                           ; Vector 60 : CLC2
  1701   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1702                           
  1703                           ; Vector 61 : INT2
  1704   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1705                           
  1706                           ; Vector 62 : Undefined
  1707   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1708                           
  1709                           ; Vector 63 : Undefined
  1710   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1711                           
  1712                           ; Vector 64 : Undefined
  1713   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1714                           
  1715                           ; Vector 65 : Undefined
  1716   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1717                           
  1718                           ; Vector 66 : Undefined
  1719   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1720                           
  1721                           ; Vector 67 : Undefined
  1722   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1723                           
  1724                           ; Vector 68 : Undefined
  1725   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1726                           
  1727                           ; Vector 69 : Undefined
  1728   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1729                           
  1730                           ; Vector 70 : TMR5
  1731   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1732                           
  1733                           ; Vector 71 : TMR5G
  1734   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1735                           
  1736                           ; Vector 72 : TMR6
  1737   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1738                           
  1739                           ; Vector 73 : CCP3
  1740   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1741                           
  1742                           ; Vector 74 : CWG3
  1743   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1744                           
  1745                           ; Vector 75 : CLC3
  1746   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1747                           
  1748                           ; Vector 76 : Undefined
  1749   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1750                           
  1751                           ; Vector 77 : Undefined
  1752   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1753                           
  1754                           ; Vector 78 : Undefined
  1755   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1756                           
  1757                           ; Vector 79 : Undefined
  1758   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1759                           
  1760                           ; Vector 80 : CCP4
  1761   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1762                           
  1763                           ; Vector 81 : CLC4
  1764   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1765   0040AC                     ivt0x4008_undefint:
  1766                           	callstack 0
  1767   0040AC  00FF               	reset	
  1768                           
  1769                           	psect	rparam
  1770   000000                     
  1771                           	psect	config
  1772                           
  1773                           ;Config register CONFIG1L @ 0x300000
  1774                           ;	External Oscillator Selection
  1775                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1776                           ;	Reset Oscillator Selection
  1777                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1778   300000                     	org	3145728
  1779   300000  F8                 	db	248
  1780                           
  1781                           ;Config register CONFIG1H @ 0x300001
  1782                           ;	Clock out Enable bit
  1783                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1784                           ;	PRLOCKED One-Way Set Enable bit
  1785                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1786                           ;	Clock Switch Enable bit
  1787                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1788                           ;	Fail-Safe Clock Monitor Enable bit
  1789                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1790   300001                     	org	3145729
  1791   300001  FF                 	db	255
  1792                           
  1793                           ;Config register CONFIG2L @ 0x300002
  1794                           ;	MCLR Enable bit
  1795                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1796                           ;	Power-up timer selection bits
  1797                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1798                           ;	Multi-vector enable bit
  1799                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1800                           ;	IVTLOCK bit One-way set enable bit
  1801                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1802                           ;	Low Power BOR Enable bit
  1803                           ;	LPBOREN = OFF, ULPBOR disabled
  1804                           ;	Brown-out Reset Enable bits
  1805                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1806   300002                     	org	3145730
  1807   300002  FF                 	db	255
  1808                           
  1809                           ;Config register CONFIG2H @ 0x300003
  1810                           ;	Brown-out Reset Voltage Selection bits
  1811                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1812                           ;	ZCD Disable bit
  1813                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1814                           ;	PPSLOCK bit One-Way Set Enable bit
  1815                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1816                           ;	Stack Full/Underflow Reset Enable bit
  1817                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1818                           ;	Debugger Enable bit
  1819                           ;	DEBUG = OFF, Background debugger disabled
  1820                           ;	Extended Instruction Set Enable bit
  1821                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1822   300003                     	org	3145731
  1823   300003  FF                 	db	255
  1824                           
  1825                           ;Config register CONFIG3L @ 0x300004
  1826                           ;	WDT Period selection bits
  1827                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1828                           ;	WDT operating mode
  1829                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1830   300004                     	org	3145732
  1831   300004  9F                 	db	159
  1832                           
  1833                           ;Config register CONFIG3H @ 0x300005
  1834                           ;	WDT Window Select bits
  1835                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1836                           ;	WDT input clock selector
  1837                           ;	WDTCCS = SC, Software Control
  1838   300005                     	org	3145733
  1839   300005  FF                 	db	255
  1840                           
  1841                           ;Config register CONFIG4L @ 0x300006
  1842                           ;	Boot Block Size selection bits
  1843                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1844                           ;	Boot Block enable bit
  1845                           ;	BBEN = OFF, Boot block disabled
  1846                           ;	Storage Area Flash enable bit
  1847                           ;	SAFEN = OFF, SAF disabled
  1848                           ;	Application Block write protection bit
  1849                           ;	WRTAPP = OFF, Application Block not write protected
  1850   300006                     	org	3145734
  1851   300006  FF                 	db	255
  1852                           
  1853                           ;Config register CONFIG4H @ 0x300007
  1854                           ;	Boot Block Write Protection bit
  1855                           ;	WRTB = OFF, Boot Block not write-protected
  1856                           ;	Configuration Register Write Protection bit
  1857                           ;	WRTC = OFF, Configuration registers not write-protected
  1858                           ;	Data EEPROM Write Protection bit
  1859                           ;	WRTD = OFF, Data EEPROM not write-protected
  1860                           ;	SAF Write protection bit
  1861                           ;	WRTSAF = OFF, SAF not Write Protected
  1862                           ;	Low Voltage Programming Enable bit
  1863                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1864   300007                     	org	3145735
  1865   300007  FF                 	db	255
  1866                           
  1867                           ;Config register CONFIG5L @ 0x300008
  1868                           ;	PFM and Data EEPROM Code Protection bit
  1869                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1870   300008                     	org	3145736
  1871   300008  FF                 	db	255
  1872                           
  1873                           ;Config register CONFIG5H @ 0x300009
  1874                           ;	unspecified, using default values
  1875   300009                     	org	3145737
  1876   300009  FF                 	db	255
  1877                           tosu	equ	0x3FFF
  1878                           tosh	equ	0x3FFE
  1879                           tosl	equ	0x3FFD
  1880                           stkptr	equ	0x3FFC
  1881                           pclatu	equ	0x3FFB
  1882                           pclath	equ	0x3FFA
  1883                           pcl	equ	0x3FF9
  1884                           tblptru	equ	0x3FF8
  1885                           tblptrh	equ	0x3FF7
  1886                           tblptrl	equ	0x3FF6
  1887                           tablat	equ	0x3FF5
  1888                           prodh	equ	0x3FF4
  1889                           prodl	equ	0x3FF3
  1890                           indf0	equ	0x3FEF
  1891                           postinc0	equ	0x3FEE
  1892                           postdec0	equ	0x3FED
  1893                           preinc0	equ	0x3FEC
  1894                           plusw0	equ	0x3FEB
  1895                           fsr0h	equ	0x3FEA
  1896                           fsr0l	equ	0x3FE9
  1897                           wreg	equ	0x3FE8
  1898                           indf1	equ	0x3FE7
  1899                           postinc1	equ	0x3FE6
  1900                           postdec1	equ	0x3FE5
  1901                           preinc1	equ	0x3FE4
  1902                           plusw1	equ	0x3FE3
  1903                           fsr1h	equ	0x3FE2
  1904                           fsr1l	equ	0x3FE1
  1905                           bsr	equ	0x3FE0
  1906                           indf2	equ	0x3FDF
  1907                           postinc2	equ	0x3FDE
  1908                           postdec2	equ	0x3FDD
  1909                           preinc2	equ	0x3FDC
  1910                           plusw2	equ	0x3FDB
  1911                           fsr2h	equ	0x3FDA
  1912                           fsr2l	equ	0x3FD9
  1913                           status	equ	0x3FD8

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[7]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Decision
    _LightScan->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _Decision->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->_delay_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7765
                           _Decision
                           _LCD_Char
                          _LCD_Clear
                           _LCD_Init
                          _LightScan
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LightScan                                            2     2      0     987
                                             13 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1726
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     874
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Decision                                             4     3      1    3304
                                             19 COMRAM     4     3      1
                      _LCD_String_xy
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2    2308
                                             15 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           1     0      1     995
                                             14 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             1     1      0     874
                                             13 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     874
                                             13 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     852
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             3     3      0     620
                                              4 COMRAM     3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (7) _delay_us                                             4     2      2     502
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decision
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LightScan
     _MSdelay
   _initialize

 _INT0_ISR (ROOT)
   _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      82        0.0%
BITBIGSFRllhhhh    4FA      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      81        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhl       9E      0       0      78        0.0%
BITBIGSFRllhhhl     5F      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      19       1       26.3%
BITBIGSFRhhhhh      2D      0       0      69        0.0%
BITBIGSFRllhhl      1E      0       0      77        0.0%
BITBIGSFRlllhh       F      0       0      79        0.0%
BITBIGSFRlllhl       F      0       0      80        0.0%
BITBIGSFRhhhhl       5      0       0      70        0.0%
BITBIGSFRlhh         4      0       0      73        0.0%
BITBIGSFRhhl         4      0       0      72        0.0%
BITBIGSFRhhhl        1      0       0      71        0.0%
BITBIGSFRlhl         1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      14        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 22 10:45:33 2024

           ?_LCD_Command 0001                       l62 44D4                       l65 44CC  
                     l74 4444                       l59 4472                       l68 44AE  
                     l92 41AC                       l93 41CC                       l94 4246  
                     l87 432A                       l79 43A4                       l99 4200  
            ?_LCD_String 000F                      l100 4212                      l106 42E0  
                    l135 43DC                      l981 43C2                      l973 43A6  
                    l991 43D2                      l983 43CA                      l975 43A8  
                    l993 43D4                      l985 43CC                      l977 43BE  
                    l995 43D8                      l987 43CE                      l979 43C0  
                    l997 43DA                      l989 43D0                      u200 4310  
                    u201 430C                      u210 432A                      u211 4326  
                    u220 4444                      u300 4242                      u221 4440  
                    u301 423E                      u230 437C                      u310 425C  
                    u231 4378                      u311 4258                      u320 426E  
                    u240 41A8                      u321 426A                      u241 41A4  
                    u330 42E0                      u250 41BA                      u331 42DC  
                    u251 41B6                      u260 41DA                      u261 41D6  
                    u270 41FC                      u271 41F8                      u280 420E  
                    u281 420A                      u290 4220                      u291 421C  
          Decision@timer 0016              LCD_Char@dat 000E                     l1101 4416  
                   l1103 441A                     l1111 436C                     l1105 4428  
                   l1121 439C                     l1113 437C                     l1201 42C8  
                   l1107 442A                     l1115 4384                     l1203 42CE  
                   l1123 4446                     l1131 4194                     l1061 42E2  
                   l1117 438E                     l1109 436C                     l1125 4452  
                   l1133 4198                     l1071 42FA                     l1063 42EE  
                   l1119 4396                     l1127 4456                     l1143 41DA  
                   l1151 41EC                     l1073 4310                     l1081 449C  
                   l1129 44CE                     l1161 4222                     l1145 41DC  
                   l1137 41BA                     l1075 4314                     l1091 44B8  
                   l1083 449E                     l1163 4224                     l1147 41DE  
                   l1139 41C6                     l1069 42F6                     l1093 44BA  
                   l1085 44A0                     l1077 4494                     l1181 427E  
                   l1173 424A                     l1165 4230                     l1149 41EA  
                   l1261 4334                     l1095 44BC                     l1087 44A2  
                   l1079 449A                     l1183 4280                     l1175 425C  
                   l1191 4292                     l1159 4220                     l1167 4232  
                   l1271 4358                     l1263 4338                     l1097 44BE  
                   l1089 44B2                     l1193 42A0                     l1185 428C  
                   l1177 426E                     l1265 4340                     l1257 432C  
                   l1099 44C0                     l1195 42AC                     l1179 427C  
                   l1267 4348                     l1259 4330                     l1197 42B8  
                   l1269 4350                     l1199 42C6                     STR_1 2001  
                   STR_2 200A                     _LATB 3FBB                     _WPUA 3A41  
                   _main 432C                     start 40AE          __end_of_MSdelay 432C  
          _LCD_String_xy 436A             ___param_bank 0000           Decision@input1 0015  
         Decision@input2 0014         __end_of_LCD_Char 44B0         __end_of_LCD_Init 4474  
       __end_of_INT0_ISR 4192                    ?_main 0001                    _LATD0 1FDE8  
                  _LATD1 1FDE9                    i2l114 43EA                    i2l122 418A  
                  i2l116 4414                    i2l132 4190                    _PORTA 3FCA  
                  _PORTC 3FCC                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISC 3FC4                    _TRISD 3FC5                    _input 0019  
                  tablat 3FF5                    status 3FD8         __end_of_Decision 42E2  
         ?_LCD_String_xy 0010          __initialization 4474             __end_of_main 436A  
                 ??_main 0018        __end_of_LCD_Clear 44D6            __activetblptr 0001  
                 _ANSELA 3A40                   _ANSELC 3A60         LightScan@counter 000F  
       LCD_String_xy@msg 0011         LCD_String_xy@pos 0010         LCD_String_xy@row 0012  
                 i2l1211 40B4                   i2l1205 43DE                   i2l1221 40D0  
              ??_MSdelay 000A                   i2l1207 43FA                   i2l1231 4104  
                 i2l1223 40DE                   i2l1209 43FE                   i2l1241 4138  
                 i2l1233 4110                   i2l1225 40E0                   i2l1217 40B8  
                 i2l1243 4144                   i2l1251 4166                   i2l1235 411E  
                 i2l1219 40C4                   i2l1227 40E6                   i2l1253 4178  
                 i2l1245 4150                   i2l1237 4120                   i2l1229 40F8  
                 i2l1255 417A                   i2l1247 415E                   i2l1239 4126  
                 i2l1249 4160         __end_of_delay_us 4416                   _input2 0018  
                 isa$std 0001             __mediumconst 0000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 4484                ?_LCD_Init 0001  
              ?_INT0_ISR 0001          ??_LCD_String_xy 0012            ___rparam_used 0001  
              INT0_ISR@i 0005           __pcstackCOMRAM 0001             ??_LCD_String 0010  
      __end_of_LightScan 4248            INT0_ISR@timer 0006                ?_Decision 0014  
             ??_LCD_Char 000E               ??_LCD_Init 000F               ??_INT0_ISR 0005  
     __end_of_LCD_String 4446                  IVTBASEH 3FD6                  IVTBASEL 3FD5  
                IVTBASEU 3FD7                  _INT0PPS 3AC0               ??_Decision 0015  
              ?_delay_us 0001                  i2u34_40 4414                  i2u34_41 4410  
                i2u35_40 40F8                  i2u35_41 40F4                  i2u36_40 4138  
                i2u36_41 4134                  i2u37_40 4178                  i2u37_41 4174  
                i2u38_40 418A                  i2u38_41 4186                  _MSdelay 42E2  
          LCD_String@msg 000F                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000                  __pcinit 4474                  __ramtop 2000  
             _initialize 43A6            ivt0x4008_base 4008                  __ptext0 432C  
                __ptext1 43A6                  __ptext2 4192                  __ptext3 4446  
                __ptext4 44CE                  __ptext5 4248                  __ptext6 436A  
                __ptext7 4416                  __ptext8 4492                  __ptext9 44B0  
             ??_delay_us 0003                _LCD_Clear 44CE     end_of_initialization 4484  
             delay_us@us 0001           LCD_Command@cmd 000E                _PORTAbits 3FCA  
              _PORTCbits 3FCC               ?_LCD_Clear 0001            ??_LCD_Command 000E  
            ?_initialize 0001      start_initialization 4474                _LightScan 4192  
  __end_of_LCD_String_xy 43A6      __end_of_LCD_Command 44CE              __pbssCOMRAM 0018  
             ?_LightScan 0001              ??_LCD_Clear 000F                 ?_MSdelay 0008  
            __pivt0x4008 4008              __smallconst 2000    LCD_String_xy@location 0013  
               MSdelay@i 000A                 MSdelay@j 000C                 _LCD_Char 4492  
               _LCD_Init 4446                 _INT0_ISR 40B4                delay_us@i 0003  
               _IPR1bits 3981                 _PIE1bits 3991                 _PIR1bits 39A1  
     LightScan@pinNumber 000E        ivt0x4008_undefint 40AC              _LCD_Command 44B0  
               _Decision 4248              ??_LightScan 000E              _INTCON0bits 3FD2  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
           ??_initialize 0008                 _delay_us 43DE                 __ptext10 42E2  
               __ptext11 40B4                 __ptext12 43DE       __end_of_initialize 43DE  
             MSdelay@val 0008                 isa$xinst 0000               _LCD_String 4416  
               intlevel2 0000  
