

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 20:31:01 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=4,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F47K42 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     _TRISC	set	16324
    66   000000                     _TRISD	set	16325
    67   000000                     _PORTC	set	16332
    68   000000                     _PORTA	set	16330
    69   000000                     _LATD1	set	130537
    70   000000                     _IPR1bits	set	14721
    71   000000                     _PIR1bits	set	14753
    72   000000                     _LATB	set	16315
    73   000000                     _TRISB	set	16323
    74   000000                     _PORTAbits	set	16330
    75   000000                     _LATD0	set	130536
    76   000000                     _TRISA	set	16322
    77   000000                     _PORTCbits	set	16332
    78   000000                     _INTCON0bits	set	16338
    79   000000                     _ANSELA	set	14912
    80   000000                     _WPUA	set	14913
    81   000000                     _ANSELC	set	14944
    82   000000                     _INT0PPS	set	15040
    83   000000                     _PIE1bits	set	14737
    84                           
    85                           	psect	smallconst
    86   002000                     __psmallconst:
    87                           	callstack 0
    88   002000  00                 	db	0
    89   002001                     STR_2:
    90   002001  57                 	db	87	;'W'
    91   002002  72                 	db	114	;'r'
    92   002003  6F                 	db	111	;'o'
    93   002004  6E                 	db	110	;'n'
    94   002005  67                 	db	103	;'g'
    95   002006  20                 	db	32
    96   002007  44                 	db	68	;'D'
    97   002008  75                 	db	117	;'u'
    98   002009  6D                 	db	109	;'m'
    99   00200A  62                 	db	98	;'b'
   100   00200B  20                 	db	32
   101   00200C  69                 	db	105	;'i'
   102   00200D  64                 	db	100	;'d'
   103   00200E  69                 	db	105	;'i'
   104   00200F  6F                 	db	111	;'o'
   105   002010  74                 	db	116	;'t'
   106   002011  00                 	db	0
   107   002012                     STR_3:
   108   002012  69                 	db	105	;'i'
   109   002013  6E                 	db	110	;'n'
   110   002014  74                 	db	116	;'t'
   111   002015  65                 	db	101	;'e'
   112   002016  72                 	db	114	;'r'
   113   002017  72                 	db	114	;'r'
   114   002018  75                 	db	117	;'u'
   115   002019  70                 	db	112	;'p'
   116   00201A  74                 	db	116	;'t'
   117   00201B  20                 	db	32
   118   00201C  73                 	db	115	;'s'
   119   00201D  6F                 	db	111	;'o'
   120   00201E  6E                 	db	110	;'n'
   121   00201F  00                 	db	0
   122   002020                     STR_1:
   123   002020  63                 	db	99	;'c'
   124   002021  6F                 	db	111	;'o'
   125   002022  6E                 	db	110	;'n'
   126   002023  67                 	db	103	;'g'
   127   002024  72                 	db	114	;'r'
   128   002025  61                 	db	97	;'a'
   129   002026  74                 	db	116	;'t'
   130   002027  73                 	db	115	;'s'
   131   002028  00                 	db	0
   132   002029  00                 	db	0	; dummy byte at the end
   133   000000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   004436                     __pcinit:
   138                           	callstack 0
   139   004436                     start_initialization:
   140                           	callstack 0
   141   004436                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Clear objects allocated to COMRAM (2 bytes)
   145   004436  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   146   004438  6A21               	clrf	__pbssCOMRAM& (0+255),c
   147                           
   148                           ;
   149                           ; Setup IVTBASE
   150                           ;
   151   00443A  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   152   00443C  6ED5               	movwf	213,c
   153   00443E  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   154   004440  6ED6               	movwf	214,c
   155   004442  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   156   004444  6ED7               	movwf	215,c
   157   004446                     end_of_initialization:
   158                           	callstack 0
   159   004446                     __end_of__initialization:
   160                           	callstack 0
   161   004446  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162   004448  6EF8               	movwf	tblptru,c
   163   00444A  0E20               	movlw	high __Lsmallconst
   164   00444C  6EF7               	movwf	tblptrh,c
   165   00444E  0100               	movlb	0
   166   004450  EFB4  F020         	goto	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMRAM
   169   000021                     __pbssCOMRAM:
   170                           	callstack 0
   171   000021                     _input2:
   172                           	callstack 0
   173   000021                     	ds	1
   174   000022                     _input:
   175                           	callstack 0
   176   000022                     	ds	1
   177                           
   178                           	psect	cstackCOMRAM
   179   000001                     __pcstackCOMRAM:
   180                           	callstack 0
   181   000001                     i2MSdelay@val:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185   000001                     	ds	2
   186   000003                     i2MSdelay@i:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x2
   190   000003                     	ds	2
   191   000005                     i2MSdelay@j:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x4
   195   000005                     	ds	2
   196   000007                     i2LCD_Command@cmd:
   197                           	callstack 0
   198   000007                     i2LCD_Char@dat:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x6
   202   000007                     	ds	1
   203   000008                     i2LCD_String@msg:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x7
   207   000008                     	ds	1
   208   000009                     i2LCD_String_xy@pos:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x8
   212   000009                     	ds	1
   213   00000A                     i2LCD_String_xy@msg:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x9
   217   00000A                     	ds	1
   218   00000B                     i2LCD_String_xy@row:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0xA
   222   00000B                     	ds	1
   223   00000C                     i2LCD_String_xy@location:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0xB
   227   00000C                     	ds	1
   228   00000D                     ??_INT0_ISR:
   229                           
   230                           ; 1 bytes @ 0xC
   231   00000D                     	ds	4
   232   000011                     MSdelay@val:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x10
   236   000011                     	ds	2
   237   000013                     MSdelay@i:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x12
   241   000013                     	ds	2
   242   000015                     MSdelay@j:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x14
   246   000015                     	ds	2
   247   000017                     LCD_Command@cmd:
   248                           	callstack 0
   249   000017                     LCD_Char@dat:
   250                           	callstack 0
   251   000017                     LightScan@pinNumber:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x16
   255   000017                     	ds	1
   256   000018                     LCD_String@msg:
   257                           	callstack 0
   258   000018                     LightScan@counter:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x17
   262   000018                     	ds	1
   263   000019                     LCD_String_xy@pos:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x18
   267   000019                     	ds	1
   268   00001A                     LCD_String_xy@msg:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x19
   272   00001A                     	ds	1
   273   00001B                     LCD_String_xy@row:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x1A
   277   00001B                     	ds	1
   278   00001C                     LCD_String_xy@location:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x1B
   282   00001C                     	ds	1
   283   00001D                     Decision@input2:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x1C
   287   00001D                     	ds	1
   288   00001E                     Decision@input1:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x1D
   292   00001E                     	ds	1
   293   00001F                     ??_main:
   294                           
   295                           ; 1 bytes @ 0x1E
   296   00001F                     	ds	2
   297                           
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 31 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   321 ;;Total ram usage:        2 bytes
   322 ;; Hardware stack levels required when called: 10
   323 ;; This function calls:
   324 ;;		_Decision
   325 ;;		_LCD_Char
   326 ;;		_LCD_Clear
   327 ;;		_LCD_Init
   328 ;;		_LightScan
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   004168                     __ptext0:
   336                           	callstack 0
   337   004168                     _main:
   338                           	callstack 21
   339   004168                     
   340                           ;main.c: 33:     TRISA = 0xFF;
   341   004168  68C2               	setf	194,c	;volatile
   342   00416A                     
   343                           ;main.c: 34:     ANSELA = 0;
   344   00416A  0E00               	movlw	0
   345   00416C  013A               	movlb	58	; () banked
   346   00416E  6F40               	movwf	64,b	;volatile
   347                           
   348                           ;main.c: 35:     PORTA = 0;
   349   004170  0E00               	movlw	0
   350   004172  6ECA               	movwf	202,c	;volatile
   351                           
   352                           ;main.c: 36:     TRISC = 0x00;
   353   004174  0E00               	movlw	0
   354   004176  6EC4               	movwf	196,c	;volatile
   355                           
   356                           ;main.c: 37:     ANSELC = 0;
   357   004178  0E00               	movlw	0
   358   00417A  6F60               	movwf	96,b	;volatile
   359                           
   360                           ;main.c: 38:     PORTC = 0;
   361   00417C  0E00               	movlw	0
   362   00417E  6ECC               	movwf	204,c	;volatile
   363   004180                     
   364                           ; BSR set to: 58
   365                           ;main.c: 39:     INTCON0bits.INT0EDG = 1;
   366   004180  80D2               	bsf	210,0,c	;volatile
   367   004182                     
   368                           ; BSR set to: 58
   369                           ;main.c: 40:     INT0PPS = PORTAbits.RA0;
   370   004182  0E00               	movlw	0
   371   004184  B0CA               	btfsc	202,0,c	;volatile
   372   004186  0E01               	movlw	1
   373   004188  6FC0               	movwf	192,b	;volatile
   374   00418A                     
   375                           ; BSR set to: 58
   376                           ;main.c: 41:     WPUA=0xFF;
   377   00418A  6941               	setf	65,b	;volatile
   378   00418C                     
   379                           ; BSR set to: 58
   380                           ;main.c: 42:     INTCON0bits.IPEN = 1;
   381   00418C  8AD2               	bsf	210,5,c	;volatile
   382   00418E                     
   383                           ; BSR set to: 58
   384                           ;main.c: 43:     INTCON0bits.GIEH = 1;
   385   00418E  8ED2               	bsf	210,7,c	;volatile
   386   004190                     
   387                           ; BSR set to: 58
   388                           ;main.c: 44:     INTCON0bits.GIEL = 1;
   389   004190  8CD2               	bsf	210,6,c	;volatile
   390   004192                     
   391                           ; BSR set to: 58
   392                           ;main.c: 45:     INTCON0bits.INT0EDG = 1;
   393   004192  80D2               	bsf	210,0,c	;volatile
   394   004194                     
   395                           ; BSR set to: 58
   396                           ;main.c: 46:     IPR1bits.INT0IP = 1;
   397   004194  0139               	movlb	57	; () banked
   398   004196  8181               	bsf	129,0,b	;volatile
   399   004198                     
   400                           ; BSR set to: 57
   401                           ;main.c: 47:     PIE1bits.INT0IE = 1;
   402   004198  8191               	bsf	145,0,b	;volatile
   403   00419A                     
   404                           ; BSR set to: 57
   405                           ;main.c: 49:     PIR1bits.INT0IF = 0;
   406   00419A  91A1               	bcf	161,0,b	;volatile
   407   00419C                     l1278:
   408                           
   409                           ;main.c: 52:     {;main.c: 53:     LCD_Init();
   410   00419C  EC04  F022         	call	_LCD_Init	;wreg free
   411   0041A0                     
   412                           ;main.c: 54:     LCD_Clear();
   413   0041A0  EC66  F022         	call	_LCD_Clear	;wreg free
   414   0041A4                     
   415                           ;main.c: 55:     input = LightScan(1);
   416   0041A4  0E01               	movlw	1
   417   0041A6  EC59  F020         	call	_LightScan
   418   0041AA  6E22               	movwf	_input^0,c
   419   0041AC                     
   420                           ;main.c: 56:     LCD_Char(input + '0');
   421   0041AC  5022               	movf	_input^0,w,c
   422   0041AE  0F30               	addlw	48
   423   0041B0  EC2A  F022         	call	_LCD_Char
   424   0041B4                     
   425                           ;main.c: 57:     input2 = LightScan(2);
   426   0041B4  0E02               	movlw	2
   427   0041B6  EC59  F020         	call	_LightScan
   428   0041BA  6E21               	movwf	_input2^0,c
   429   0041BC                     
   430                           ;main.c: 58:     LCD_Char(input2 + '0');
   431   0041BC  5021               	movf	_input2^0,w,c
   432   0041BE  0F30               	addlw	48
   433   0041C0  EC2A  F022         	call	_LCD_Char
   434   0041C4                     
   435                           ;main.c: 59:     Decision(input,input2);
   436   0041C4  C021  F01D         	movff	_input2,Decision@input2
   437   0041C8  5022               	movf	_input^0,w,c
   438   0041CA  ECF6  F020         	call	_Decision
   439   0041CE                     
   440                           ;main.c: 60:     _delay((unsigned long)((10000)*(4000000/4000.0)));
   441   0041CE  0E33               	movlw	51
   442   0041D0  6E20               	movwf	(??_main+1)^0,c
   443   0041D2  0EBB               	movlw	187
   444   0041D4  6E1F               	movwf	??_main^0,c
   445   0041D6  0EE0               	movlw	224
   446   0041D8                     u357:
   447   0041D8  2EE8               	decfsz	wreg,f,c
   448   0041DA  D7FE               	bra	u357
   449   0041DC  2E1F               	decfsz	??_main^0,f,c
   450   0041DE  D7FC               	bra	u357
   451   0041E0  2E20               	decfsz	(??_main+1)^0,f,c
   452   0041E2  D7FA               	bra	u357
   453   0041E4  EFCE  F020         	goto	l1278
   454   0041E8  EF57  F020         	goto	start
   455   0041EC                     __end_of_main:
   456                           	callstack 0
   457                           
   458 ;; *************** function _LightScan *****************
   459 ;; Defined at:
   460 ;;		line 108 in file "./LCD.h"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  pinNumber       1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  pinNumber       1   22[COMRAM] unsigned char 
   465 ;;  counter         1   23[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      unsigned char 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 6
   482 ;; This function calls:
   483 ;;		_MSdelay
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490   0040B2                     __ptext1:
   491                           	callstack 0
   492   0040B2                     _LightScan:
   493                           	callstack 24
   494                           
   495                           ;incstack = 0
   496                           ;LightScan@pinNumber stored from wreg
   497   0040B2  6E17               	movwf	LightScan@pinNumber^0,c
   498   0040B4                     
   499                           ;./LCD.h: 110:     unsigned char counter =0;
   500   0040B4  0E00               	movlw	0
   501   0040B6  6E18               	movwf	LightScan@counter^0,c
   502   0040B8                     
   503                           ;./LCD.h: 112:     if (pinNumber == 1)
   504   0040B8  0417               	decf	LightScan@pinNumber^0,w,c
   505   0040BA  A4D8               	btfss	status,2,c
   506   0040BC  EF62  F020         	goto	u251
   507   0040C0  EF64  F020         	goto	u250
   508   0040C4                     u251:
   509   0040C4  EFA9  F020         	goto	l1202
   510   0040C8                     u250:
   511   0040C8  EF86  F020         	goto	l1186
   512   0040CC                     l94:
   513                           
   514                           ;./LCD.h: 115:     {;./LCD.h: 116:         if(PORTAbits.RA3 == 1)
   515   0040CC  A6CA               	btfss	202,3,c	;volatile
   516   0040CE  EF6B  F020         	goto	u261
   517   0040D2  EF6D  F020         	goto	u260
   518   0040D6                     u261:
   519   0040D6  EF76  F020         	goto	l95
   520   0040DA                     u260:
   521   0040DA                     l1172:
   522                           
   523                           ;./LCD.h: 117:         {;./LCD.h: 118:             MSdelay(500);
   524   0040DA  0E01               	movlw	1
   525   0040DC  6E12               	movwf	(MSdelay@val+1)^0,c
   526   0040DE  0EF4               	movlw	244
   527   0040E0  6E11               	movwf	MSdelay@val^0,c
   528   0040E2  EC4E  F021         	call	_MSdelay	;wreg free
   529   0040E6                     l1174:
   530                           
   531                           ;./LCD.h: 119:             return counter;
   532   0040E6  5018               	movf	LightScan@counter^0,w,c
   533   0040E8  EFB3  F020         	goto	l96
   534   0040EC                     l95:
   535                           
   536                           ;./LCD.h: 122:         if (PORTAbits.RA1 == 1)
   537   0040EC  A2CA               	btfss	202,1,c	;volatile
   538   0040EE  EF7B  F020         	goto	u271
   539   0040F2  EF7D  F020         	goto	u270
   540   0040F6                     u271:
   541   0040F6  EF86  F020         	goto	l1186
   542   0040FA                     u270:
   543   0040FA                     
   544                           ;./LCD.h: 123:         {;./LCD.h: 124:             counter ++;
   545   0040FA  2A18               	incf	LightScan@counter^0,f,c
   546   0040FC                     
   547                           ;./LCD.h: 125:             PORTCbits.RC7 = 1;
   548   0040FC  8ECC               	bsf	204,7,c	;volatile
   549   0040FE                     
   550                           ;./LCD.h: 126:             MSdelay(500);
   551   0040FE  0E01               	movlw	1
   552   004100  6E12               	movwf	(MSdelay@val+1)^0,c
   553   004102  0EF4               	movlw	244
   554   004104  6E11               	movwf	MSdelay@val^0,c
   555   004106  EC4E  F021         	call	_MSdelay	;wreg free
   556   00410A                     
   557                           ;./LCD.h: 127:             PORTCbits.RC7 = 0;
   558   00410A  9ECC               	bcf	204,7,c	;volatile
   559   00410C                     l1186:
   560                           
   561                           ;./LCD.h: 114:     while(counter < 4)
   562   00410C  0E03               	movlw	3
   563   00410E  6418               	cpfsgt	LightScan@counter^0,c
   564   004110  EF8C  F020         	goto	u281
   565   004114  EF8E  F020         	goto	u280
   566   004118                     u281:
   567   004118  EF66  F020         	goto	l94
   568   00411C                     u280:
   569   00411C  EF73  F020         	goto	l1174
   570   004120                     l101:
   571                           
   572                           ;./LCD.h: 135:     {;./LCD.h: 136:               if(PORTAbits.RA3 == 1){
   573   004120  A6CA               	btfss	202,3,c	;volatile
   574   004122  EF95  F020         	goto	u291
   575   004126  EF97  F020         	goto	u290
   576   00412A                     u291:
   577   00412A  EF99  F020         	goto	l102
   578   00412E                     u290:
   579   00412E  EF6D  F020         	goto	l1172
   580   004132                     l102:
   581                           
   582                           ;./LCD.h: 140:         if (PORTAbits.RA2 == 1)
   583   004132  A4CA               	btfss	202,2,c	;volatile
   584   004134  EF9E  F020         	goto	u301
   585   004138  EFA0  F020         	goto	u300
   586   00413C                     u301:
   587   00413C  EFA9  F020         	goto	l1202
   588   004140                     u300:
   589   004140                     
   590                           ;./LCD.h: 141:         {;./LCD.h: 142:             counter ++;
   591   004140  2A18               	incf	LightScan@counter^0,f,c
   592   004142                     
   593                           ;./LCD.h: 143:             PORTCbits.RC7 = 1;
   594   004142  8ECC               	bsf	204,7,c	;volatile
   595   004144                     
   596                           ;./LCD.h: 144:             MSdelay(500);
   597   004144  0E01               	movlw	1
   598   004146  6E12               	movwf	(MSdelay@val+1)^0,c
   599   004148  0EF4               	movlw	244
   600   00414A  6E11               	movwf	MSdelay@val^0,c
   601   00414C  EC4E  F021         	call	_MSdelay	;wreg free
   602   004150                     
   603                           ;./LCD.h: 145:             PORTCbits.RC7 = 0;
   604   004150  9ECC               	bcf	204,7,c	;volatile
   605   004152                     l1202:
   606                           
   607                           ;./LCD.h: 134:          while(counter < 4)
   608   004152  0E03               	movlw	3
   609   004154  6418               	cpfsgt	LightScan@counter^0,c
   610   004156  EFAF  F020         	goto	u311
   611   00415A  EFB1  F020         	goto	u310
   612   00415E                     u311:
   613   00415E  EF90  F020         	goto	l101
   614   004162                     u310:
   615   004162  EF73  F020         	goto	l1174
   616   004166                     l96:
   617   004166  0012               	return		;funcret
   618   004168                     __end_of_LightScan:
   619                           	callstack 0
   620                           
   621 ;; *************** function _LCD_Init *****************
   622 ;; Defined at:
   623 ;;		line 38 in file "./LCD.h"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_LCD_Command
   646 ;;		_MSdelay
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text2
   653   004408                     __ptext2:
   654                           	callstack 0
   655   004408                     _LCD_Init:
   656                           	callstack 23
   657   004408                     
   658                           ;./LCD.h: 40:     MSdelay(15);
   659   004408  0E00               	movlw	0
   660   00440A  6E12               	movwf	(MSdelay@val+1)^0,c
   661   00440C  0E0F               	movlw	15
   662   00440E  6E11               	movwf	MSdelay@val^0,c
   663   004410  EC4E  F021         	call	_MSdelay	;wreg free
   664   004414                     
   665                           ;./LCD.h: 41:     TRISB = 0x00;
   666   004414  0E00               	movlw	0
   667   004416  6EC3               	movwf	195,c	;volatile
   668   004418                     
   669                           ;./LCD.h: 42:     TRISD = 0x00;
   670   004418  0E00               	movlw	0
   671   00441A  6EC5               	movwf	197,c	;volatile
   672                           
   673                           ;./LCD.h: 43:     LCD_Command(0x01);
   674   00441C  0E01               	movlw	1
   675   00441E  EC39  F022         	call	_LCD_Command
   676                           
   677                           ;./LCD.h: 44:     LCD_Command(0x38);
   678   004422  0E38               	movlw	56
   679   004424  EC39  F022         	call	_LCD_Command
   680                           
   681                           ;./LCD.h: 45:     LCD_Command(0x0c);
   682   004428  0E0C               	movlw	12
   683   00442A  EC39  F022         	call	_LCD_Command
   684                           
   685                           ;./LCD.h: 46:     LCD_Command(0x06);
   686   00442E  0E06               	movlw	6
   687   004430  EC39  F022         	call	_LCD_Command
   688   004434  0012               	return		;funcret
   689   004436                     __end_of_LCD_Init:
   690                           	callstack 0
   691                           
   692 ;; *************** function _LCD_Clear *****************
   693 ;; Defined at:
   694 ;;		line 49 in file "./LCD.h"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 7
   715 ;; This function calls:
   716 ;;		_LCD_Command
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723   0044CC                     __ptext3:
   724                           	callstack 0
   725   0044CC                     _LCD_Clear:
   726                           	callstack 23
   727   0044CC                     
   728                           ;./LCD.h: 51:         LCD_Command(0x01);
   729   0044CC  0E01               	movlw	1
   730   0044CE  EC39  F022         	call	_LCD_Command
   731   0044D2  0012               	return		;funcret
   732   0044D4                     __end_of_LCD_Clear:
   733                           	callstack 0
   734                           
   735 ;; *************** function _Decision *****************
   736 ;; Defined at:
   737 ;;		line 155 in file "./LCD.h"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  input1          1    wreg     unsigned char 
   740 ;;  input2          1   28[COMRAM] unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  input1          1   29[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 9
   759 ;; This function calls:
   760 ;;		_LCD_String_xy
   761 ;;		_MSdelay
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text4
   768   0041EC                     __ptext4:
   769                           	callstack 0
   770   0041EC                     _Decision:
   771                           	callstack 21
   772                           
   773                           ;incstack = 0
   774                           ;Decision@input1 stored from wreg
   775   0041EC  6E1E               	movwf	Decision@input1^0,c
   776   0041EE                     
   777                           ;./LCD.h: 156:     if (input1 == 2 && input2 == 4)
   778   0041EE  0E02               	movlw	2
   779   0041F0  181E               	xorwf	Decision@input1^0,w,c
   780   0041F2  A4D8               	btfss	status,2,c
   781   0041F4  EFFE  F020         	goto	u321
   782   0041F8  EF00  F021         	goto	u320
   783   0041FC                     u321:
   784   0041FC  EF1B  F021         	goto	l1226
   785   004200                     u320:
   786   004200  0E04               	movlw	4
   787   004202  181D               	xorwf	Decision@input2^0,w,c
   788   004204  A4D8               	btfss	status,2,c
   789   004206  EF07  F021         	goto	u331
   790   00420A  EF09  F021         	goto	u330
   791   00420E                     u331:
   792   00420E  EF1B  F021         	goto	l1226
   793   004212                     u330:
   794   004212                     
   795                           ;./LCD.h: 157:     {;./LCD.h: 158:         LCD_String_xy(2,0,"congrats");
   796   004212  0E00               	movlw	0
   797   004214  6E19               	movwf	LCD_String_xy@pos^0,c
   798   004216  0E20               	movlw	low STR_1
   799   004218  6E1A               	movwf	LCD_String_xy@msg^0,c
   800   00421A  0E02               	movlw	2
   801   00421C  EC98  F021         	call	_LCD_String_xy
   802   004220                     
   803                           ;./LCD.h: 159:         PORTCbits.RC3 = 1;
   804   004220  86CC               	bsf	204,3,c	;volatile
   805   004222                     
   806                           ;./LCD.h: 160:         PORTCbits.RC2 = 0;
   807   004222  94CC               	bcf	204,2,c	;volatile
   808   004224                     
   809                           ;./LCD.h: 161:         MSdelay(1000);
   810   004224  0E03               	movlw	3
   811   004226  6E12               	movwf	(MSdelay@val+1)^0,c
   812   004228  0EE8               	movlw	232
   813   00422A  6E11               	movwf	MSdelay@val^0,c
   814   00422C  EC4E  F021         	call	_MSdelay	;wreg free
   815   004230                     
   816                           ;./LCD.h: 162:         PORTCbits.RC3 = 0;
   817   004230  96CC               	bcf	204,3,c	;volatile
   818   004232  EF22  F021         	goto	l108
   819   004236                     l1226:
   820                           
   821                           ;./LCD.h: 167:         LCD_String_xy(2,0,"Wrong Dumb idiot");
   822   004236  0E00               	movlw	0
   823   004238  6E19               	movwf	LCD_String_xy@pos^0,c
   824   00423A  0E01               	movlw	low STR_2
   825   00423C  6E1A               	movwf	LCD_String_xy@msg^0,c
   826   00423E  0E02               	movlw	2
   827   004240  EC98  F021         	call	_LCD_String_xy
   828   004244                     l108:
   829   004244  0012               	return		;funcret
   830   004246                     __end_of_Decision:
   831                           	callstack 0
   832                           
   833 ;; *************** function _LCD_String_xy *****************
   834 ;; Defined at:
   835 ;;		line 84 in file "./LCD.h"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  row             1    wreg     unsigned char 
   838 ;;  pos             1   24[COMRAM] unsigned char 
   839 ;;  msg             1   25[COMRAM] PTR const unsigned char 
   840 ;;		 -> STR_3(14), STR_2(17), STR_1(9), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  row             1   26[COMRAM] unsigned char 
   843 ;;  location        1   27[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   857 ;;Total ram usage:        4 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; Hardware stack levels required when called: 8
   860 ;; This function calls:
   861 ;;		_LCD_Command
   862 ;;		_LCD_String
   863 ;; This function is called by:
   864 ;;		_Decision
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text5
   869   004330                     __ptext5:
   870                           	callstack 0
   871   004330                     _LCD_String_xy:
   872                           	callstack 21
   873                           
   874                           ;incstack = 0
   875                           ;LCD_String_xy@row stored from wreg
   876   004330  6E1B               	movwf	LCD_String_xy@row^0,c
   877   004332                     
   878                           ;./LCD.h: 87:     if(row<=1)
   879   004332  0E02               	movlw	2
   880   004334  601B               	cpfslt	LCD_String_xy@row^0,c
   881   004336  EF9F  F021         	goto	u231
   882   00433A  EFA1  F021         	goto	u230
   883   00433E                     u231:
   884   00433E  EFAA  F021         	goto	l1132
   885   004342                     u230:
   886   004342                     
   887                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
   888   004342  5019               	movf	LCD_String_xy@pos^0,w,c
   889   004344  0B0F               	andlw	15
   890   004346  0980               	iorlw	128
   891   004348  6E1C               	movwf	LCD_String_xy@location^0,c
   892   00434A                     
   893                           ;./LCD.h: 90:         LCD_Command(location);
   894   00434A  501C               	movf	LCD_String_xy@location^0,w,c
   895   00434C  EC39  F022         	call	_LCD_Command
   896                           
   897                           ;./LCD.h: 91:     }
   898   004350  EFB1  F021         	goto	l1136
   899   004354                     l1132:
   900                           
   901                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
   902   004354  5019               	movf	LCD_String_xy@pos^0,w,c
   903   004356  0B0F               	andlw	15
   904   004358  09C0               	iorlw	192
   905   00435A  6E1C               	movwf	LCD_String_xy@location^0,c
   906   00435C                     
   907                           ;./LCD.h: 95:         LCD_Command(location);
   908   00435C  501C               	movf	LCD_String_xy@location^0,w,c
   909   00435E  EC39  F022         	call	_LCD_Command
   910   004362                     l1136:
   911                           
   912                           ;./LCD.h: 97:     LCD_String(msg);
   913   004362  C01A  F018         	movff	LCD_String_xy@msg,LCD_String@msg
   914   004366  ECD4  F021         	call	_LCD_String	;wreg free
   915   00436A  0012               	return		;funcret
   916   00436C                     __end_of_LCD_String_xy:
   917                           	callstack 0
   918                           
   919 ;; *************** function _LCD_String *****************
   920 ;; Defined at:
   921 ;;		line 75 in file "./LCD.h"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  msg             1   23[COMRAM] PTR const unsigned char 
   924 ;;		 -> STR_3(14), STR_2(17), STR_1(9), 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 7
   943 ;; This function calls:
   944 ;;		_LCD_Char
   945 ;; This function is called by:
   946 ;;		_LCD_String_xy
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text6
   951   0043A8                     __ptext6:
   952                           	callstack 0
   953   0043A8                     _LCD_String:
   954                           	callstack 21
   955   0043A8                     
   956                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
   957   0043A8  EFDE  F021         	goto	l1110
   958   0043AC                     l1106:
   959                           
   960                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
   961   0043AC  0060  F063  FFF6   	movff	LCD_String@msg,tblptrl
   962   0043B2                     	if	0	;There is only one active tblptr byte
   963   0043B2                     	endif
   964   0043B2                     	if	0	;tblptru may be non-zero
   965   0043B2                     	endif
   966   0043B2                     	if	0	;tblptru may be non-zero
   967   0043B2                     	endif
   968   0043B2  0008               	tblrd		*
   969   0043B4  50F5               	movf	tablat,w,c
   970   0043B6  EC2A  F022         	call	_LCD_Char
   971   0043BA                     
   972                           ;./LCD.h: 80:       msg++;
   973   0043BA  2A18               	incf	LCD_String@msg^0,f,c
   974   0043BC                     l1110:
   975                           
   976                           ;./LCD.h: 77:     while((*msg)!=0)
   977   0043BC  0060  F063  FFF6   	movff	LCD_String@msg,tblptrl
   978   0043C2                     	if	0	;There is only one active tblptr byte
   979   0043C2                     	endif
   980   0043C2                     	if	0	;tblptru may be non-zero
   981   0043C2                     	endif
   982   0043C2                     	if	0	;tblptru may be non-zero
   983   0043C2                     	endif
   984   0043C2  0008               	tblrd		*
   985   0043C4  50F5               	movf	tablat,w,c
   986   0043C6  0900               	iorlw	0
   987   0043C8  A4D8               	btfss	status,2,c
   988   0043CA  EFE9  F021         	goto	u221
   989   0043CE  EFEB  F021         	goto	u220
   990   0043D2                     u221:
   991   0043D2  EFD6  F021         	goto	l1106
   992   0043D6                     u220:
   993   0043D6  0012               	return		;funcret
   994   0043D8                     __end_of_LCD_String:
   995                           	callstack 0
   996                           
   997 ;; *************** function _LCD_Char *****************
   998 ;; Defined at:
   999 ;;		line 64 in file "./LCD.h"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  dat             1    wreg     unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  dat             1   22[COMRAM] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1017 ;;Total ram usage:        1 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 6
  1020 ;; This function calls:
  1021 ;;		_MSdelay
  1022 ;; This function is called by:
  1023 ;;		_LCD_String
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text7
  1029   004454                     __ptext7:
  1030                           	callstack 0
  1031   004454                     _LCD_Char:
  1032                           	callstack 24
  1033                           
  1034                           ;incstack = 0
  1035                           ;LCD_Char@dat stored from wreg
  1036   004454  6E17               	movwf	LCD_Char@dat^0,c
  1037   004456                     
  1038                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
  1039   004456  0060  F05F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  1040   00445C                     
  1041                           ;./LCD.h: 67:     LATD0 = 1;
  1042   00445C  80BD               	bsf	16317,0,c	;volatile
  1043   00445E                     
  1044                           ;./LCD.h: 68:     LATD1=1;
  1045   00445E  82BD               	bsf	16317,1,c	;volatile
  1046   004460                     
  1047                           ;./LCD.h: 69:     __nop();
  1048   004460  0000               	nop	
  1049   004462                     
  1050                           ;./LCD.h: 70:     LATD1=0;
  1051   004462  92BD               	bcf	16317,1,c	;volatile
  1052   004464                     
  1053                           ;./LCD.h: 71:     MSdelay(1);
  1054   004464  0E00               	movlw	0
  1055   004466  6E12               	movwf	(MSdelay@val+1)^0,c
  1056   004468  0E01               	movlw	1
  1057   00446A  6E11               	movwf	MSdelay@val^0,c
  1058   00446C  EC4E  F021         	call	_MSdelay	;wreg free
  1059   004470  0012               	return		;funcret
  1060   004472                     __end_of_LCD_Char:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _LCD_Command *****************
  1064 ;; Defined at:
  1065 ;;		line 54 in file "./LCD.h"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  cmd             1    wreg     unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  cmd             1   22[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;Total ram usage:        1 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 6
  1086 ;; This function calls:
  1087 ;;		_MSdelay
  1088 ;; This function is called by:
  1089 ;;		_LCD_Init
  1090 ;;		_LCD_Clear
  1091 ;;		_LCD_String_xy
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text8
  1096   004472                     __ptext8:
  1097                           	callstack 0
  1098   004472                     _LCD_Command:
  1099                           	callstack 23
  1100                           
  1101                           ;incstack = 0
  1102                           ;LCD_Command@cmd stored from wreg
  1103   004472  6E17               	movwf	LCD_Command@cmd^0,c
  1104   004474                     
  1105                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
  1106   004474  0060  F05F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  1107   00447A                     
  1108                           ;./LCD.h: 57:     LATD0 = 0;
  1109   00447A  90BD               	bcf	16317,0,c	;volatile
  1110   00447C                     
  1111                           ;./LCD.h: 58:     LATD1 = 1;
  1112   00447C  82BD               	bsf	16317,1,c	;volatile
  1113   00447E                     
  1114                           ;./LCD.h: 59:     __nop();
  1115   00447E  0000               	nop	
  1116   004480                     
  1117                           ;./LCD.h: 60:     LATD1 = 0;
  1118   004480  92BD               	bcf	16317,1,c	;volatile
  1119   004482                     
  1120                           ;./LCD.h: 61:     MSdelay(3);
  1121   004482  0E00               	movlw	0
  1122   004484  6E12               	movwf	(MSdelay@val+1)^0,c
  1123   004486  0E03               	movlw	3
  1124   004488  6E11               	movwf	MSdelay@val^0,c
  1125   00448A  EC4E  F021         	call	_MSdelay	;wreg free
  1126   00448E  0012               	return		;funcret
  1127   004490                     __end_of_LCD_Command:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _MSdelay *****************
  1131 ;; Defined at:
  1132 ;;		line 101 in file "./LCD.h"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  val             2   16[COMRAM] unsigned int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  j               2   20[COMRAM] unsigned int 
  1137 ;;  i               2   18[COMRAM] unsigned int 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1150 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1151 ;;Total ram usage:        6 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 5
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_LCD_Init
  1158 ;;		_LCD_Command
  1159 ;;		_LCD_Char
  1160 ;;		_LightScan
  1161 ;;		_Decision
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text9
  1166   00429C                     __ptext9:
  1167                           	callstack 0
  1168   00429C                     _MSdelay:
  1169                           	callstack 24
  1170   00429C                     
  1171                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1172   00429C  0E00               	movlw	0
  1173   00429E  6E14               	movwf	(MSdelay@i+1)^0,c
  1174   0042A0  0E00               	movlw	0
  1175   0042A2  6E13               	movwf	MSdelay@i^0,c
  1176   0042A4  EF67  F021         	goto	l1062
  1177   0042A8                     l1050:
  1178                           
  1179                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1180   0042A8  0E00               	movlw	0
  1181   0042AA  6E16               	movwf	(MSdelay@j+1)^0,c
  1182   0042AC  0E00               	movlw	0
  1183   0042AE  6E15               	movwf	MSdelay@j^0,c
  1184   0042B0                     l1056:
  1185   0042B0  4A15               	infsnz	MSdelay@j^0,f,c
  1186   0042B2  2A16               	incf	(MSdelay@j+1)^0,f,c
  1187   0042B4  5016               	movf	(MSdelay@j+1)^0,w,c
  1188   0042B6  E109               	bnz	u180
  1189   0042B8  0EA5               	movlw	165
  1190   0042BA  5C15               	subwf	MSdelay@j^0,w,c
  1191   0042BC  A0D8               	btfss	status,0,c
  1192   0042BE  EF63  F021         	goto	u181
  1193   0042C2  EF65  F021         	goto	u180
  1194   0042C6                     u181:
  1195   0042C6  EF58  F021         	goto	l1056
  1196   0042CA                     u180:
  1197   0042CA  4A13               	infsnz	MSdelay@i^0,f,c
  1198   0042CC  2A14               	incf	(MSdelay@i+1)^0,f,c
  1199   0042CE                     l1062:
  1200   0042CE  5011               	movf	MSdelay@val^0,w,c
  1201   0042D0  5C13               	subwf	MSdelay@i^0,w,c
  1202   0042D2  5012               	movf	(MSdelay@val+1)^0,w,c
  1203   0042D4  5814               	subwfb	(MSdelay@i+1)^0,w,c
  1204   0042D6  A0D8               	btfss	status,0,c
  1205   0042D8  EF70  F021         	goto	u191
  1206   0042DC  EF72  F021         	goto	u190
  1207   0042E0                     u191:
  1208   0042E0  EF54  F021         	goto	l1050
  1209   0042E4                     u190:
  1210   0042E4  0012               	return		;funcret
  1211   0042E6                     __end_of_MSdelay:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _INT0_ISR *****************
  1215 ;; Defined at:
  1216 ;;		line 22 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 4
  1237 ;; This function calls:
  1238 ;;		i2_LCD_Clear
  1239 ;;		i2_LCD_String_xy
  1240 ;;		i2_MSdelay
  1241 ;; This function is called by:
  1242 ;;		Interrupt level 2
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text10
  1247   004248                     __ptext10:
  1248                           	callstack 0
  1249   004248                     _INT0_ISR:
  1250                           	callstack 21
  1251                           
  1252                           ;incstack = 0
  1253   004248  006F FFD8  F00D    	movff	tblptrl,??_INT0_ISR
  1254   00424E  006F FFDC  F00E    	movff	tblptrh,??_INT0_ISR+1
  1255   004254  006F FFE0  F00F    	movff	tblptru,??_INT0_ISR+2
  1256   00425A  006F FFD4  F010    	movff	tablat,??_INT0_ISR+3
  1257   004260                     
  1258                           ;main.c: 24:     LCD_String_xy(2,0,"interrupt son");
  1259   004260  0E00               	movlw	0
  1260   004262  6E09               	movwf	i2LCD_String_xy@pos^0,c
  1261   004264  0E12               	movlw	low STR_3
  1262   004266  6E0A               	movwf	i2LCD_String_xy@msg^0,c
  1263   004268  0E02               	movlw	2
  1264   00426A  ECB6  F021         	call	i2_LCD_String_xy
  1265   00426E                     
  1266                           ;main.c: 25:     MSdelay(1000);
  1267   00426E  0E03               	movlw	3
  1268   004270  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1269   004272  0EE8               	movlw	232
  1270   004274  6E01               	movwf	i2MSdelay@val^0,c
  1271   004276  EC73  F021         	call	i2_MSdelay	;wreg free
  1272   00427A                     
  1273                           ;main.c: 26:     LCD_Clear();
  1274   00427A  EC6A  F022         	call	i2_LCD_Clear	;wreg free
  1275   00427E                     
  1276                           ;main.c: 27:     PIR1bits.INT0IF = 0;
  1277   00427E  0139               	movlb	57	; () banked
  1278   004280  91A1               	bcf	161,0,b	;volatile
  1279   004282                     
  1280                           ; BSR set to: 57
  1281   004282  0060  F043  FFF5   	movff	??_INT0_ISR+3,tablat
  1282   004288  0060  F03F  FFF8   	movff	??_INT0_ISR+2,tblptru
  1283   00428E  0060  F03B  FFF7   	movff	??_INT0_ISR+1,tblptrh
  1284   004294  0060  F037  FFF6   	movff	??_INT0_ISR,tblptrl
  1285   00429A  0011               	retfie		f
  1286   00429C                     __end_of_INT0_ISR:
  1287                           	callstack 0
  1288                           
  1289 ;; *************** function i2_LCD_String_xy *****************
  1290 ;; Defined at:
  1291 ;;		line 84 in file "./LCD.h"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  row             1    wreg     unsigned char 
  1294 ;;  pos             1    8[COMRAM] unsigned char 
  1295 ;;  msg             1    9[COMRAM] PTR const unsigned char 
  1296 ;;		 -> STR_3(14), STR_2(17), STR_1(9), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  row             1   10[COMRAM] unsigned char 
  1299 ;;  location        1   11[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1313 ;;Total ram usage:        4 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 3
  1316 ;; This function calls:
  1317 ;;		i2_LCD_Command
  1318 ;;		i2_LCD_String
  1319 ;; This function is called by:
  1320 ;;		_INT0_ISR
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text11
  1325   00436C                     __ptext11:
  1326                           	callstack 0
  1327   00436C                     i2_LCD_String_xy:
  1328                           	callstack 21
  1329                           
  1330                           ; BSR set to: 57
  1331                           ;incstack = 0
  1332                           ;i2LCD_String_xy@row stored from wreg
  1333   00436C  6E0B               	movwf	i2LCD_String_xy@row^0,c
  1334   00436E                     
  1335                           ;./LCD.h: 87:     if(row<=1)
  1336   00436E  0E02               	movlw	2
  1337   004370  600B               	cpfslt	i2LCD_String_xy@row^0,c
  1338   004372  EFBD  F021         	goto	i2u34_41
  1339   004376  EFBF  F021         	goto	i2u34_40
  1340   00437A                     i2u34_41:
  1341   00437A  EFC8  F021         	goto	i2l1240
  1342   00437E                     i2u34_40:
  1343   00437E                     
  1344                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
  1345   00437E  5009               	movf	i2LCD_String_xy@pos^0,w,c
  1346   004380  0B0F               	andlw	15
  1347   004382  0980               	iorlw	128
  1348   004384  6E0C               	movwf	i2LCD_String_xy@location^0,c
  1349   004386                     
  1350                           ;./LCD.h: 90:         LCD_Command(location);
  1351   004386  500C               	movf	i2LCD_String_xy@location^0,w,c
  1352   004388  EC57  F022         	call	i2_LCD_Command
  1353                           
  1354                           ;./LCD.h: 91:     }
  1355   00438C  EFCF  F021         	goto	i2l1244
  1356   004390                     i2l1240:
  1357                           
  1358                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
  1359   004390  5009               	movf	i2LCD_String_xy@pos^0,w,c
  1360   004392  0B0F               	andlw	15
  1361   004394  09C0               	iorlw	192
  1362   004396  6E0C               	movwf	i2LCD_String_xy@location^0,c
  1363   004398                     
  1364                           ;./LCD.h: 95:         LCD_Command(location);
  1365   004398  500C               	movf	i2LCD_String_xy@location^0,w,c
  1366   00439A  EC57  F022         	call	i2_LCD_Command
  1367   00439E                     i2l1244:
  1368                           
  1369                           ;./LCD.h: 97:     LCD_String(msg);
  1370   00439E  C00A  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  1371   0043A2  ECEC  F021         	call	i2_LCD_String	;wreg free
  1372   0043A6  0012               	return		;funcret
  1373   0043A8                     __end_ofi2_LCD_String_xy:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function i2_LCD_String *****************
  1377 ;; Defined at:
  1378 ;;		line 75 in file "./LCD.h"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  msg             1    7[COMRAM] PTR const unsigned char 
  1381 ;;		 -> STR_3(14), STR_2(17), STR_1(9), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;Total ram usage:        1 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 2
  1400 ;; This function calls:
  1401 ;;		i2_LCD_Char
  1402 ;; This function is called by:
  1403 ;;		i2_LCD_String_xy
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text12
  1408   0043D8                     __ptext12:
  1409                           	callstack 0
  1410   0043D8                     i2_LCD_String:
  1411                           	callstack 21
  1412   0043D8                     
  1413                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
  1414   0043D8  EFF6  F021         	goto	i2l1156
  1415   0043DC                     i2l1152:
  1416                           
  1417                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
  1418   0043DC  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  1419   0043E2                     	if	0	;There is only one active tblptr byte
  1420   0043E2                     	endif
  1421   0043E2                     	if	0	;tblptru may be non-zero
  1422   0043E2                     	endif
  1423   0043E2                     	if	0	;tblptru may be non-zero
  1424   0043E2                     	endif
  1425   0043E2  0008               	tblrd		*
  1426   0043E4  50F5               	movf	tablat,w,c
  1427   0043E6  EC48  F022         	call	i2_LCD_Char
  1428   0043EA                     
  1429                           ;./LCD.h: 80:       msg++;
  1430   0043EA  2A08               	incf	i2LCD_String@msg^0,f,c
  1431   0043EC                     i2l1156:
  1432                           
  1433                           ;./LCD.h: 77:     while((*msg)!=0)
  1434   0043EC  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  1435   0043F2                     	if	0	;There is only one active tblptr byte
  1436   0043F2                     	endif
  1437   0043F2                     	if	0	;tblptru may be non-zero
  1438   0043F2                     	endif
  1439   0043F2                     	if	0	;tblptru may be non-zero
  1440   0043F2                     	endif
  1441   0043F2  0008               	tblrd		*
  1442   0043F4  50F5               	movf	tablat,w,c
  1443   0043F6  0900               	iorlw	0
  1444   0043F8  A4D8               	btfss	status,2,c
  1445   0043FA  EF01  F022         	goto	i2u24_41
  1446   0043FE  EF03  F022         	goto	i2u24_40
  1447   004402                     i2u24_41:
  1448   004402  EFEE  F021         	goto	i2l1152
  1449   004406                     i2u24_40:
  1450   004406  0012               	return		;funcret
  1451   004408                     __end_ofi2_LCD_String:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function i2_LCD_Char *****************
  1455 ;; Defined at:
  1456 ;;		line 64 in file "./LCD.h"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  dat             1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  dat             1    6[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 1
  1477 ;; This function calls:
  1478 ;;		i2_MSdelay
  1479 ;; This function is called by:
  1480 ;;		i2_LCD_String
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text13
  1485   004490                     __ptext13:
  1486                           	callstack 0
  1487   004490                     i2_LCD_Char:
  1488                           	callstack 21
  1489                           
  1490                           ;incstack = 0
  1491                           ;i2LCD_Char@dat stored from wreg
  1492   004490  6E07               	movwf	i2LCD_Char@dat^0,c
  1493   004492                     
  1494                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
  1495   004492  0060  F01F  FFBB   	movff	i2LCD_Char@dat,16315	;volatile
  1496   004498                     
  1497                           ;./LCD.h: 67:     LATD0 = 1;
  1498   004498  80BD               	bsf	16317,0,c	;volatile
  1499   00449A                     
  1500                           ;./LCD.h: 68:     LATD1=1;
  1501   00449A  82BD               	bsf	16317,1,c	;volatile
  1502   00449C                     
  1503                           ;./LCD.h: 69:     __nop();
  1504   00449C  0000               	nop	
  1505   00449E                     
  1506                           ;./LCD.h: 70:     LATD1=0;
  1507   00449E  92BD               	bcf	16317,1,c	;volatile
  1508   0044A0                     
  1509                           ;./LCD.h: 71:     MSdelay(1);
  1510   0044A0  0E00               	movlw	0
  1511   0044A2  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1512   0044A4  0E01               	movlw	1
  1513   0044A6  6E01               	movwf	i2MSdelay@val^0,c
  1514   0044A8  EC73  F021         	call	i2_MSdelay	;wreg free
  1515   0044AC  0012               	return		;funcret
  1516   0044AE                     __end_ofi2_LCD_Char:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function i2_LCD_Clear *****************
  1520 ;; Defined at:
  1521 ;;		line 49 in file "./LCD.h"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 2
  1542 ;; This function calls:
  1543 ;;		i2_LCD_Command
  1544 ;; This function is called by:
  1545 ;;		_INT0_ISR
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text14
  1550   0044D4                     __ptext14:
  1551                           	callstack 0
  1552   0044D4                     i2_LCD_Clear:
  1553                           	callstack 22
  1554   0044D4                     
  1555                           ;./LCD.h: 51:         LCD_Command(0x01);
  1556   0044D4  0E01               	movlw	1
  1557   0044D6  EC57  F022         	call	i2_LCD_Command
  1558   0044DA  0012               	return		;funcret
  1559   0044DC                     __end_ofi2_LCD_Clear:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function i2_LCD_Command *****************
  1563 ;; Defined at:
  1564 ;;		line 54 in file "./LCD.h"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  cmd             1    wreg     unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  cmd             1    6[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1582 ;;Total ram usage:        1 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 1
  1585 ;; This function calls:
  1586 ;;		i2_MSdelay
  1587 ;; This function is called by:
  1588 ;;		i2_LCD_Clear
  1589 ;;		i2_LCD_String_xy
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text15
  1594   0044AE                     __ptext15:
  1595                           	callstack 0
  1596   0044AE                     i2_LCD_Command:
  1597                           	callstack 22
  1598                           
  1599                           ;incstack = 0
  1600                           ;i2LCD_Command@cmd stored from wreg
  1601   0044AE  6E07               	movwf	i2LCD_Command@cmd^0,c
  1602   0044B0                     
  1603                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
  1604   0044B0  0060  F01F  FFBB   	movff	i2LCD_Command@cmd,16315	;volatile
  1605   0044B6                     
  1606                           ;./LCD.h: 57:     LATD0 = 0;
  1607   0044B6  90BD               	bcf	16317,0,c	;volatile
  1608   0044B8                     
  1609                           ;./LCD.h: 58:     LATD1 = 1;
  1610   0044B8  82BD               	bsf	16317,1,c	;volatile
  1611   0044BA                     
  1612                           ;./LCD.h: 59:     __nop();
  1613   0044BA  0000               	nop	
  1614   0044BC                     
  1615                           ;./LCD.h: 60:     LATD1 = 0;
  1616   0044BC  92BD               	bcf	16317,1,c	;volatile
  1617   0044BE                     
  1618                           ;./LCD.h: 61:     MSdelay(3);
  1619   0044BE  0E00               	movlw	0
  1620   0044C0  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1621   0044C2  0E03               	movlw	3
  1622   0044C4  6E01               	movwf	i2MSdelay@val^0,c
  1623   0044C6  EC73  F021         	call	i2_MSdelay	;wreg free
  1624   0044CA  0012               	return		;funcret
  1625   0044CC                     __end_ofi2_LCD_Command:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function i2_MSdelay *****************
  1629 ;; Defined at:
  1630 ;;		line 101 in file "./LCD.h"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  val             2    0[COMRAM] unsigned int 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  j               2    4[COMRAM] unsigned int 
  1635 ;;  i               2    2[COMRAM] unsigned int 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1646 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1649 ;;Total ram usage:        6 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_INT0_ISR
  1655 ;;		i2_LCD_Command
  1656 ;;		i2_LCD_Char
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text16
  1661   0042E6                     __ptext16:
  1662                           	callstack 0
  1663   0042E6                     i2_MSdelay:
  1664                           	callstack 24
  1665   0042E6                     
  1666                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1667   0042E6  0E00               	movlw	0
  1668   0042E8  6E04               	movwf	(i2MSdelay@i+1)^0,c
  1669   0042EA  0E00               	movlw	0
  1670   0042EC  6E03               	movwf	i2MSdelay@i^0,c
  1671   0042EE  EF8C  F021         	goto	i2l1090
  1672   0042F2                     i2l1078:
  1673                           
  1674                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1675   0042F2  0E00               	movlw	0
  1676   0042F4  6E06               	movwf	(i2MSdelay@j+1)^0,c
  1677   0042F6  0E00               	movlw	0
  1678   0042F8  6E05               	movwf	i2MSdelay@j^0,c
  1679   0042FA                     i2l1084:
  1680   0042FA  4A05               	infsnz	i2MSdelay@j^0,f,c
  1681   0042FC  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  1682   0042FE  5006               	movf	(i2MSdelay@j+1)^0,w,c
  1683   004300  E109               	bnz	i2u20_40
  1684   004302  0EA5               	movlw	165
  1685   004304  5C05               	subwf	i2MSdelay@j^0,w,c
  1686   004306  A0D8               	btfss	status,0,c
  1687   004308  EF88  F021         	goto	i2u20_41
  1688   00430C  EF8A  F021         	goto	i2u20_40
  1689   004310                     i2u20_41:
  1690   004310  EF7D  F021         	goto	i2l1084
  1691   004314                     i2u20_40:
  1692   004314  4A03               	infsnz	i2MSdelay@i^0,f,c
  1693   004316  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  1694   004318                     i2l1090:
  1695   004318  5001               	movf	i2MSdelay@val^0,w,c
  1696   00431A  5C03               	subwf	i2MSdelay@i^0,w,c
  1697   00431C  5002               	movf	(i2MSdelay@val+1)^0,w,c
  1698   00431E  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  1699   004320  A0D8               	btfss	status,0,c
  1700   004322  EF95  F021         	goto	i2u21_41
  1701   004326  EF97  F021         	goto	i2u21_40
  1702   00432A                     i2u21_41:
  1703   00432A  EF79  F021         	goto	i2l1078
  1704   00432E                     i2u21_40:
  1705   00432E  0012               	return		;funcret
  1706   004330                     __end_ofi2_MSdelay:
  1707                           	callstack 0
  1708                           
  1709                           ;
  1710                           ; H/W Interrupt Vector Table @ 0x4008
  1711                           ;
  1712                           
  1713                           	psect	ivt0x4008
  1714   004008                     __pivt0x4008:
  1715                           	callstack 0
  1716   004008                     ivt0x4008_base:
  1717                           	callstack 0
  1718                           
  1719                           ; Vector 0 : SWINT
  1720   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1721                           
  1722                           ; Vector 1 : HLVD
  1723   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1724                           
  1725                           ; Vector 2 : OSF
  1726   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1727                           
  1728                           ; Vector 3 : CSW
  1729   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1730                           
  1731                           ; Vector 4 : NVM
  1732   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1733                           
  1734                           ; Vector 5 : SCAN
  1735   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1736                           
  1737                           ; Vector 6 : CRC
  1738   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1739                           
  1740                           ; Vector 7 : IOC
  1741   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1742                           
  1743                           ; Vector 8 : INT0
  1744   004018  1092               	dw	_INT0_ISR shr (0+2)
  1745                           
  1746                           ; Vector 9 : ZCD
  1747   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1748                           
  1749                           ; Vector 10 : AD
  1750   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1751                           
  1752                           ; Vector 11 : ADT
  1753   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1754                           
  1755                           ; Vector 12 : CMP1
  1756   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1757                           
  1758                           ; Vector 13 : SMT1
  1759   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1760                           
  1761                           ; Vector 14 : SMT1PRA
  1762   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1763                           
  1764                           ; Vector 15 : SMT1PRW
  1765   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1766                           
  1767                           ; Vector 16 : DMA1SCNT
  1768   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1769                           
  1770                           ; Vector 17 : DMA1DCNT
  1771   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1772                           
  1773                           ; Vector 18 : DMA1OR
  1774   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1775                           
  1776                           ; Vector 19 : DMA1A
  1777   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1778                           
  1779                           ; Vector 20 : SPI1RX
  1780   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1781                           
  1782                           ; Vector 21 : SPI1TX
  1783   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1784                           
  1785                           ; Vector 22 : SPI1
  1786   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1787                           
  1788                           ; Vector 23 : I2C1RX
  1789   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1790                           
  1791                           ; Vector 24 : I2C1TX
  1792   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1793                           
  1794                           ; Vector 25 : I2C1
  1795   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1796                           
  1797                           ; Vector 26 : I2C1E
  1798   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1799                           
  1800                           ; Vector 27 : U1RX
  1801   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1802                           
  1803                           ; Vector 28 : U1TX
  1804   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1805                           
  1806                           ; Vector 29 : U1E
  1807   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1808                           
  1809                           ; Vector 30 : U1
  1810   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1811                           
  1812                           ; Vector 31 : TMR0
  1813   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1814                           
  1815                           ; Vector 32 : TMR1
  1816   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1817                           
  1818                           ; Vector 33 : TMR1G
  1819   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1820                           
  1821                           ; Vector 34 : TMR2
  1822   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1823                           
  1824                           ; Vector 35 : CCP1
  1825   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1826                           
  1827                           ; Vector 36 : Undefined
  1828   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1829                           
  1830                           ; Vector 37 : NCO1
  1831   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1832                           
  1833                           ; Vector 38 : CWG1
  1834   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1835                           
  1836                           ; Vector 39 : CLC1
  1837   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1838                           
  1839                           ; Vector 40 : INT1
  1840   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1841                           
  1842                           ; Vector 41 : CMP2
  1843   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1844                           
  1845                           ; Vector 42 : DMA2SCNT
  1846   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1847                           
  1848                           ; Vector 43 : DMA2DCNT
  1849   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1850                           
  1851                           ; Vector 44 : DMA2OR
  1852   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1853                           
  1854                           ; Vector 45 : DMA2A
  1855   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1856                           
  1857                           ; Vector 46 : I2C2RX
  1858   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1859                           
  1860                           ; Vector 47 : I2C2TX
  1861   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1862                           
  1863                           ; Vector 48 : I2C2
  1864   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1865                           
  1866                           ; Vector 49 : I2C2E
  1867   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1868                           
  1869                           ; Vector 50 : U2RX
  1870   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1871                           
  1872                           ; Vector 51 : U2TX
  1873   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1874                           
  1875                           ; Vector 52 : U2E
  1876   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1877                           
  1878                           ; Vector 53 : U2
  1879   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1880                           
  1881                           ; Vector 54 : TMR3
  1882   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1883                           
  1884                           ; Vector 55 : TMR3G
  1885   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1886                           
  1887                           ; Vector 56 : TMR4
  1888   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1889                           
  1890                           ; Vector 57 : CCP2
  1891   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1892                           
  1893                           ; Vector 58 : Undefined
  1894   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1895                           
  1896                           ; Vector 59 : CWG2
  1897   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1898                           
  1899                           ; Vector 60 : CLC2
  1900   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1901                           
  1902                           ; Vector 61 : INT2
  1903   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1904                           
  1905                           ; Vector 62 : Undefined
  1906   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1907                           
  1908                           ; Vector 63 : Undefined
  1909   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1910                           
  1911                           ; Vector 64 : Undefined
  1912   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1913                           
  1914                           ; Vector 65 : Undefined
  1915   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1916                           
  1917                           ; Vector 66 : Undefined
  1918   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1919                           
  1920                           ; Vector 67 : Undefined
  1921   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1922                           
  1923                           ; Vector 68 : Undefined
  1924   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1925                           
  1926                           ; Vector 69 : Undefined
  1927   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1928                           
  1929                           ; Vector 70 : TMR5
  1930   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1931                           
  1932                           ; Vector 71 : TMR5G
  1933   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1934                           
  1935                           ; Vector 72 : TMR6
  1936   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1937                           
  1938                           ; Vector 73 : CCP3
  1939   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1940                           
  1941                           ; Vector 74 : CWG3
  1942   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1943                           
  1944                           ; Vector 75 : CLC3
  1945   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1946                           
  1947                           ; Vector 76 : Undefined
  1948   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1949                           
  1950                           ; Vector 77 : Undefined
  1951   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1952                           
  1953                           ; Vector 78 : Undefined
  1954   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1955                           
  1956                           ; Vector 79 : Undefined
  1957   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1958                           
  1959                           ; Vector 80 : CCP4
  1960   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1961                           
  1962                           ; Vector 81 : CLC4
  1963   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1964   0040AC                     ivt0x4008_undefint:
  1965                           	callstack 0
  1966   0040AC  00FF               	reset	
  1967                           
  1968                           	psect	rparam
  1969   000000                     
  1970                           	psect	config
  1971                           
  1972                           ;Config register CONFIG1L @ 0x300000
  1973                           ;	External Oscillator Selection
  1974                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1975                           ;	Reset Oscillator Selection
  1976                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1977   300000                     	org	3145728
  1978   300000  F8                 	db	248
  1979                           
  1980                           ;Config register CONFIG1H @ 0x300001
  1981                           ;	Clock out Enable bit
  1982                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1983                           ;	PRLOCKED One-Way Set Enable bit
  1984                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1985                           ;	Clock Switch Enable bit
  1986                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1987                           ;	Fail-Safe Clock Monitor Enable bit
  1988                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1989   300001                     	org	3145729
  1990   300001  FF                 	db	255
  1991                           
  1992                           ;Config register CONFIG2L @ 0x300002
  1993                           ;	MCLR Enable bit
  1994                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1995                           ;	Power-up timer selection bits
  1996                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1997                           ;	Multi-vector enable bit
  1998                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1999                           ;	IVTLOCK bit One-way set enable bit
  2000                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2001                           ;	Low Power BOR Enable bit
  2002                           ;	LPBOREN = OFF, ULPBOR disabled
  2003                           ;	Brown-out Reset Enable bits
  2004                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2005   300002                     	org	3145730
  2006   300002  FF                 	db	255
  2007                           
  2008                           ;Config register CONFIG2H @ 0x300003
  2009                           ;	Brown-out Reset Voltage Selection bits
  2010                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2011                           ;	ZCD Disable bit
  2012                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2013                           ;	PPSLOCK bit One-Way Set Enable bit
  2014                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2015                           ;	Stack Full/Underflow Reset Enable bit
  2016                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2017                           ;	Debugger Enable bit
  2018                           ;	DEBUG = OFF, Background debugger disabled
  2019                           ;	Extended Instruction Set Enable bit
  2020                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2021   300003                     	org	3145731
  2022   300003  FF                 	db	255
  2023                           
  2024                           ;Config register CONFIG3L @ 0x300004
  2025                           ;	WDT Period selection bits
  2026                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2027                           ;	WDT operating mode
  2028                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2029   300004                     	org	3145732
  2030   300004  9F                 	db	159
  2031                           
  2032                           ;Config register CONFIG3H @ 0x300005
  2033                           ;	WDT Window Select bits
  2034                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2035                           ;	WDT input clock selector
  2036                           ;	WDTCCS = SC, Software Control
  2037   300005                     	org	3145733
  2038   300005  FF                 	db	255
  2039                           
  2040                           ;Config register CONFIG4L @ 0x300006
  2041                           ;	Boot Block Size selection bits
  2042                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2043                           ;	Boot Block enable bit
  2044                           ;	BBEN = OFF, Boot block disabled
  2045                           ;	Storage Area Flash enable bit
  2046                           ;	SAFEN = OFF, SAF disabled
  2047                           ;	Application Block write protection bit
  2048                           ;	WRTAPP = OFF, Application Block not write protected
  2049   300006                     	org	3145734
  2050   300006  FF                 	db	255
  2051                           
  2052                           ;Config register CONFIG4H @ 0x300007
  2053                           ;	Boot Block Write Protection bit
  2054                           ;	WRTB = OFF, Boot Block not write-protected
  2055                           ;	Configuration Register Write Protection bit
  2056                           ;	WRTC = OFF, Configuration registers not write-protected
  2057                           ;	Data EEPROM Write Protection bit
  2058                           ;	WRTD = OFF, Data EEPROM not write-protected
  2059                           ;	SAF Write protection bit
  2060                           ;	WRTSAF = OFF, SAF not Write Protected
  2061                           ;	Low Voltage Programming Enable bit
  2062                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2063   300007                     	org	3145735
  2064   300007  FF                 	db	255
  2065                           
  2066                           ;Config register CONFIG5L @ 0x300008
  2067                           ;	PFM and Data EEPROM Code Protection bit
  2068                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2069   300008                     	org	3145736
  2070   300008  FF                 	db	255
  2071                           
  2072                           ;Config register CONFIG5H @ 0x300009
  2073                           ;	unspecified, using default values
  2074   300009                     	org	3145737
  2075   300009  FF                 	db	255
  2076                           tosu	equ	0x3FFF
  2077                           tosh	equ	0x3FFE
  2078                           tosl	equ	0x3FFD
  2079                           stkptr	equ	0x3FFC
  2080                           pclatu	equ	0x3FFB
  2081                           pclath	equ	0x3FFA
  2082                           pcl	equ	0x3FF9
  2083                           tblptru	equ	0x3FF8
  2084                           tblptrh	equ	0x3FF7
  2085                           tblptrl	equ	0x3FF6
  2086                           tablat	equ	0x3FF5
  2087                           prodh	equ	0x3FF4
  2088                           prodl	equ	0x3FF3
  2089                           indf0	equ	0x3FEF
  2090                           postinc0	equ	0x3FEE
  2091                           postdec0	equ	0x3FED
  2092                           preinc0	equ	0x3FEC
  2093                           plusw0	equ	0x3FEB
  2094                           fsr0h	equ	0x3FEA
  2095                           fsr0l	equ	0x3FE9
  2096                           wreg	equ	0x3FE8
  2097                           indf1	equ	0x3FE7
  2098                           postinc1	equ	0x3FE6
  2099                           postdec1	equ	0x3FE5
  2100                           preinc1	equ	0x3FE4
  2101                           plusw1	equ	0x3FE3
  2102                           fsr1h	equ	0x3FE2
  2103                           fsr1l	equ	0x3FE1
  2104                           bsr	equ	0x3FE0
  2105                           indf2	equ	0x3FDF
  2106                           postinc2	equ	0x3FDE
  2107                           postdec2	equ	0x3FDD
  2108                           preinc2	equ	0x3FDC
  2109                           plusw2	equ	0x3FDB
  2110                           fsr2h	equ	0x3FDA
  2111                           fsr2l	equ	0x3FD9
  2112                           status	equ	0x3FD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[9]), STR_2(CODE[17]), STR_3(CODE[14]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[9]), STR_2(CODE[17]), STR_3(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_Decision
    _LightScan->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _Decision->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_LCD_String_xy
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    i2_LCD_Clear->i2_LCD_Command
    i2_LCD_Command->i2_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7025
                                             30 COMRAM     2     2      0
                           _Decision
                           _LCD_Char
                          _LCD_Clear
                           _LCD_Init
                          _LightScan
 ---------------------------------------------------------------------------------
 (1) _LightScan                                            2     2      0     885
                                             22 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1522
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     772
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Decision                                             2     1      1    3074
                                             28 COMRAM     2     1      1
                      _LCD_String_xy
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2    2204
                                             24 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           1     0      1     893
                                             23 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             1     1      0     772
                                             22 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     772
                                             22 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     750
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             4     4      0    1004
                                             12 COMRAM     4     4      0
                        i2_LCD_Clear
                    i2_LCD_String_xy
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) i2_LCD_String_xy                                      4     2      2     642
                                              8 COMRAM     4     2      2
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (8) i2_LCD_String                                         1     0      1     263
                                              7 COMRAM     1     0      1
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Char                                           1     1      0     192
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Clear                                          0     0      0     192
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Command                                        1     1      0     192
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) i2_MSdelay                                            6     4      2     170
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decision
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LightScan
     _MSdelay

 _INT0_ISR (ROOT)
   i2_LCD_Clear
     i2_LCD_Command
       i2_MSdelay
   i2_LCD_String_xy
     i2_LCD_Command
     i2_LCD_String
       i2_LCD_Char
         i2_MSdelay
   i2_MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      82        0.0%
BITBIGSFRllhhhh    4FA      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      81        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhl       9E      0       0      78        0.0%
BITBIGSFRllhhhl     5F      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      22       1       35.8%
BITBIGSFRhhhhh      2D      0       0      69        0.0%
BITBIGSFRllhhl      1E      0       0      77        0.0%
BITBIGSFRlllhh       F      0       0      79        0.0%
BITBIGSFRlllhl       F      0       0      80        0.0%
BITBIGSFRhhhhl       5      0       0      70        0.0%
BITBIGSFRlhh         4      0       0      73        0.0%
BITBIGSFRhhl         4      0       0      72        0.0%
BITBIGSFRhhhl        1      0       0      71        0.0%
BITBIGSFRlhl         1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      14        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 20:31:01 2024

           ?_LCD_Command 0001                       l61 4434                       l70 4470  
                     l64 44D2                       l81 436A                       l67 448E  
                     l76 43D6                       l94 40CC                       l95 40EC  
                     l96 4166                       l89 42E4              ?_LCD_String 0018  
                    l101 4120                      l102 4132                      l108 4244  
                    u220 43D6                      u300 4140                      u221 43D2  
                    u301 413C                      u230 4342                      u310 4162  
                    u231 433E                      u311 415E                      u320 4200  
                    u321 41FC                      u330 4212                      u250 40C8  
                    u331 420E                      u251 40C4                      u180 42CA  
                    u260 40DA                      u181 42C6                      u261 40D6  
                    u190 42E4                      u270 40FA                      u191 42E0  
                    u271 40F6                      u280 411C                      u281 4118  
                    u290 412E                      u291 412A                      u357 41D8  
                    wreg 3FE8              LCD_Char@dat 0017                     l1100 4480  
                   l1102 4482                     l1110 43BC                     l1104 43A8  
                   l1200 4150                     l1050 42A8                     l1106 43AC  
                   l1130 434A                     l1210 4200                     l1202 4152  
                   l1060 42CA                     l1108 43BA                     l1132 4354  
                   l1124 4332                     l1220 4230                     l1212 4212  
                   l1062 42CE                     l1070 4460                     l1134 435C  
                   l1126 4332                     l1214 4220                     l1056 42B0  
                   l1048 429C                     l1072 4462                     l1064 4456  
                   l1136 4362                     l1128 4342                     l1216 4222  
                   l1208 41EE                     l1160 4414                     l1058 42B4  
                   l1074 4464                     l1066 445C                     l1218 4224  
                   l1226 4236                     l1162 4418                     l1092 4474  
                   l1068 445E                     l1164 44CC                     l1180 40FC  
                   l1172 40DA                     l1260 4182                     l1094 447A  
                   l1158 4408                     l1182 40FE                     l1174 40E6  
                   l1166 40B4                     l1270 4192                     l1262 418A  
                   l1254 4168                     l1096 447C                     l1184 410A  
                   l1168 40B8                     l1280 41A0                     l1272 4194  
                   l1264 418C                     l1256 416A                     l1098 447E  
                   l1194 4140                     l1178 40FA                     l1186 410C  
                   l1290 41C4                     l1282 41A4                     l1274 4198  
                   l1266 418E                     l1258 4180                     l1196 4142  
                   l1292 41CE                     l1284 41AC                     l1276 419A  
                   l1268 4190                     l1198 4144                     l1286 41B4  
                   l1278 419C                     l1288 41BC                     STR_1 2020  
                   STR_2 2001                     STR_3 2012                     _LATB 3FBB  
                   i2l70 44AC                     i2l64 44DA                     i2l81 43A6  
                   i2l67 44CA                     i2l76 4406                     i2l89 432E  
                   _WPUA 3A41              ?i2_LCD_Char 0001                     _main 4168  
                   start 40AE          __end_of_MSdelay 42E6            _LCD_String_xy 4330  
           ___param_bank 0000           Decision@input1 001E           Decision@input2 001D  
       __end_of_LCD_Char 4472         __end_of_LCD_Init 4436         __end_of_INT0_ISR 429C  
                  ?_main 0001                    _LATD0 1FDE8                    _LATD1 1FDE9  
                  i2l118 4282                    _PORTA 3FCA                    _PORTC 3FCC  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISC 3FC4  
                  _TRISD 3FC5             ?i2_LCD_Clear 0001                    _input 0022  
                  tablat 3FF5                    status 3FD8         __end_of_Decision 4246  
         ?_LCD_String_xy 0019          __initialization 4436             __end_of_main 41EC  
                 ??_main 001F        __end_of_LCD_Clear 44D4            __activetblptr 0001  
                 _ANSELA 3A40                   _ANSELC 3A60         LightScan@counter 0018  
       LCD_String_xy@msg 001A         LCD_String_xy@pos 0019         LCD_String_xy@row 001B  
                 i2l1120 449E                   i2l1112 4492                   i2l1122 44A0  
                 i2l1114 4498                   i2l1140 44B6                   i2l1116 449A  
                 i2l1142 44B8                   i2l1230 44D4                   i2l1118 449C  
                 i2l1150 43D8                ??_MSdelay 0013                   i2l1144 44BA  
                 i2l1152 43DC                   i2l1240 4390                   i2l1232 436E  
                 i2l1090 4318                   i2l1146 44BC                   i2l1138 44B0  
                 i2l1154 43EA                   i2l1242 4398                   i2l1234 436E  
                 i2l1250 427A                   i2l1084 42FA                   i2l1076 42E6  
                 i2l1148 44BE                   i2l1156 43EC                   i2l1244 439E  
                 i2l1236 437E                   i2l1252 427E                   i2l1086 42FE  
                 i2l1078 42F2                   i2l1238 4386                   i2l1246 4260  
                 i2l1088 4314                   i2l1248 426E        __end_ofi2_MSdelay 4330  
                 _input2 0021            ?i2_LCD_String 0008                   isa$std 0001  
           __mediumconst 0000                   tblptrh 3FF7                   tblptrl 3FF6  
                 tblptru 3FF8        ??i2_LCD_String_xy 000B                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 4446                ?_LCD_Init 0001  
              ?_INT0_ISR 0001          ??_LCD_String_xy 001B            ___rparam_used 0001  
         __pcstackCOMRAM 0001           ??i2_LCD_String 0009             ??_LCD_String 0019  
      __end_of_LightScan 4168         i2LCD_Command@cmd 0007                ?_Decision 001D  
           ??i2_LCD_Char 0007               ??_LCD_Char 0017               ??_LCD_Init 0018  
             ??_INT0_ISR 000D       __end_of_LCD_String 43D8                  IVTBASEH 3FD6  
                IVTBASEL 3FD5                  IVTBASEU 3FD7            i2_LCD_Command 44AE  
                _INT0PPS 3AC0       __end_ofi2_LCD_Char 44AE               ??_Decision 001E  
                i2u20_40 4314                  i2u20_41 4310                  i2u21_40 432E  
                i2u21_41 432A                  i2u24_40 4406                  i2u24_41 4402  
                i2u34_40 437E                  i2u34_41 437A                  _MSdelay 429C  
          LCD_String@msg 0018                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000           ?i2_LCD_Command 0001                  __pcinit 4436  
                __ramtop 2000            ivt0x4008_base 4008                  __ptext0 4168  
                __ptext1 40B2                  __ptext2 4408                  __ptext3 44CC  
                __ptext4 41EC                  __ptext5 4330                  __ptext6 43A8  
                __ptext7 4454                  __ptext8 4472                  __ptext9 429C  
              _LCD_Clear 44CC     end_of_initialization 4446     __end_ofi2_LCD_String 4408  
         LCD_Command@cmd 0017                i2_MSdelay 42E6          i2_LCD_String_xy 436C  
              _PORTAbits 3FCA                _PORTCbits 3FCC               ?_LCD_Clear 0001  
     i2LCD_String_xy@msg 000A       i2LCD_String_xy@pos 0009       i2LCD_String_xy@row 000B  
        ??i2_LCD_Command 0007            ??_LCD_Command 0017               ?i2_MSdelay 0001  
    start_initialization 4436                _LightScan 40B2    __end_of_LCD_String_xy 436C  
__end_ofi2_LCD_String_xy 43A8      __end_of_LCD_Command 4490              __pbssCOMRAM 0021  
             ?_LightScan 0001            ??i2_LCD_Clear 0008              ??_LCD_Clear 0018  
          i2LCD_Char@dat 0007                 ?_MSdelay 0011              __pivt0x4008 4008  
           i2MSdelay@val 0001              ??i2_MSdelay 0003             i2_LCD_String 43D8  
            __smallconst 2000    LCD_String_xy@location 001C                 MSdelay@i 0013  
               MSdelay@j 0015                 _LCD_Char 4454      __end_ofi2_LCD_Clear 44DC  
               _LCD_Init 4408                 _INT0_ISR 4248                 _IPR1bits 3981  
               _PIE1bits 3991                 _PIR1bits 39A1       LightScan@pinNumber 0017  
       ?i2_LCD_String_xy 0009        ivt0x4008_undefint 40AC              _LCD_Command 4472  
               _Decision 41EC              ??_LightScan 0017              _INTCON0bits 3FD2  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
        i2LCD_String@msg 0008              i2_LCD_Clear 44D4                 __ptext10 4248  
               __ptext11 436C                 __ptext12 43D8                 __ptext13 4490  
               __ptext14 44D4                 __ptext15 44AE                 __ptext16 42E6  
             MSdelay@val 0011                 isa$xinst 0000    __end_ofi2_LCD_Command 44CC  
             _LCD_String 43A8  i2LCD_String_xy@location 000C                 intlevel2 0000  
             i2MSdelay@i 0003               i2MSdelay@j 0005               i2_LCD_Char 4490  
