

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 11:54:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=4,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F47K42 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _TRISC	set	16324
    64   000000                     _TRISD	set	16325
    65   000000                     _LATD1	set	130537
    66   000000                     _IPR1bits	set	14721
    67   000000                     _PIR1bits	set	14753
    68   000000                     _LATB	set	16315
    69   000000                     _TRISB	set	16323
    70   000000                     _PORTAbits	set	16330
    71   000000                     _LATD0	set	130536
    72   000000                     _TRISA	set	16322
    73   000000                     _PORTCbits	set	16332
    74   000000                     _INTCON0bits	set	16338
    75   000000                     _ANSELA	set	14912
    76   000000                     _WPUA	set	14913
    77   000000                     _ANSELC	set	14944
    78   000000                     _INT0PPS	set	15040
    79   000000                     _PIE1bits	set	14737
    80                           
    81                           	psect	smallconst
    82   002000                     __psmallconst:
    83                           	callstack 0
    84   002000  00                 	db	0
    85   002001                     STR_1:
    86   002001  69                 	db	105	;'i'
    87   002002  6E                 	db	110	;'n'
    88   002003  74                 	db	116	;'t'
    89   002004  65                 	db	101	;'e'
    90   002005  72                 	db	114	;'r'
    91   002006  72                 	db	114	;'r'
    92   002007  75                 	db	117	;'u'
    93   002008  70                 	db	112	;'p'
    94   002009  74                 	db	116	;'t'
    95   00200A  20                 	db	32
    96   00200B  73                 	db	115	;'s'
    97   00200C  6F                 	db	111	;'o'
    98   00200D  6E                 	db	110	;'n'
    99   00200E  00                 	db	0
   100   00200F                     STR_2:
   101   00200F  6F                 	db	111	;'o'
   102   002010  75                 	db	117	;'u'
   103   002011  74                 	db	116	;'t'
   104   002012  20                 	db	32
   105   002013  6F                 	db	111	;'o'
   106   002014  66                 	db	102	;'f'
   107   002015  20                 	db	32
   108   002016  73                 	db	115	;'s'
   109   002017  63                 	db	99	;'c'
   110   002018  61                 	db	97	;'a'
   111   002019  6E                 	db	110	;'n'
   112   00201A  00                 	db	0
   113   00201B  00                 	db	0	; dummy byte at the end
   114   000000                     
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118   0043C4                     __pcinit:
   119                           	callstack 0
   120   0043C4                     start_initialization:
   121                           	callstack 0
   122   0043C4                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (2 bytes)
   126   0043C4  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   127   0043C6  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   128                           
   129                           ;
   130                           ; Setup IVTBASE
   131                           ;
   132   0043C8  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   133   0043CA  6ED5               	movwf	213,c
   134   0043CC  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   135   0043CE  6ED6               	movwf	214,c
   136   0043D0  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   137   0043D2  6ED7               	movwf	215,c
   138   0043D4                     end_of_initialization:
   139                           	callstack 0
   140   0043D4                     __end_of__initialization:
   141                           	callstack 0
   142   0043D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   143   0043D6  6EF8               	movwf	tblptru,c
   144   0043D8  0E20               	movlw	high __Lsmallconst
   145   0043DA  6EF7               	movwf	tblptrh,c
   146   0043DC  0100               	movlb	0
   147   0043DE  EFAE  F020         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMRAM
   150   00001F                     __pbssCOMRAM:
   151                           	callstack 0
   152   00001F                     _input2:
   153                           	callstack 0
   154   00001F                     	ds	1
   155   000020                     _input:
   156                           	callstack 0
   157   000020                     	ds	1
   158                           
   159                           	psect	cstackCOMRAM
   160   000001                     __pcstackCOMRAM:
   161                           	callstack 0
   162   000001                     i2MSdelay@val:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166   000001                     	ds	2
   167   000003                     i2MSdelay@i:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x2
   171   000003                     	ds	2
   172   000005                     i2MSdelay@j:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x4
   176   000005                     	ds	2
   177   000007                     i2LCD_Command@cmd:
   178                           	callstack 0
   179   000007                     i2LCD_Char@dat:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x6
   183   000007                     	ds	1
   184   000008                     i2LCD_String@msg:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x7
   188   000008                     	ds	1
   189   000009                     i2LCD_String_xy@pos:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x8
   193   000009                     	ds	1
   194   00000A                     i2LCD_String_xy@msg:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x9
   198   00000A                     	ds	1
   199   00000B                     i2LCD_String_xy@row:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xA
   203   00000B                     	ds	1
   204   00000C                     i2LCD_String_xy@location:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xB
   208   00000C                     	ds	1
   209   00000D                     ??_INT0_ISR:
   210                           
   211                           ; 1 bytes @ 0xC
   212   00000D                     	ds	4
   213   000011                     MSdelay@val:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x10
   217   000011                     	ds	2
   218   000013                     MSdelay@i:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x12
   222   000013                     	ds	2
   223   000015                     MSdelay@j:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x14
   227   000015                     	ds	2
   228   000017                     LCD_Command@cmd:
   229                           	callstack 0
   230   000017                     LCD_Char@dat:
   231                           	callstack 0
   232   000017                     LightScan@pinNumber:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x16
   236   000017                     	ds	1
   237   000018                     LCD_String@msg:
   238                           	callstack 0
   239   000018                     LightScan@counter:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x17
   243   000018                     	ds	1
   244   000019                     LCD_String_xy@pos:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x18
   248   000019                     	ds	1
   249   00001A                     LCD_String_xy@msg:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x19
   253   00001A                     	ds	1
   254   00001B                     LCD_String_xy@row:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x1A
   258   00001B                     	ds	1
   259   00001C                     LCD_String_xy@location:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x1B
   263   00001C                     	ds	1
   264   00001D                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x1C
   267   00001D                     	ds	2
   268                           
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 30 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   292 ;;Total ram usage:        2 bytes
   293 ;; Hardware stack levels required when called: 9
   294 ;; This function calls:
   295 ;;		_LCD_Char
   296 ;;		_LCD_Clear
   297 ;;		_LCD_Init
   298 ;;		_LCD_String_xy
   299 ;;		_LightScan
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306   00415C                     __ptext0:
   307                           	callstack 0
   308   00415C                     _main:
   309                           	callstack 22
   310   00415C                     
   311                           ;main.c: 32:     TRISA = 0xFF;
   312   00415C  68C2               	setf	194,c	;volatile
   313   00415E                     
   314                           ;main.c: 33:     ANSELA = 0;
   315   00415E  0E00               	movlw	0
   316   004160  013A               	movlb	58	; () banked
   317   004162  6F40               	movwf	64,b	;volatile
   318                           
   319                           ;main.c: 34:     TRISC = 0x00;
   320   004164  0E00               	movlw	0
   321   004166  6EC4               	movwf	196,c	;volatile
   322                           
   323                           ;main.c: 35:     ANSELC = 0;
   324   004168  0E00               	movlw	0
   325   00416A  6F60               	movwf	96,b	;volatile
   326   00416C                     
   327                           ; BSR set to: 58
   328                           ;main.c: 36:     INTCON0bits.INT0EDG = 1;
   329   00416C  80D2               	bsf	210,0,c	;volatile
   330   00416E                     
   331                           ; BSR set to: 58
   332                           ;main.c: 37:     INT0PPS = PORTAbits.RA0;
   333   00416E  0E00               	movlw	0
   334   004170  B0CA               	btfsc	202,0,c	;volatile
   335   004172  0E01               	movlw	1
   336   004174  6FC0               	movwf	192,b	;volatile
   337   004176                     
   338                           ; BSR set to: 58
   339                           ;main.c: 38:     WPUA=0xFF;
   340   004176  6941               	setf	65,b	;volatile
   341   004178                     
   342                           ; BSR set to: 58
   343                           ;main.c: 39:     INTCON0bits.IPEN = 1;
   344   004178  8AD2               	bsf	210,5,c	;volatile
   345   00417A                     
   346                           ; BSR set to: 58
   347                           ;main.c: 40:     INTCON0bits.GIEH = 1;
   348   00417A  8ED2               	bsf	210,7,c	;volatile
   349   00417C                     
   350                           ; BSR set to: 58
   351                           ;main.c: 41:     INTCON0bits.GIEL = 1;
   352   00417C  8CD2               	bsf	210,6,c	;volatile
   353   00417E                     
   354                           ; BSR set to: 58
   355                           ;main.c: 42:     INTCON0bits.INT0EDG = 1;
   356   00417E  80D2               	bsf	210,0,c	;volatile
   357   004180                     
   358                           ; BSR set to: 58
   359                           ;main.c: 43:     IPR1bits.INT0IP = 1;
   360   004180  0139               	movlb	57	; () banked
   361   004182  8181               	bsf	129,0,b	;volatile
   362   004184                     
   363                           ; BSR set to: 57
   364                           ;main.c: 44:     PIE1bits.INT0IE = 1;
   365   004184  8191               	bsf	145,0,b	;volatile
   366   004186                     
   367                           ; BSR set to: 57
   368                           ;main.c: 46:     PIR1bits.INT0IF = 0;
   369   004186  91A1               	bcf	161,0,b	;volatile
   370   004188                     
   371                           ; BSR set to: 57
   372                           ;main.c: 49:     LCD_Init();
   373   004188  ECCB  F021         	call	_LCD_Init	;wreg free
   374   00418C                     
   375                           ;main.c: 50:     LCD_Clear();
   376   00418C  EC2D  F022         	call	_LCD_Clear	;wreg free
   377   004190                     
   378                           ;main.c: 51:     input = LightScan(1);
   379   004190  0E01               	movlw	1
   380   004192  EC59  F020         	call	_LightScan
   381   004196  6E20               	movwf	_input^0,c
   382   004198                     
   383                           ;main.c: 52:     LCD_Char(input + '0');
   384   004198  5020               	movf	_input^0,w,c
   385   00419A  0F30               	addlw	48
   386   00419C  ECF1  F021         	call	_LCD_Char
   387   0041A0                     
   388                           ;main.c: 53:     input2 = LightScan(1);
   389   0041A0  0E01               	movlw	1
   390   0041A2  EC59  F020         	call	_LightScan
   391   0041A6  6E1F               	movwf	_input2^0,c
   392   0041A8                     
   393                           ;main.c: 54:     LCD_Char(input2 + '0');
   394   0041A8  501F               	movf	_input2^0,w,c
   395   0041AA  0F30               	addlw	48
   396   0041AC  ECF1  F021         	call	_LCD_Char
   397   0041B0                     
   398                           ;main.c: 55:     LCD_String_xy(2,0,"out of scan");
   399   0041B0  0E00               	movlw	0
   400   0041B2  6E19               	movwf	LCD_String_xy@pos^0,c
   401   0041B4  0E0F               	movlw	low STR_2
   402   0041B6  6E1A               	movwf	LCD_String_xy@msg^0,c
   403   0041B8  0E02               	movlw	2
   404   0041BA  EC5F  F021         	call	_LCD_String_xy
   405   0041BE                     
   406                           ;main.c: 56:     _delay((unsigned long)((10000)*(4000000/4000.0)));
   407   0041BE  0E33               	movlw	51
   408   0041C0  6E1E               	movwf	(??_main+1)^0,c
   409   0041C2  0EBB               	movlw	187
   410   0041C4  6E1D               	movwf	??_main^0,c
   411   0041C6  0EE0               	movlw	224
   412   0041C8                     u317:
   413   0041C8  2EE8               	decfsz	wreg,f,c
   414   0041CA  D7FE               	bra	u317
   415   0041CC  2E1D               	decfsz	??_main^0,f,c
   416   0041CE  D7FC               	bra	u317
   417   0041D0  2E1E               	decfsz	(??_main+1)^0,f,c
   418   0041D2  D7FA               	bra	u317
   419   0041D4  EF57  F020         	goto	start
   420   0041D8                     __end_of_main:
   421                           	callstack 0
   422                           
   423 ;; *************** function _LightScan *****************
   424 ;; Defined at:
   425 ;;		line 108 in file "./LCD.h"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  pinNumber       1    wreg     unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  pinNumber       1   22[COMRAM] unsigned char 
   430 ;;  counter         1   23[COMRAM] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      unsigned char 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 6
   447 ;; This function calls:
   448 ;;		_MSdelay
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text1
   455   0040B2                     __ptext1:
   456                           	callstack 0
   457   0040B2                     _LightScan:
   458                           	callstack 24
   459                           
   460                           ;incstack = 0
   461                           ;LightScan@pinNumber stored from wreg
   462   0040B2  6E17               	movwf	LightScan@pinNumber^0,c
   463   0040B4                     
   464                           ;./LCD.h: 110:     unsigned char counter =0;
   465   0040B4  0E00               	movlw	0
   466   0040B6  6E18               	movwf	LightScan@counter^0,c
   467   0040B8                     
   468                           ;./LCD.h: 112:     if (pinNumber == 1)
   469   0040B8  0417               	decf	LightScan@pinNumber^0,w,c
   470   0040BA  A4D8               	btfss	status,2,c
   471   0040BC  EF62  F020         	goto	u231
   472   0040C0  EF64  F020         	goto	u230
   473   0040C4                     u231:
   474   0040C4  EFA3  F020         	goto	l1166
   475   0040C8                     u230:
   476   0040C8  EF80  F020         	goto	l1150
   477   0040CC                     l88:
   478                           
   479                           ;./LCD.h: 115:     {;./LCD.h: 116:         if (PORTAbits.RA1 == 1)
   480   0040CC  A2CA               	btfss	202,1,c	;volatile
   481   0040CE  EF6B  F020         	goto	u241
   482   0040D2  EF6D  F020         	goto	u240
   483   0040D6                     u241:
   484   0040D6  EF80  F020         	goto	l1150
   485   0040DA                     u240:
   486   0040DA                     
   487                           ;./LCD.h: 117:         {;./LCD.h: 118:             counter ++;
   488   0040DA  2A18               	incf	LightScan@counter^0,f,c
   489   0040DC                     
   490                           ;./LCD.h: 119:             PORTCbits.RC7 = 1;
   491   0040DC  8ECC               	bsf	204,7,c	;volatile
   492   0040DE                     
   493                           ;./LCD.h: 120:             MSdelay(1000);
   494   0040DE  0E03               	movlw	3
   495   0040E0  6E12               	movwf	(MSdelay@val+1)^0,c
   496   0040E2  0EE8               	movlw	232
   497   0040E4  6E11               	movwf	MSdelay@val^0,c
   498   0040E6  EC15  F021         	call	_MSdelay	;wreg free
   499   0040EA                     
   500                           ;./LCD.h: 121:             PORTCbits.RC7 = 0;
   501   0040EA  9ECC               	bcf	204,7,c	;volatile
   502   0040EC                     
   503                           ;./LCD.h: 122:             if(PORTAbits.RA3 == 1)
   504   0040EC  A6CA               	btfss	202,3,c	;volatile
   505   0040EE  EF7B  F020         	goto	u251
   506   0040F2  EF7D  F020         	goto	u250
   507   0040F6                     u251:
   508   0040F6  EF80  F020         	goto	l1150
   509   0040FA                     u250:
   510   0040FA                     l1146:
   511                           
   512                           ;./LCD.h: 123:                 return counter;
   513   0040FA  5018               	movf	LightScan@counter^0,w,c
   514   0040FC  EFAD  F020         	goto	l91
   515   004100                     l1150:
   516                           
   517                           ;./LCD.h: 114:     while(counter < 4)
   518   004100  0E03               	movlw	3
   519   004102  6418               	cpfsgt	LightScan@counter^0,c
   520   004104  EF86  F020         	goto	u261
   521   004108  EF88  F020         	goto	u260
   522   00410C                     u261:
   523   00410C  EF66  F020         	goto	l88
   524   004110                     u260:
   525   004110  EF7D  F020         	goto	l1146
   526   004114                     l95:
   527                           
   528                           ;./LCD.h: 130:     {;./LCD.h: 131:         if (PORTAbits.RA2 == 1)
   529   004114  A4CA               	btfss	202,2,c	;volatile
   530   004116  EF8F  F020         	goto	u271
   531   00411A  EF91  F020         	goto	u270
   532   00411E                     u271:
   533   00411E  EFA3  F020         	goto	l1166
   534   004122                     u270:
   535   004122                     
   536                           ;./LCD.h: 132:         {;./LCD.h: 133:             counter ++;
   537   004122  2A18               	incf	LightScan@counter^0,f,c
   538   004124                     
   539                           ;./LCD.h: 134:             PORTCbits.RC7 = 1;
   540   004124  8ECC               	bsf	204,7,c	;volatile
   541   004126                     
   542                           ;./LCD.h: 135:             MSdelay(1000);
   543   004126  0E03               	movlw	3
   544   004128  6E12               	movwf	(MSdelay@val+1)^0,c
   545   00412A  0EE8               	movlw	232
   546   00412C  6E11               	movwf	MSdelay@val^0,c
   547   00412E  EC15  F021         	call	_MSdelay	;wreg free
   548   004132                     
   549                           ;./LCD.h: 136:             PORTCbits.RC7 = 0;
   550   004132  9ECC               	bcf	204,7,c	;volatile
   551   004134                     
   552                           ;./LCD.h: 137:             if(PORTAbits.RA3 == 1)
   553   004134  A6CA               	btfss	202,3,c	;volatile
   554   004136  EF9F  F020         	goto	u281
   555   00413A  EFA1  F020         	goto	u280
   556   00413E                     u281:
   557   00413E  EFA3  F020         	goto	l1166
   558   004142                     u280:
   559   004142  EF7D  F020         	goto	l1146
   560   004146                     l1166:
   561                           
   562                           ;./LCD.h: 129:          while(counter < 4)
   563   004146  0E03               	movlw	3
   564   004148  6418               	cpfsgt	LightScan@counter^0,c
   565   00414A  EFA9  F020         	goto	u291
   566   00414E  EFAB  F020         	goto	u290
   567   004152                     u291:
   568   004152  EF8A  F020         	goto	l95
   569   004156                     u290:
   570   004156  EF7D  F020         	goto	l1146
   571   00415A                     l91:
   572   00415A  0012               	return		;funcret
   573   00415C                     __end_of_LightScan:
   574                           	callstack 0
   575                           
   576 ;; *************** function _LCD_String_xy *****************
   577 ;; Defined at:
   578 ;;		line 84 in file "./LCD.h"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  row             1    wreg     unsigned char 
   581 ;;  pos             1   24[COMRAM] unsigned char 
   582 ;;  msg             1   25[COMRAM] PTR const unsigned char 
   583 ;;		 -> STR_2(12), STR_1(14), 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  row             1   26[COMRAM] unsigned char 
   586 ;;  location        1   27[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   600 ;;Total ram usage:        4 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 8
   603 ;; This function calls:
   604 ;;		_LCD_Command
   605 ;;		_LCD_String
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text2
   612   0042BE                     __ptext2:
   613                           	callstack 0
   614   0042BE                     _LCD_String_xy:
   615                           	callstack 22
   616                           
   617                           ;incstack = 0
   618                           ;LCD_String_xy@row stored from wreg
   619   0042BE  6E1B               	movwf	LCD_String_xy@row^0,c
   620   0042C0                     
   621                           ;./LCD.h: 87:     if(row<=1)
   622   0042C0  0E02               	movlw	2
   623   0042C2  601B               	cpfslt	LCD_String_xy@row^0,c
   624   0042C4  EF66  F021         	goto	u221
   625   0042C8  EF68  F021         	goto	u220
   626   0042CC                     u221:
   627   0042CC  EF71  F021         	goto	l1124
   628   0042D0                     u220:
   629   0042D0                     
   630                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
   631   0042D0  5019               	movf	LCD_String_xy@pos^0,w,c
   632   0042D2  0B0F               	andlw	15
   633   0042D4  0980               	iorlw	128
   634   0042D6  6E1C               	movwf	LCD_String_xy@location^0,c
   635   0042D8                     
   636                           ;./LCD.h: 90:         LCD_Command(location);
   637   0042D8  501C               	movf	LCD_String_xy@location^0,w,c
   638   0042DA  EC00  F022         	call	_LCD_Command
   639                           
   640                           ;./LCD.h: 91:     }
   641   0042DE  EF78  F021         	goto	l1128
   642   0042E2                     l1124:
   643                           
   644                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
   645   0042E2  5019               	movf	LCD_String_xy@pos^0,w,c
   646   0042E4  0B0F               	andlw	15
   647   0042E6  09C0               	iorlw	192
   648   0042E8  6E1C               	movwf	LCD_String_xy@location^0,c
   649   0042EA                     
   650                           ;./LCD.h: 95:         LCD_Command(location);
   651   0042EA  501C               	movf	LCD_String_xy@location^0,w,c
   652   0042EC  EC00  F022         	call	_LCD_Command
   653   0042F0                     l1128:
   654                           
   655                           ;./LCD.h: 97:     LCD_String(msg);
   656   0042F0  C01A  F018         	movff	LCD_String_xy@msg,LCD_String@msg
   657   0042F4  EC9B  F021         	call	_LCD_String	;wreg free
   658   0042F8  0012               	return		;funcret
   659   0042FA                     __end_of_LCD_String_xy:
   660                           	callstack 0
   661                           
   662 ;; *************** function _LCD_String *****************
   663 ;; Defined at:
   664 ;;		line 75 in file "./LCD.h"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  msg             1   23[COMRAM] PTR const unsigned char 
   667 ;;		 -> STR_2(12), STR_1(14), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   679 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   683 ;;Total ram usage:        1 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 7
   686 ;; This function calls:
   687 ;;		_LCD_Char
   688 ;; This function is called by:
   689 ;;		_LCD_String_xy
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text3
   694   004336                     __ptext3:
   695                           	callstack 0
   696   004336                     _LCD_String:
   697                           	callstack 22
   698   004336                     
   699                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
   700   004336  EFA5  F021         	goto	l1086
   701   00433A                     l1082:
   702                           
   703                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
   704   00433A  0060  F063  FFF6   	movff	LCD_String@msg,tblptrl
   705   004340                     	if	0	;There is only one active tblptr byte
   706   004340                     	endif
   707   004340                     	if	0	;tblptru may be non-zero
   708   004340                     	endif
   709   004340                     	if	0	;tblptru may be non-zero
   710   004340                     	endif
   711   004340  0008               	tblrd		*
   712   004342  50F5               	movf	tablat,w,c
   713   004344  ECF1  F021         	call	_LCD_Char
   714   004348                     
   715                           ;./LCD.h: 80:       msg++;
   716   004348  2A18               	incf	LCD_String@msg^0,f,c
   717   00434A                     l1086:
   718                           
   719                           ;./LCD.h: 77:     while((*msg)!=0)
   720   00434A  0060  F063  FFF6   	movff	LCD_String@msg,tblptrl
   721   004350                     	if	0	;There is only one active tblptr byte
   722   004350                     	endif
   723   004350                     	if	0	;tblptru may be non-zero
   724   004350                     	endif
   725   004350                     	if	0	;tblptru may be non-zero
   726   004350                     	endif
   727   004350  0008               	tblrd		*
   728   004352  50F5               	movf	tablat,w,c
   729   004354  0900               	iorlw	0
   730   004356  A4D8               	btfss	status,2,c
   731   004358  EFB0  F021         	goto	u201
   732   00435C  EFB2  F021         	goto	u200
   733   004360                     u201:
   734   004360  EF9D  F021         	goto	l1082
   735   004364                     u200:
   736   004364  0012               	return		;funcret
   737   004366                     __end_of_LCD_String:
   738                           	callstack 0
   739                           
   740 ;; *************** function _LCD_Char *****************
   741 ;; Defined at:
   742 ;;		line 64 in file "./LCD.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  dat             1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  dat             1   22[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 6
   763 ;; This function calls:
   764 ;;		_MSdelay
   765 ;; This function is called by:
   766 ;;		_LCD_String
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772   0043E2                     __ptext4:
   773                           	callstack 0
   774   0043E2                     _LCD_Char:
   775                           	callstack 22
   776                           
   777                           ;incstack = 0
   778                           ;LCD_Char@dat stored from wreg
   779   0043E2  6E17               	movwf	LCD_Char@dat^0,c
   780   0043E4                     
   781                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
   782   0043E4  0060  F05F  FFBB   	movff	LCD_Char@dat,16315	;volatile
   783   0043EA                     
   784                           ;./LCD.h: 67:     LATD0 = 1;
   785   0043EA  80BD               	bsf	16317,0,c	;volatile
   786   0043EC                     
   787                           ;./LCD.h: 68:     LATD1=1;
   788   0043EC  82BD               	bsf	16317,1,c	;volatile
   789   0043EE                     
   790                           ;./LCD.h: 69:     __nop();
   791   0043EE  0000               	nop	
   792   0043F0                     
   793                           ;./LCD.h: 70:     LATD1=0;
   794   0043F0  92BD               	bcf	16317,1,c	;volatile
   795   0043F2                     
   796                           ;./LCD.h: 71:     MSdelay(1);
   797   0043F2  0E00               	movlw	0
   798   0043F4  6E12               	movwf	(MSdelay@val+1)^0,c
   799   0043F6  0E01               	movlw	1
   800   0043F8  6E11               	movwf	MSdelay@val^0,c
   801   0043FA  EC15  F021         	call	_MSdelay	;wreg free
   802   0043FE  0012               	return		;funcret
   803   004400                     __end_of_LCD_Char:
   804                           	callstack 0
   805                           
   806 ;; *************** function _LCD_Init *****************
   807 ;; Defined at:
   808 ;;		line 38 in file "./LCD.h"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 7
   829 ;; This function calls:
   830 ;;		_LCD_Command
   831 ;;		_MSdelay
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text5
   838   004396                     __ptext5:
   839                           	callstack 0
   840   004396                     _LCD_Init:
   841                           	callstack 23
   842   004396                     
   843                           ;./LCD.h: 40:     MSdelay(15);
   844   004396  0E00               	movlw	0
   845   004398  6E12               	movwf	(MSdelay@val+1)^0,c
   846   00439A  0E0F               	movlw	15
   847   00439C  6E11               	movwf	MSdelay@val^0,c
   848   00439E  EC15  F021         	call	_MSdelay	;wreg free
   849   0043A2                     
   850                           ;./LCD.h: 41:     TRISB = 0x00;
   851   0043A2  0E00               	movlw	0
   852   0043A4  6EC3               	movwf	195,c	;volatile
   853   0043A6                     
   854                           ;./LCD.h: 42:     TRISD = 0x00;
   855   0043A6  0E00               	movlw	0
   856   0043A8  6EC5               	movwf	197,c	;volatile
   857                           
   858                           ;./LCD.h: 43:     LCD_Command(0x01);
   859   0043AA  0E01               	movlw	1
   860   0043AC  EC00  F022         	call	_LCD_Command
   861                           
   862                           ;./LCD.h: 44:     LCD_Command(0x38);
   863   0043B0  0E38               	movlw	56
   864   0043B2  EC00  F022         	call	_LCD_Command
   865                           
   866                           ;./LCD.h: 45:     LCD_Command(0x0c);
   867   0043B6  0E0C               	movlw	12
   868   0043B8  EC00  F022         	call	_LCD_Command
   869                           
   870                           ;./LCD.h: 46:     LCD_Command(0x06);
   871   0043BC  0E06               	movlw	6
   872   0043BE  EC00  F022         	call	_LCD_Command
   873   0043C2  0012               	return		;funcret
   874   0043C4                     __end_of_LCD_Init:
   875                           	callstack 0
   876                           
   877 ;; *************** function _LCD_Clear *****************
   878 ;; Defined at:
   879 ;;		line 49 in file "./LCD.h"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 7
   900 ;; This function calls:
   901 ;;		_LCD_Command
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text6
   908   00445A                     __ptext6:
   909                           	callstack 0
   910   00445A                     _LCD_Clear:
   911                           	callstack 23
   912   00445A                     
   913                           ;./LCD.h: 51:         LCD_Command(0x01);
   914   00445A  0E01               	movlw	1
   915   00445C  EC00  F022         	call	_LCD_Command
   916   004460  0012               	return		;funcret
   917   004462                     __end_of_LCD_Clear:
   918                           	callstack 0
   919                           
   920 ;; *************** function _LCD_Command *****************
   921 ;; Defined at:
   922 ;;		line 54 in file "./LCD.h"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  cmd             1    wreg     unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  cmd             1   22[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 6
   943 ;; This function calls:
   944 ;;		_MSdelay
   945 ;; This function is called by:
   946 ;;		_LCD_Init
   947 ;;		_LCD_Clear
   948 ;;		_LCD_String_xy
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text7
   953   004400                     __ptext7:
   954                           	callstack 0
   955   004400                     _LCD_Command:
   956                           	callstack 23
   957                           
   958                           ;incstack = 0
   959                           ;LCD_Command@cmd stored from wreg
   960   004400  6E17               	movwf	LCD_Command@cmd^0,c
   961   004402                     
   962                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
   963   004402  0060  F05F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   964   004408                     
   965                           ;./LCD.h: 57:     LATD0 = 0;
   966   004408  90BD               	bcf	16317,0,c	;volatile
   967   00440A                     
   968                           ;./LCD.h: 58:     LATD1 = 1;
   969   00440A  82BD               	bsf	16317,1,c	;volatile
   970   00440C                     
   971                           ;./LCD.h: 59:     __nop();
   972   00440C  0000               	nop	
   973   00440E                     
   974                           ;./LCD.h: 60:     LATD1 = 0;
   975   00440E  92BD               	bcf	16317,1,c	;volatile
   976   004410                     
   977                           ;./LCD.h: 61:     MSdelay(3);
   978   004410  0E00               	movlw	0
   979   004412  6E12               	movwf	(MSdelay@val+1)^0,c
   980   004414  0E03               	movlw	3
   981   004416  6E11               	movwf	MSdelay@val^0,c
   982   004418  EC15  F021         	call	_MSdelay	;wreg free
   983   00441C  0012               	return		;funcret
   984   00441E                     __end_of_LCD_Command:
   985                           	callstack 0
   986                           
   987 ;; *************** function _MSdelay *****************
   988 ;; Defined at:
   989 ;;		line 101 in file "./LCD.h"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  val             2   16[COMRAM] unsigned int 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  j               2   20[COMRAM] unsigned int 
   994 ;;  i               2   18[COMRAM] unsigned int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 5
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_LCD_Init
  1015 ;;		_LCD_Command
  1016 ;;		_LCD_Char
  1017 ;;		_LightScan
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text8
  1022   00422A                     __ptext8:
  1023                           	callstack 0
  1024   00422A                     _MSdelay:
  1025                           	callstack 24
  1026   00422A                     
  1027                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1028   00422A  0E00               	movlw	0
  1029   00422C  6E14               	movwf	(MSdelay@i+1)^0,c
  1030   00422E  0E00               	movlw	0
  1031   004230  6E13               	movwf	MSdelay@i^0,c
  1032   004232  EF2E  F021         	goto	l1026
  1033   004236                     l1014:
  1034                           
  1035                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1036   004236  0E00               	movlw	0
  1037   004238  6E16               	movwf	(MSdelay@j+1)^0,c
  1038   00423A  0E00               	movlw	0
  1039   00423C  6E15               	movwf	MSdelay@j^0,c
  1040   00423E                     l1020:
  1041   00423E  4A15               	infsnz	MSdelay@j^0,f,c
  1042   004240  2A16               	incf	(MSdelay@j+1)^0,f,c
  1043   004242  5016               	movf	(MSdelay@j+1)^0,w,c
  1044   004244  E109               	bnz	u160
  1045   004246  0EA5               	movlw	165
  1046   004248  5C15               	subwf	MSdelay@j^0,w,c
  1047   00424A  A0D8               	btfss	status,0,c
  1048   00424C  EF2A  F021         	goto	u161
  1049   004250  EF2C  F021         	goto	u160
  1050   004254                     u161:
  1051   004254  EF1F  F021         	goto	l1020
  1052   004258                     u160:
  1053   004258  4A13               	infsnz	MSdelay@i^0,f,c
  1054   00425A  2A14               	incf	(MSdelay@i+1)^0,f,c
  1055   00425C                     l1026:
  1056   00425C  5011               	movf	MSdelay@val^0,w,c
  1057   00425E  5C13               	subwf	MSdelay@i^0,w,c
  1058   004260  5012               	movf	(MSdelay@val+1)^0,w,c
  1059   004262  5814               	subwfb	(MSdelay@i+1)^0,w,c
  1060   004264  A0D8               	btfss	status,0,c
  1061   004266  EF37  F021         	goto	u171
  1062   00426A  EF39  F021         	goto	u170
  1063   00426E                     u171:
  1064   00426E  EF1B  F021         	goto	l1014
  1065   004272                     u170:
  1066   004272  0012               	return		;funcret
  1067   004274                     __end_of_MSdelay:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _INT0_ISR *****************
  1071 ;; Defined at:
  1072 ;;		line 21 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1090 ;;Total ram usage:        4 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 4
  1093 ;; This function calls:
  1094 ;;		i2_LCD_String_xy
  1095 ;;		i2_MSdelay
  1096 ;; This function is called by:
  1097 ;;		Interrupt level 2
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text9
  1102   0041D8                     __ptext9:
  1103                           	callstack 0
  1104   0041D8                     _INT0_ISR:
  1105                           	callstack 22
  1106                           
  1107                           ;incstack = 0
  1108   0041D8  006F FFD8  F00D    	movff	tblptrl,??_INT0_ISR
  1109   0041DE  006F FFDC  F00E    	movff	tblptrh,??_INT0_ISR+1
  1110   0041E4  006F FFE0  F00F    	movff	tblptru,??_INT0_ISR+2
  1111   0041EA  006F FFD4  F010    	movff	tablat,??_INT0_ISR+3
  1112   0041F0                     
  1113                           ;main.c: 23:     PORTCbits.RC7 = 1;
  1114   0041F0  8ECC               	bsf	204,7,c	;volatile
  1115   0041F2                     
  1116                           ;main.c: 24:     MSdelay(1000);
  1117   0041F2  0E03               	movlw	3
  1118   0041F4  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1119   0041F6  0EE8               	movlw	232
  1120   0041F8  6E01               	movwf	i2MSdelay@val^0,c
  1121   0041FA  EC3A  F021         	call	i2_MSdelay	;wreg free
  1122   0041FE                     
  1123                           ;main.c: 25:     LCD_String_xy(2,0,"interrupt son");
  1124   0041FE  0E00               	movlw	0
  1125   004200  6E09               	movwf	i2LCD_String_xy@pos^0,c
  1126   004202  0E01               	movlw	low STR_1
  1127   004204  6E0A               	movwf	i2LCD_String_xy@msg^0,c
  1128   004206  0E02               	movlw	2
  1129   004208  EC7D  F021         	call	i2_LCD_String_xy
  1130   00420C                     
  1131                           ;main.c: 26:     PIR1bits.INT0IF = 0;
  1132   00420C  0139               	movlb	57	; () banked
  1133   00420E  91A1               	bcf	161,0,b	;volatile
  1134   004210                     
  1135                           ; BSR set to: 57
  1136   004210  0060  F043  FFF5   	movff	??_INT0_ISR+3,tablat
  1137   004216  0060  F03F  FFF8   	movff	??_INT0_ISR+2,tblptru
  1138   00421C  0060  F03B  FFF7   	movff	??_INT0_ISR+1,tblptrh
  1139   004222  0060  F037  FFF6   	movff	??_INT0_ISR,tblptrl
  1140   004228  0011               	retfie		f
  1141   00422A                     __end_of_INT0_ISR:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function i2_LCD_String_xy *****************
  1145 ;; Defined at:
  1146 ;;		line 84 in file "./LCD.h"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  row             1    wreg     unsigned char 
  1149 ;;  pos             1    8[COMRAM] unsigned char 
  1150 ;;  msg             1    9[COMRAM] PTR const unsigned char 
  1151 ;;		 -> STR_2(12), STR_1(14), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  row             1   10[COMRAM] unsigned char 
  1154 ;;  location        1   11[COMRAM] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1167 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1168 ;;Total ram usage:        4 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 3
  1171 ;; This function calls:
  1172 ;;		i2_LCD_Command
  1173 ;;		i2_LCD_String
  1174 ;; This function is called by:
  1175 ;;		_INT0_ISR
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text10
  1180   0042FA                     __ptext10:
  1181                           	callstack 0
  1182   0042FA                     i2_LCD_String_xy:
  1183                           	callstack 22
  1184                           
  1185                           ; BSR set to: 57
  1186                           ;incstack = 0
  1187                           ;i2LCD_String_xy@row stored from wreg
  1188   0042FA  6E0B               	movwf	i2LCD_String_xy@row^0,c
  1189   0042FC                     
  1190                           ;./LCD.h: 87:     if(row<=1)
  1191   0042FC  0E02               	movlw	2
  1192   0042FE  600B               	cpfslt	i2LCD_String_xy@row^0,c
  1193   004300  EF84  F021         	goto	i2u30_41
  1194   004304  EF86  F021         	goto	i2u30_40
  1195   004308                     i2u30_41:
  1196   004308  EF8F  F021         	goto	i2l1180
  1197   00430C                     i2u30_40:
  1198   00430C                     
  1199                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
  1200   00430C  5009               	movf	i2LCD_String_xy@pos^0,w,c
  1201   00430E  0B0F               	andlw	15
  1202   004310  0980               	iorlw	128
  1203   004312  6E0C               	movwf	i2LCD_String_xy@location^0,c
  1204   004314                     
  1205                           ;./LCD.h: 90:         LCD_Command(location);
  1206   004314  500C               	movf	i2LCD_String_xy@location^0,w,c
  1207   004316  EC1E  F022         	call	i2_LCD_Command
  1208                           
  1209                           ;./LCD.h: 91:     }
  1210   00431A  EF96  F021         	goto	i2l1184
  1211   00431E                     i2l1180:
  1212                           
  1213                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
  1214   00431E  5009               	movf	i2LCD_String_xy@pos^0,w,c
  1215   004320  0B0F               	andlw	15
  1216   004322  09C0               	iorlw	192
  1217   004324  6E0C               	movwf	i2LCD_String_xy@location^0,c
  1218   004326                     
  1219                           ;./LCD.h: 95:         LCD_Command(location);
  1220   004326  500C               	movf	i2LCD_String_xy@location^0,w,c
  1221   004328  EC1E  F022         	call	i2_LCD_Command
  1222   00432C                     i2l1184:
  1223                           
  1224                           ;./LCD.h: 97:     LCD_String(msg);
  1225   00432C  C00A  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  1226   004330  ECB3  F021         	call	i2_LCD_String	;wreg free
  1227   004334  0012               	return		;funcret
  1228   004336                     __end_ofi2_LCD_String_xy:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function i2_LCD_String *****************
  1232 ;; Defined at:
  1233 ;;		line 75 in file "./LCD.h"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  msg             1    7[COMRAM] PTR const unsigned char 
  1236 ;;		 -> STR_2(12), STR_1(14), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1248 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 2
  1255 ;; This function calls:
  1256 ;;		i2_LCD_Char
  1257 ;; This function is called by:
  1258 ;;		i2_LCD_String_xy
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text11
  1263   004366                     __ptext11:
  1264                           	callstack 0
  1265   004366                     i2_LCD_String:
  1266                           	callstack 22
  1267   004366                     
  1268                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
  1269   004366  EFBD  F021         	goto	i2l1106
  1270   00436A                     i2l1102:
  1271                           
  1272                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
  1273   00436A  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  1274   004370                     	if	0	;There is only one active tblptr byte
  1275   004370                     	endif
  1276   004370                     	if	0	;tblptru may be non-zero
  1277   004370                     	endif
  1278   004370                     	if	0	;tblptru may be non-zero
  1279   004370                     	endif
  1280   004370  0008               	tblrd		*
  1281   004372  50F5               	movf	tablat,w,c
  1282   004374  EC0F  F022         	call	i2_LCD_Char
  1283   004378                     
  1284                           ;./LCD.h: 80:       msg++;
  1285   004378  2A08               	incf	i2LCD_String@msg^0,f,c
  1286   00437A                     i2l1106:
  1287                           
  1288                           ;./LCD.h: 77:     while((*msg)!=0)
  1289   00437A  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  1290   004380                     	if	0	;There is only one active tblptr byte
  1291   004380                     	endif
  1292   004380                     	if	0	;tblptru may be non-zero
  1293   004380                     	endif
  1294   004380                     	if	0	;tblptru may be non-zero
  1295   004380                     	endif
  1296   004380  0008               	tblrd		*
  1297   004382  50F5               	movf	tablat,w,c
  1298   004384  0900               	iorlw	0
  1299   004386  A4D8               	btfss	status,2,c
  1300   004388  EFC8  F021         	goto	i2u21_41
  1301   00438C  EFCA  F021         	goto	i2u21_40
  1302   004390                     i2u21_41:
  1303   004390  EFB5  F021         	goto	i2l1102
  1304   004394                     i2u21_40:
  1305   004394  0012               	return		;funcret
  1306   004396                     __end_ofi2_LCD_String:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function i2_LCD_Char *****************
  1310 ;; Defined at:
  1311 ;;		line 64 in file "./LCD.h"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  dat             1    wreg     unsigned char 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  dat             1    6[COMRAM] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1329 ;;Total ram usage:        1 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 1
  1332 ;; This function calls:
  1333 ;;		i2_MSdelay
  1334 ;; This function is called by:
  1335 ;;		i2_LCD_String
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text12
  1340   00441E                     __ptext12:
  1341                           	callstack 0
  1342   00441E                     i2_LCD_Char:
  1343                           	callstack 22
  1344                           
  1345                           ;incstack = 0
  1346                           ;i2LCD_Char@dat stored from wreg
  1347   00441E  6E07               	movwf	i2LCD_Char@dat^0,c
  1348   004420                     
  1349                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
  1350   004420  0060  F01F  FFBB   	movff	i2LCD_Char@dat,16315	;volatile
  1351   004426                     
  1352                           ;./LCD.h: 67:     LATD0 = 1;
  1353   004426  80BD               	bsf	16317,0,c	;volatile
  1354   004428                     
  1355                           ;./LCD.h: 68:     LATD1=1;
  1356   004428  82BD               	bsf	16317,1,c	;volatile
  1357   00442A                     
  1358                           ;./LCD.h: 69:     __nop();
  1359   00442A  0000               	nop	
  1360   00442C                     
  1361                           ;./LCD.h: 70:     LATD1=0;
  1362   00442C  92BD               	bcf	16317,1,c	;volatile
  1363   00442E                     
  1364                           ;./LCD.h: 71:     MSdelay(1);
  1365   00442E  0E00               	movlw	0
  1366   004430  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1367   004432  0E01               	movlw	1
  1368   004434  6E01               	movwf	i2MSdelay@val^0,c
  1369   004436  EC3A  F021         	call	i2_MSdelay	;wreg free
  1370   00443A  0012               	return		;funcret
  1371   00443C                     __end_ofi2_LCD_Char:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function i2_LCD_Command *****************
  1375 ;; Defined at:
  1376 ;;		line 54 in file "./LCD.h"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  cmd             1    wreg     unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  cmd             1    6[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1394 ;;Total ram usage:        1 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 1
  1397 ;; This function calls:
  1398 ;;		i2_MSdelay
  1399 ;; This function is called by:
  1400 ;;		i2_LCD_String_xy
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text13
  1405   00443C                     __ptext13:
  1406                           	callstack 0
  1407   00443C                     i2_LCD_Command:
  1408                           	callstack 23
  1409                           
  1410                           ;incstack = 0
  1411                           ;i2LCD_Command@cmd stored from wreg
  1412   00443C  6E07               	movwf	i2LCD_Command@cmd^0,c
  1413   00443E                     
  1414                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
  1415   00443E  0060  F01F  FFBB   	movff	i2LCD_Command@cmd,16315	;volatile
  1416   004444                     
  1417                           ;./LCD.h: 57:     LATD0 = 0;
  1418   004444  90BD               	bcf	16317,0,c	;volatile
  1419   004446                     
  1420                           ;./LCD.h: 58:     LATD1 = 1;
  1421   004446  82BD               	bsf	16317,1,c	;volatile
  1422   004448                     
  1423                           ;./LCD.h: 59:     __nop();
  1424   004448  0000               	nop	
  1425   00444A                     
  1426                           ;./LCD.h: 60:     LATD1 = 0;
  1427   00444A  92BD               	bcf	16317,1,c	;volatile
  1428   00444C                     
  1429                           ;./LCD.h: 61:     MSdelay(3);
  1430   00444C  0E00               	movlw	0
  1431   00444E  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1432   004450  0E03               	movlw	3
  1433   004452  6E01               	movwf	i2MSdelay@val^0,c
  1434   004454  EC3A  F021         	call	i2_MSdelay	;wreg free
  1435   004458  0012               	return		;funcret
  1436   00445A                     __end_ofi2_LCD_Command:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function i2_MSdelay *****************
  1440 ;; Defined at:
  1441 ;;		line 101 in file "./LCD.h"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  val             2    0[COMRAM] unsigned int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  j               2    4[COMRAM] unsigned int 
  1446 ;;  i               2    2[COMRAM] unsigned int 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1457 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1460 ;;Total ram usage:        6 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_INT0_ISR
  1466 ;;		i2_LCD_Command
  1467 ;;		i2_LCD_Char
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text14
  1472   004274                     __ptext14:
  1473                           	callstack 0
  1474   004274                     i2_MSdelay:
  1475                           	callstack 25
  1476   004274                     
  1477                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1478   004274  0E00               	movlw	0
  1479   004276  6E04               	movwf	(i2MSdelay@i+1)^0,c
  1480   004278  0E00               	movlw	0
  1481   00427A  6E03               	movwf	i2MSdelay@i^0,c
  1482   00427C  EF53  F021         	goto	i2l1042
  1483   004280                     i2l1030:
  1484                           
  1485                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1486   004280  0E00               	movlw	0
  1487   004282  6E06               	movwf	(i2MSdelay@j+1)^0,c
  1488   004284  0E00               	movlw	0
  1489   004286  6E05               	movwf	i2MSdelay@j^0,c
  1490   004288                     i2l1036:
  1491   004288  4A05               	infsnz	i2MSdelay@j^0,f,c
  1492   00428A  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  1493   00428C  5006               	movf	(i2MSdelay@j+1)^0,w,c
  1494   00428E  E109               	bnz	i2u18_40
  1495   004290  0EA5               	movlw	165
  1496   004292  5C05               	subwf	i2MSdelay@j^0,w,c
  1497   004294  A0D8               	btfss	status,0,c
  1498   004296  EF4F  F021         	goto	i2u18_41
  1499   00429A  EF51  F021         	goto	i2u18_40
  1500   00429E                     i2u18_41:
  1501   00429E  EF44  F021         	goto	i2l1036
  1502   0042A2                     i2u18_40:
  1503   0042A2  4A03               	infsnz	i2MSdelay@i^0,f,c
  1504   0042A4  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  1505   0042A6                     i2l1042:
  1506   0042A6  5001               	movf	i2MSdelay@val^0,w,c
  1507   0042A8  5C03               	subwf	i2MSdelay@i^0,w,c
  1508   0042AA  5002               	movf	(i2MSdelay@val+1)^0,w,c
  1509   0042AC  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  1510   0042AE  A0D8               	btfss	status,0,c
  1511   0042B0  EF5C  F021         	goto	i2u19_41
  1512   0042B4  EF5E  F021         	goto	i2u19_40
  1513   0042B8                     i2u19_41:
  1514   0042B8  EF40  F021         	goto	i2l1030
  1515   0042BC                     i2u19_40:
  1516   0042BC  0012               	return		;funcret
  1517   0042BE                     __end_ofi2_MSdelay:
  1518                           	callstack 0
  1519                           
  1520                           ;
  1521                           ; H/W Interrupt Vector Table @ 0x4008
  1522                           ;
  1523                           
  1524                           	psect	ivt0x4008
  1525   004008                     __pivt0x4008:
  1526                           	callstack 0
  1527   004008                     ivt0x4008_base:
  1528                           	callstack 0
  1529                           
  1530                           ; Vector 0 : SWINT
  1531   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1532                           
  1533                           ; Vector 1 : HLVD
  1534   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1535                           
  1536                           ; Vector 2 : OSF
  1537   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1538                           
  1539                           ; Vector 3 : CSW
  1540   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1541                           
  1542                           ; Vector 4 : NVM
  1543   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1544                           
  1545                           ; Vector 5 : SCAN
  1546   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1547                           
  1548                           ; Vector 6 : CRC
  1549   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1550                           
  1551                           ; Vector 7 : IOC
  1552   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1553                           
  1554                           ; Vector 8 : INT0
  1555   004018  1076               	dw	_INT0_ISR shr (0+2)
  1556                           
  1557                           ; Vector 9 : ZCD
  1558   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1559                           
  1560                           ; Vector 10 : AD
  1561   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1562                           
  1563                           ; Vector 11 : ADT
  1564   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1565                           
  1566                           ; Vector 12 : CMP1
  1567   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1568                           
  1569                           ; Vector 13 : SMT1
  1570   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1571                           
  1572                           ; Vector 14 : SMT1PRA
  1573   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1574                           
  1575                           ; Vector 15 : SMT1PRW
  1576   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1577                           
  1578                           ; Vector 16 : DMA1SCNT
  1579   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1580                           
  1581                           ; Vector 17 : DMA1DCNT
  1582   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1583                           
  1584                           ; Vector 18 : DMA1OR
  1585   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1586                           
  1587                           ; Vector 19 : DMA1A
  1588   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1589                           
  1590                           ; Vector 20 : SPI1RX
  1591   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1592                           
  1593                           ; Vector 21 : SPI1TX
  1594   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1595                           
  1596                           ; Vector 22 : SPI1
  1597   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1598                           
  1599                           ; Vector 23 : I2C1RX
  1600   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1601                           
  1602                           ; Vector 24 : I2C1TX
  1603   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1604                           
  1605                           ; Vector 25 : I2C1
  1606   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1607                           
  1608                           ; Vector 26 : I2C1E
  1609   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1610                           
  1611                           ; Vector 27 : U1RX
  1612   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1613                           
  1614                           ; Vector 28 : U1TX
  1615   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1616                           
  1617                           ; Vector 29 : U1E
  1618   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1619                           
  1620                           ; Vector 30 : U1
  1621   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1622                           
  1623                           ; Vector 31 : TMR0
  1624   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1625                           
  1626                           ; Vector 32 : TMR1
  1627   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1628                           
  1629                           ; Vector 33 : TMR1G
  1630   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1631                           
  1632                           ; Vector 34 : TMR2
  1633   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1634                           
  1635                           ; Vector 35 : CCP1
  1636   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1637                           
  1638                           ; Vector 36 : Undefined
  1639   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1640                           
  1641                           ; Vector 37 : NCO1
  1642   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1643                           
  1644                           ; Vector 38 : CWG1
  1645   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1646                           
  1647                           ; Vector 39 : CLC1
  1648   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1649                           
  1650                           ; Vector 40 : INT1
  1651   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1652                           
  1653                           ; Vector 41 : CMP2
  1654   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1655                           
  1656                           ; Vector 42 : DMA2SCNT
  1657   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1658                           
  1659                           ; Vector 43 : DMA2DCNT
  1660   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1661                           
  1662                           ; Vector 44 : DMA2OR
  1663   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1664                           
  1665                           ; Vector 45 : DMA2A
  1666   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1667                           
  1668                           ; Vector 46 : I2C2RX
  1669   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1670                           
  1671                           ; Vector 47 : I2C2TX
  1672   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1673                           
  1674                           ; Vector 48 : I2C2
  1675   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1676                           
  1677                           ; Vector 49 : I2C2E
  1678   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1679                           
  1680                           ; Vector 50 : U2RX
  1681   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1682                           
  1683                           ; Vector 51 : U2TX
  1684   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1685                           
  1686                           ; Vector 52 : U2E
  1687   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1688                           
  1689                           ; Vector 53 : U2
  1690   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1691                           
  1692                           ; Vector 54 : TMR3
  1693   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1694                           
  1695                           ; Vector 55 : TMR3G
  1696   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1697                           
  1698                           ; Vector 56 : TMR4
  1699   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1700                           
  1701                           ; Vector 57 : CCP2
  1702   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1703                           
  1704                           ; Vector 58 : Undefined
  1705   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1706                           
  1707                           ; Vector 59 : CWG2
  1708   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1709                           
  1710                           ; Vector 60 : CLC2
  1711   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1712                           
  1713                           ; Vector 61 : INT2
  1714   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1715                           
  1716                           ; Vector 62 : Undefined
  1717   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1718                           
  1719                           ; Vector 63 : Undefined
  1720   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1721                           
  1722                           ; Vector 64 : Undefined
  1723   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1724                           
  1725                           ; Vector 65 : Undefined
  1726   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1727                           
  1728                           ; Vector 66 : Undefined
  1729   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1730                           
  1731                           ; Vector 67 : Undefined
  1732   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1733                           
  1734                           ; Vector 68 : Undefined
  1735   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1736                           
  1737                           ; Vector 69 : Undefined
  1738   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1739                           
  1740                           ; Vector 70 : TMR5
  1741   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1742                           
  1743                           ; Vector 71 : TMR5G
  1744   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1745                           
  1746                           ; Vector 72 : TMR6
  1747   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1748                           
  1749                           ; Vector 73 : CCP3
  1750   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1751                           
  1752                           ; Vector 74 : CWG3
  1753   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1754                           
  1755                           ; Vector 75 : CLC3
  1756   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1757                           
  1758                           ; Vector 76 : Undefined
  1759   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1760                           
  1761                           ; Vector 77 : Undefined
  1762   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1763                           
  1764                           ; Vector 78 : Undefined
  1765   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1766                           
  1767                           ; Vector 79 : Undefined
  1768   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1769                           
  1770                           ; Vector 80 : CCP4
  1771   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1772                           
  1773                           ; Vector 81 : CLC4
  1774   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1775   0040AC                     ivt0x4008_undefint:
  1776                           	callstack 0
  1777   0040AC  00FF               	reset	
  1778                           
  1779                           	psect	rparam
  1780   000000                     
  1781                           	psect	config
  1782                           
  1783                           ;Config register CONFIG1L @ 0x300000
  1784                           ;	External Oscillator Selection
  1785                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1786                           ;	Reset Oscillator Selection
  1787                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1788   300000                     	org	3145728
  1789   300000  F8                 	db	248
  1790                           
  1791                           ;Config register CONFIG1H @ 0x300001
  1792                           ;	Clock out Enable bit
  1793                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1794                           ;	PRLOCKED One-Way Set Enable bit
  1795                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1796                           ;	Clock Switch Enable bit
  1797                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1798                           ;	Fail-Safe Clock Monitor Enable bit
  1799                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1800   300001                     	org	3145729
  1801   300001  FF                 	db	255
  1802                           
  1803                           ;Config register CONFIG2L @ 0x300002
  1804                           ;	MCLR Enable bit
  1805                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1806                           ;	Power-up timer selection bits
  1807                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1808                           ;	Multi-vector enable bit
  1809                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1810                           ;	IVTLOCK bit One-way set enable bit
  1811                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1812                           ;	Low Power BOR Enable bit
  1813                           ;	LPBOREN = OFF, ULPBOR disabled
  1814                           ;	Brown-out Reset Enable bits
  1815                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1816   300002                     	org	3145730
  1817   300002  FF                 	db	255
  1818                           
  1819                           ;Config register CONFIG2H @ 0x300003
  1820                           ;	Brown-out Reset Voltage Selection bits
  1821                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1822                           ;	ZCD Disable bit
  1823                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1824                           ;	PPSLOCK bit One-Way Set Enable bit
  1825                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1826                           ;	Stack Full/Underflow Reset Enable bit
  1827                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1828                           ;	Debugger Enable bit
  1829                           ;	DEBUG = OFF, Background debugger disabled
  1830                           ;	Extended Instruction Set Enable bit
  1831                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1832   300003                     	org	3145731
  1833   300003  FF                 	db	255
  1834                           
  1835                           ;Config register CONFIG3L @ 0x300004
  1836                           ;	WDT Period selection bits
  1837                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1838                           ;	WDT operating mode
  1839                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1840   300004                     	org	3145732
  1841   300004  9F                 	db	159
  1842                           
  1843                           ;Config register CONFIG3H @ 0x300005
  1844                           ;	WDT Window Select bits
  1845                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1846                           ;	WDT input clock selector
  1847                           ;	WDTCCS = SC, Software Control
  1848   300005                     	org	3145733
  1849   300005  FF                 	db	255
  1850                           
  1851                           ;Config register CONFIG4L @ 0x300006
  1852                           ;	Boot Block Size selection bits
  1853                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1854                           ;	Boot Block enable bit
  1855                           ;	BBEN = OFF, Boot block disabled
  1856                           ;	Storage Area Flash enable bit
  1857                           ;	SAFEN = OFF, SAF disabled
  1858                           ;	Application Block write protection bit
  1859                           ;	WRTAPP = OFF, Application Block not write protected
  1860   300006                     	org	3145734
  1861   300006  FF                 	db	255
  1862                           
  1863                           ;Config register CONFIG4H @ 0x300007
  1864                           ;	Boot Block Write Protection bit
  1865                           ;	WRTB = OFF, Boot Block not write-protected
  1866                           ;	Configuration Register Write Protection bit
  1867                           ;	WRTC = OFF, Configuration registers not write-protected
  1868                           ;	Data EEPROM Write Protection bit
  1869                           ;	WRTD = OFF, Data EEPROM not write-protected
  1870                           ;	SAF Write protection bit
  1871                           ;	WRTSAF = OFF, SAF not Write Protected
  1872                           ;	Low Voltage Programming Enable bit
  1873                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1874   300007                     	org	3145735
  1875   300007  FF                 	db	255
  1876                           
  1877                           ;Config register CONFIG5L @ 0x300008
  1878                           ;	PFM and Data EEPROM Code Protection bit
  1879                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1880   300008                     	org	3145736
  1881   300008  FF                 	db	255
  1882                           
  1883                           ;Config register CONFIG5H @ 0x300009
  1884                           ;	unspecified, using default values
  1885   300009                     	org	3145737
  1886   300009  FF                 	db	255
  1887                           tosu	equ	0x3FFF
  1888                           tosh	equ	0x3FFE
  1889                           tosl	equ	0x3FFD
  1890                           stkptr	equ	0x3FFC
  1891                           pclatu	equ	0x3FFB
  1892                           pclath	equ	0x3FFA
  1893                           pcl	equ	0x3FF9
  1894                           tblptru	equ	0x3FF8
  1895                           tblptrh	equ	0x3FF7
  1896                           tblptrl	equ	0x3FF6
  1897                           tablat	equ	0x3FF5
  1898                           prodh	equ	0x3FF4
  1899                           prodl	equ	0x3FF3
  1900                           indf0	equ	0x3FEF
  1901                           postinc0	equ	0x3FEE
  1902                           postdec0	equ	0x3FED
  1903                           preinc0	equ	0x3FEC
  1904                           plusw0	equ	0x3FEB
  1905                           fsr0h	equ	0x3FEA
  1906                           fsr0l	equ	0x3FE9
  1907                           wreg	equ	0x3FE8
  1908                           indf1	equ	0x3FE7
  1909                           postinc1	equ	0x3FE6
  1910                           postdec1	equ	0x3FE5
  1911                           preinc1	equ	0x3FE4
  1912                           plusw1	equ	0x3FE3
  1913                           fsr1h	equ	0x3FE2
  1914                           fsr1l	equ	0x3FE1
  1915                           bsr	equ	0x3FE0
  1916                           indf2	equ	0x3FDF
  1917                           postinc2	equ	0x3FDE
  1918                           postdec2	equ	0x3FDD
  1919                           preinc2	equ	0x3FDC
  1920                           plusw2	equ	0x3FDB
  1921                           fsr2h	equ	0x3FDA
  1922                           fsr2l	equ	0x3FD9
  1923                           status	equ	0x3FD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[12]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LightScan->_MSdelay
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_LCD_String_xy
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    i2_LCD_Command->i2_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4407
                                             28 COMRAM     2     2      0
                           _LCD_Char
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                          _LightScan
 ---------------------------------------------------------------------------------
 (1) _LightScan                                            2     2      0     657
                                             22 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    1596
                                             24 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     665
                                             23 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     544
                                             22 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1066
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     544
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     544
                                             22 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     522
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             4     4      0     812
                                             12 COMRAM     4     4      0
                    i2_LCD_String_xy
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (6) i2_LCD_String_xy                                      4     2      2     642
                                              8 COMRAM     4     2      2
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (7) i2_LCD_String                                         1     0      1     263
                                              7 COMRAM     1     0      1
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Char                                           1     1      0     192
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Command                                        1     1      0     192
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (6) i2_MSdelay                                            6     4      2     170
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _LightScan
     _MSdelay

 _INT0_ISR (ROOT)
   i2_LCD_String_xy
     i2_LCD_Command
       i2_MSdelay
     i2_LCD_String
       i2_LCD_Char
         i2_MSdelay
   i2_MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      82        0.0%
BITBIGSFRllhhhh    4FA      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      81        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhl       9E      0       0      78        0.0%
BITBIGSFRllhhhl     5F      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      20       1       33.7%
BITBIGSFRhhhhh      2D      0       0      69        0.0%
BITBIGSFRllhhl      1E      0       0      77        0.0%
BITBIGSFRlllhh       F      0       0      79        0.0%
BITBIGSFRlllhl       F      0       0      80        0.0%
BITBIGSFRhhhhl       5      0       0      70        0.0%
BITBIGSFRlhh         4      0       0      73        0.0%
BITBIGSFRhhl         4      0       0      72        0.0%
BITBIGSFRhhhl        1      0       0      71        0.0%
BITBIGSFRlhl         1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      14        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 11:54:41 2024

           ?_LCD_Command 0001                       l61 441C                       l70 4364  
                     l55 43C2                       l64 43FE                       l58 4460  
                     l83 4272                       l75 42F8                       l91 415A  
                     l95 4114                       l88 40CC              ?_LCD_String 0018  
                    l112 41D4                      u200 4364                      u201 4360  
                    u220 42D0                      u221 42CC                      u230 40C8  
                    u231 40C4                      u160 4258                      u240 40DA  
                    u161 4254                      u241 40D6                      u170 4272  
                    u250 40FA                      u171 426E                      u251 40F6  
                    u260 4110                      u261 410C                      u317 41C8  
                    u270 4122                      u271 411E                      u280 4142  
                    u281 413E                      u290 4156                      u291 4152  
                    wreg 3FE8              LCD_Char@dat 0017                     l1020 423E  
                   l1012 422A                     l1022 4242                     l1014 4236  
                   l1110 43A2                     l1024 4258                     l1112 43A6  
                   l1120 42D0                     l1200 416E                     l1026 425C  
                   l1114 445A                     l1050 43EE                     l1122 42D8  
                   l1130 40B4                     l1210 417E                     l1202 4176  
                   l1108 4396                     l1052 43F0                     l1044 43E4  
                   l1124 42E2                     l1116 42C0                     l1140 40DE  
                   l1132 40B8                     l1220 418C                     l1212 4180  
                   l1204 4178                     l1070 4408                     l1054 43F2  
                   l1046 43EA                     l1126 42EA                     l1118 42C0  
                   l1142 40EA                     l1150 4100                     l1230 41B0  
                   l1222 4190                     l1214 4184                     l1206 417A  
                   l1072 440A                     l1048 43EC                     l1080 4336  
                   l1128 42F0                     l1160 4134                     l1152 4122  
                   l1144 40EC                     l1136 40DA                     l1232 41BE  
                   l1224 4198                     l1216 4186                     l1208 417C  
                   l1074 440C                     l1082 433A                     l1154 4124  
                   l1146 40FA                     l1138 40DC                     l1226 41A0  
                   l1218 4188                     l1076 440E                     l1068 4402  
                   l1084 4348                     l1156 4126                     l1228 41A8  
                   l1078 4410                     l1086 434A                     l1158 4132  
                   l1166 4146                     l1194 415C                     l1196 415E  
                   l1198 416C                     STR_1 2001                     STR_2 200F  
                   _LATB 3FBB                     i2l61 4458                     i2l70 4394  
                   i2l64 443A                     i2l83 42BC                     i2l75 4334  
                   _WPUA 3A41              ?i2_LCD_Char 0001                     _main 415C  
                   start 40AE          __end_of_MSdelay 4274            _LCD_String_xy 42BE  
           ___param_bank 0000         __end_of_LCD_Char 4400         __end_of_LCD_Init 43C4  
       __end_of_INT0_ISR 422A                    ?_main 0001                    _LATD0 1FDE8  
                  _LATD1 1FDE9                    i2l107 4210                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
                  _input 0020                    tablat 3FF5                    status 3FD8  
         ?_LCD_String_xy 0019          __initialization 43C4             __end_of_main 41D8  
                 ??_main 001D        __end_of_LCD_Clear 4462            __activetblptr 0001  
                 _ANSELA 3A40                   _ANSELC 3A60         LightScan@counter 0018  
       LCD_String_xy@msg 001A         LCD_String_xy@pos 0019         LCD_String_xy@row 001B  
                 i2l1100 4366                   i2l1030 4280                   i2l1102 436A  
                 i2l1040 42A2                   i2l1104 4378                   i2l1042 42A6  
                 i2l1106 437A                   i2l1036 4288                   i2l1028 4274  
                 i2l1060 4428                   i2l1038 428C                   i2l1062 442A  
              ??_MSdelay 0013                   i2l1064 442C                   i2l1056 4420  
                 i2l1090 4444                   i2l1066 442E                   i2l1058 4426  
                 i2l1092 4446                   i2l1180 431E                   i2l1172 42FC  
                 i2l1094 4448                   i2l1182 4326                   i2l1174 42FC  
                 i2l1190 41FE                   i2l1096 444A                   i2l1088 443E  
                 i2l1184 432C                   i2l1176 430C                   i2l1192 420C  
                 i2l1098 444C                   i2l1178 4314                   i2l1186 41F0  
                 i2l1188 41F2        __end_ofi2_MSdelay 42BE                   _input2 001F  
          ?i2_LCD_String 0008                   isa$std 0001             __mediumconst 0000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
      ??i2_LCD_String_xy 000B                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 43D4                ?_LCD_Init 0001                ?_INT0_ISR 0001  
        ??_LCD_String_xy 001B            ___rparam_used 0001           __pcstackCOMRAM 0001  
         ??i2_LCD_String 0009             ??_LCD_String 0019        __end_of_LightScan 415C  
       i2LCD_Command@cmd 0007             ??i2_LCD_Char 0007               ??_LCD_Char 0017  
             ??_LCD_Init 0018               ??_INT0_ISR 000D       __end_of_LCD_String 4366  
                IVTBASEH 3FD6                  IVTBASEL 3FD5                  IVTBASEU 3FD7  
          i2_LCD_Command 443C                  _INT0PPS 3AC0       __end_ofi2_LCD_Char 443C  
                i2u21_40 4394                  i2u21_41 4390                  i2u30_40 430C  
                i2u30_41 4308                  i2u18_40 42A2                  i2u18_41 429E  
                i2u19_40 42BC                  i2u19_41 42B8                  _MSdelay 422A  
          LCD_String@msg 0018                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000           ?i2_LCD_Command 0001                  __pcinit 43C4  
                __ramtop 2000            ivt0x4008_base 4008                  __ptext0 415C  
                __ptext1 40B2                  __ptext2 42BE                  __ptext3 4336  
                __ptext4 43E2                  __ptext5 4396                  __ptext6 445A  
                __ptext7 4400                  __ptext8 422A                  __ptext9 41D8  
              _LCD_Clear 445A     end_of_initialization 43D4     __end_ofi2_LCD_String 4396  
         LCD_Command@cmd 0017                i2_MSdelay 4274          i2_LCD_String_xy 42FA  
              _PORTAbits 3FCA                _PORTCbits 3FCC               ?_LCD_Clear 0001  
     i2LCD_String_xy@msg 000A       i2LCD_String_xy@pos 0009       i2LCD_String_xy@row 000B  
        ??i2_LCD_Command 0007            ??_LCD_Command 0017               ?i2_MSdelay 0001  
    start_initialization 43C4                _LightScan 40B2    __end_of_LCD_String_xy 42FA  
__end_ofi2_LCD_String_xy 4336      __end_of_LCD_Command 441E              __pbssCOMRAM 001F  
             ?_LightScan 0001              ??_LCD_Clear 0018            i2LCD_Char@dat 0007  
               ?_MSdelay 0011              __pivt0x4008 4008             i2MSdelay@val 0001  
            ??i2_MSdelay 0003             i2_LCD_String 4366              __smallconst 2000  
  LCD_String_xy@location 001C                 MSdelay@i 0013                 MSdelay@j 0015  
               _LCD_Char 43E2                 _LCD_Init 4396                 _INT0_ISR 41D8  
               _IPR1bits 3981                 _PIE1bits 3991                 _PIR1bits 39A1  
     LightScan@pinNumber 0017         ?i2_LCD_String_xy 0009        ivt0x4008_undefint 40AC  
            _LCD_Command 4400              ??_LightScan 0017              _INTCON0bits 3FD2  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2000  
        i2LCD_String@msg 0008                 __ptext10 42FA                 __ptext11 4366  
               __ptext12 441E                 __ptext13 443C                 __ptext14 4274  
             MSdelay@val 0011                 isa$xinst 0000    __end_ofi2_LCD_Command 445A  
             _LCD_String 4336  i2LCD_String_xy@location 000C                 intlevel2 0000  
             i2MSdelay@i 0003               i2MSdelay@j 0005               i2_LCD_Char 441E  
