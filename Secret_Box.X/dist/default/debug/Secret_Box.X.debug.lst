

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 11:50:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=4,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F47K42 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _TRISC	set	16324
    60   000000                     _TRISD	set	16325
    61   000000                     _LATD1	set	130537
    62   000000                     _IPR1bits	set	14721
    63   000000                     _PIR1bits	set	14753
    64   000000                     _LATB	set	16315
    65   000000                     _TRISB	set	16323
    66   000000                     _PORTAbits	set	16330
    67   000000                     _LATD0	set	130536
    68   000000                     _TRISA	set	16322
    69   000000                     _PORTCbits	set	16332
    70   000000                     _INTCON0bits	set	16338
    71   000000                     _ANSELA	set	14912
    72   000000                     _WPUA	set	14913
    73   000000                     _ANSELC	set	14944
    74   000000                     _INT0PPS	set	15040
    75   000000                     _PIE1bits	set	14737
    76                           
    77                           	psect	smallconst
    78   002000                     __psmallconst:
    79                           	callstack 0
    80   002000  00                 	db	0
    81   002001                     STR_1:
    82   002001  6F                 	db	111	;'o'
    83   002002  75                 	db	117	;'u'
    84   002003  74                 	db	116	;'t'
    85   002004  20                 	db	32
    86   002005  6F                 	db	111	;'o'
    87   002006  66                 	db	102	;'f'
    88   002007  20                 	db	32
    89   002008  73                 	db	115	;'s'
    90   002009  63                 	db	99	;'c'
    91   00200A  61                 	db	97	;'a'
    92   00200B  6E                 	db	110	;'n'
    93   00200C  00                 	db	0
    94   00200D  00                 	db	0	; dummy byte at the end
    95   000000                     
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99   004306                     __pcinit:
   100                           	callstack 0
   101   004306                     start_initialization:
   102                           	callstack 0
   103   004306                     __initialization:
   104                           	callstack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (2 bytes)
   107   004306  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   108   004308  6A15               	clrf	__pbssCOMRAM& (0+255),c
   109                           
   110                           ;
   111                           ; Setup IVTBASE
   112                           ;
   113   00430A  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   114   00430C  6ED5               	movwf	213,c
   115   00430E  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   116   004310  6ED6               	movwf	214,c
   117   004312  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   118   004314  6ED7               	movwf	215,c
   119   004316                     end_of_initialization:
   120                           	callstack 0
   121   004316                     __end_of__initialization:
   122                           	callstack 0
   123   004316  0E00               	movlw	low (__Lsmallconst shr (0+16))
   124   004318  6EF8               	movwf	tblptru,c
   125   00431A  0E20               	movlw	high __Lsmallconst
   126   00431C  6EF7               	movwf	tblptrh,c
   127   00431E  0100               	movlb	0
   128   004320  EFAE  F020         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131   000015                     __pbssCOMRAM:
   132                           	callstack 0
   133   000015                     _input2:
   134                           	callstack 0
   135   000015                     	ds	1
   136   000016                     _input:
   137                           	callstack 0
   138   000016                     	ds	1
   139                           
   140                           	psect	cstackCOMRAM
   141   000001                     __pcstackCOMRAM:
   142                           	callstack 0
   143   000001                     i2MSdelay@val:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147   000001                     	ds	2
   148   000003                     i2MSdelay@i:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x2
   152   000003                     	ds	2
   153   000005                     i2MSdelay@j:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x4
   157   000005                     	ds	2
   158   000007                     MSdelay@val:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x6
   162   000007                     	ds	2
   163   000009                     MSdelay@i:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x8
   167   000009                     	ds	2
   168   00000B                     MSdelay@j:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0xA
   172   00000B                     	ds	2
   173   00000D                     LCD_Command@cmd:
   174                           	callstack 0
   175   00000D                     LCD_Char@dat:
   176                           	callstack 0
   177   00000D                     LightScan@pinNumber:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0xC
   181   00000D                     	ds	1
   182   00000E                     LCD_String@msg:
   183                           	callstack 0
   184   00000E                     LightScan@counter:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0xD
   188   00000E                     	ds	1
   189   00000F                     LCD_String_xy@pos:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0xE
   193   00000F                     	ds	1
   194   000010                     LCD_String_xy@msg:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0xF
   198   000010                     	ds	1
   199   000011                     LCD_String_xy@row:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x10
   203   000011                     	ds	1
   204   000012                     LCD_String_xy@location:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x11
   208   000012                     	ds	1
   209   000013                     ??_main:
   210                           
   211                           ; 1 bytes @ 0x12
   212   000013                     	ds	2
   213                           
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 29 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels required when called: 6
   239 ;; This function calls:
   240 ;;		_LCD_Char
   241 ;;		_LCD_Clear
   242 ;;		_LCD_Init
   243 ;;		_LCD_String_xy
   244 ;;		_LightScan
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251   00415C                     __ptext0:
   252                           	callstack 0
   253   00415C                     _main:
   254                           	callstack 25
   255   00415C                     
   256                           ;main.c: 31:     TRISA = 0xFF;
   257   00415C  68C2               	setf	194,c	;volatile
   258   00415E                     
   259                           ;main.c: 32:     ANSELA = 0;
   260   00415E  0E00               	movlw	0
   261   004160  013A               	movlb	58	; () banked
   262   004162  6F40               	movwf	64,b	;volatile
   263                           
   264                           ;main.c: 33:     TRISC = 0x00;
   265   004164  0E00               	movlw	0
   266   004166  6EC4               	movwf	196,c	;volatile
   267                           
   268                           ;main.c: 34:     ANSELC = 0;
   269   004168  0E00               	movlw	0
   270   00416A  6F60               	movwf	96,b	;volatile
   271   00416C                     
   272                           ; BSR set to: 58
   273                           ;main.c: 35:     INTCON0bits.INT0EDG = 1;
   274   00416C  80D2               	bsf	210,0,c	;volatile
   275   00416E                     
   276                           ; BSR set to: 58
   277                           ;main.c: 36:     INT0PPS = PORTAbits.RA0;
   278   00416E  0E00               	movlw	0
   279   004170  B0CA               	btfsc	202,0,c	;volatile
   280   004172  0E01               	movlw	1
   281   004174  6FC0               	movwf	192,b	;volatile
   282   004176                     
   283                           ; BSR set to: 58
   284                           ;main.c: 37:     WPUA=0xFF;
   285   004176  6941               	setf	65,b	;volatile
   286   004178                     
   287                           ; BSR set to: 58
   288                           ;main.c: 38:     INTCON0bits.IPEN = 1;
   289   004178  8AD2               	bsf	210,5,c	;volatile
   290   00417A                     
   291                           ; BSR set to: 58
   292                           ;main.c: 39:     INTCON0bits.GIEH = 1;
   293   00417A  8ED2               	bsf	210,7,c	;volatile
   294   00417C                     
   295                           ; BSR set to: 58
   296                           ;main.c: 40:     INTCON0bits.GIEL = 1;
   297   00417C  8CD2               	bsf	210,6,c	;volatile
   298   00417E                     
   299                           ; BSR set to: 58
   300                           ;main.c: 41:     INTCON0bits.INT0EDG = 1;
   301   00417E  80D2               	bsf	210,0,c	;volatile
   302   004180                     
   303                           ; BSR set to: 58
   304                           ;main.c: 42:     IPR1bits.INT0IP = 1;
   305   004180  0139               	movlb	57	; () banked
   306   004182  8181               	bsf	129,0,b	;volatile
   307   004184                     
   308                           ; BSR set to: 57
   309                           ;main.c: 43:     PIE1bits.INT0IE = 1;
   310   004184  8191               	bsf	145,0,b	;volatile
   311   004186                     
   312                           ; BSR set to: 57
   313                           ;main.c: 45:     PIR1bits.INT0IF = 0;
   314   004186  91A1               	bcf	161,0,b	;volatile
   315   004188                     
   316                           ; BSR set to: 57
   317                           ;main.c: 48:     LCD_Init();
   318   004188  EC6C  F021         	call	_LCD_Init	;wreg free
   319   00418C                     
   320                           ;main.c: 49:     LCD_Clear();
   321   00418C  ECBA  F021         	call	_LCD_Clear	;wreg free
   322   004190                     
   323                           ;main.c: 50:     input = LightScan(1);
   324   004190  0E01               	movlw	1
   325   004192  EC59  F020         	call	_LightScan
   326   004196  6E16               	movwf	_input^0,c
   327   004198                     
   328                           ;main.c: 51:     LCD_Char(input + '0');
   329   004198  5016               	movf	_input^0,w,c
   330   00419A  0F30               	addlw	48
   331   00419C  EC92  F021         	call	_LCD_Char
   332   0041A0                     
   333                           ;main.c: 52:     input2 = LightScan(1);
   334   0041A0  0E01               	movlw	1
   335   0041A2  EC59  F020         	call	_LightScan
   336   0041A6  6E15               	movwf	_input2^0,c
   337   0041A8                     
   338                           ;main.c: 53:     LCD_Char(input2 + '0');
   339   0041A8  5015               	movf	_input2^0,w,c
   340   0041AA  0F30               	addlw	48
   341   0041AC  EC92  F021         	call	_LCD_Char
   342   0041B0                     
   343                           ;main.c: 54:     LCD_String_xy(2,0,"out of scan");
   344   0041B0  0E00               	movlw	0
   345   0041B2  6E0F               	movwf	LCD_String_xy@pos^0,c
   346   0041B4  0E01               	movlw	low STR_1
   347   0041B6  6E10               	movwf	LCD_String_xy@msg^0,c
   348   0041B8  0E02               	movlw	2
   349   0041BA  EC36  F021         	call	_LCD_String_xy
   350   0041BE                     
   351                           ;main.c: 55:     _delay((unsigned long)((10000)*(4000000/4000.0)));
   352   0041BE  0E33               	movlw	51
   353   0041C0  6E14               	movwf	(??_main+1)^0,c
   354   0041C2  0EBB               	movlw	187
   355   0041C4  6E13               	movwf	??_main^0,c
   356   0041C6  0EE0               	movlw	224
   357   0041C8                     u277:
   358   0041C8  2EE8               	decfsz	wreg,f,c
   359   0041CA  D7FE               	bra	u277
   360   0041CC  2E13               	decfsz	??_main^0,f,c
   361   0041CE  D7FC               	bra	u277
   362   0041D0  2E14               	decfsz	(??_main+1)^0,f,c
   363   0041D2  D7FA               	bra	u277
   364   0041D4  EF57  F020         	goto	start
   365   0041D8                     __end_of_main:
   366                           	callstack 0
   367                           
   368 ;; *************** function _LightScan *****************
   369 ;; Defined at:
   370 ;;		line 108 in file "./LCD.h"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  pinNumber       1    wreg     unsigned char 
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  pinNumber       1   12[COMRAM] unsigned char 
   375 ;;  counter         1   13[COMRAM] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      unsigned char 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   389 ;;Total ram usage:        2 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 3
   392 ;; This function calls:
   393 ;;		_MSdelay
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text1
   400   0040B2                     __ptext1:
   401                           	callstack 0
   402   0040B2                     _LightScan:
   403                           	callstack 27
   404                           
   405                           ;incstack = 0
   406                           ;LightScan@pinNumber stored from wreg
   407   0040B2  6E0D               	movwf	LightScan@pinNumber^0,c
   408   0040B4                     
   409                           ;./LCD.h: 110:     unsigned char counter =0;
   410   0040B4  0E00               	movlw	0
   411   0040B6  6E0E               	movwf	LightScan@counter^0,c
   412   0040B8                     
   413                           ;./LCD.h: 112:     if (pinNumber == 1)
   414   0040B8  040D               	decf	LightScan@pinNumber^0,w,c
   415   0040BA  A4D8               	btfss	status,2,c
   416   0040BC  EF62  F020         	goto	u181
   417   0040C0  EF64  F020         	goto	u180
   418   0040C4                     u181:
   419   0040C4  EFA3  F020         	goto	l1070
   420   0040C8                     u180:
   421   0040C8  EF80  F020         	goto	l1054
   422   0040CC                     l88:
   423                           
   424                           ;./LCD.h: 115:     {;./LCD.h: 116:         if (PORTAbits.RA1 == 1)
   425   0040CC  A2CA               	btfss	202,1,c	;volatile
   426   0040CE  EF6B  F020         	goto	u191
   427   0040D2  EF6D  F020         	goto	u190
   428   0040D6                     u191:
   429   0040D6  EF80  F020         	goto	l1054
   430   0040DA                     u190:
   431   0040DA                     
   432                           ;./LCD.h: 117:         {;./LCD.h: 118:             counter ++;
   433   0040DA  2A0E               	incf	LightScan@counter^0,f,c
   434   0040DC                     
   435                           ;./LCD.h: 119:             PORTCbits.RC7 = 1;
   436   0040DC  8ECC               	bsf	204,7,c	;volatile
   437   0040DE                     
   438                           ;./LCD.h: 120:             MSdelay(1000);
   439   0040DE  0E03               	movlw	3
   440   0040E0  6E08               	movwf	(MSdelay@val+1)^0,c
   441   0040E2  0EE8               	movlw	232
   442   0040E4  6E07               	movwf	MSdelay@val^0,c
   443   0040E6  ECEC  F020         	call	_MSdelay	;wreg free
   444   0040EA                     
   445                           ;./LCD.h: 121:             PORTCbits.RC7 = 0;
   446   0040EA  9ECC               	bcf	204,7,c	;volatile
   447   0040EC                     
   448                           ;./LCD.h: 122:             if(PORTAbits.RA3 == 1)
   449   0040EC  A6CA               	btfss	202,3,c	;volatile
   450   0040EE  EF7B  F020         	goto	u201
   451   0040F2  EF7D  F020         	goto	u200
   452   0040F6                     u201:
   453   0040F6  EF80  F020         	goto	l1054
   454   0040FA                     u200:
   455   0040FA                     l1050:
   456                           
   457                           ;./LCD.h: 123:                 return counter;
   458   0040FA  500E               	movf	LightScan@counter^0,w,c
   459   0040FC  EFAD  F020         	goto	l91
   460   004100                     l1054:
   461                           
   462                           ;./LCD.h: 114:     while(counter < 4)
   463   004100  0E03               	movlw	3
   464   004102  640E               	cpfsgt	LightScan@counter^0,c
   465   004104  EF86  F020         	goto	u211
   466   004108  EF88  F020         	goto	u210
   467   00410C                     u211:
   468   00410C  EF66  F020         	goto	l88
   469   004110                     u210:
   470   004110  EF7D  F020         	goto	l1050
   471   004114                     l95:
   472                           
   473                           ;./LCD.h: 130:     {;./LCD.h: 131:         if (PORTAbits.RA2 == 1)
   474   004114  A4CA               	btfss	202,2,c	;volatile
   475   004116  EF8F  F020         	goto	u221
   476   00411A  EF91  F020         	goto	u220
   477   00411E                     u221:
   478   00411E  EFA3  F020         	goto	l1070
   479   004122                     u220:
   480   004122                     
   481                           ;./LCD.h: 132:         {;./LCD.h: 133:             counter ++;
   482   004122  2A0E               	incf	LightScan@counter^0,f,c
   483   004124                     
   484                           ;./LCD.h: 134:             PORTCbits.RC7 = 1;
   485   004124  8ECC               	bsf	204,7,c	;volatile
   486   004126                     
   487                           ;./LCD.h: 135:             MSdelay(1000);
   488   004126  0E03               	movlw	3
   489   004128  6E08               	movwf	(MSdelay@val+1)^0,c
   490   00412A  0EE8               	movlw	232
   491   00412C  6E07               	movwf	MSdelay@val^0,c
   492   00412E  ECEC  F020         	call	_MSdelay	;wreg free
   493   004132                     
   494                           ;./LCD.h: 136:             PORTCbits.RC7 = 0;
   495   004132  9ECC               	bcf	204,7,c	;volatile
   496   004134                     
   497                           ;./LCD.h: 137:             if(PORTAbits.RA3 == 1)
   498   004134  A6CA               	btfss	202,3,c	;volatile
   499   004136  EF9F  F020         	goto	u231
   500   00413A  EFA1  F020         	goto	u230
   501   00413E                     u231:
   502   00413E  EFA3  F020         	goto	l1070
   503   004142                     u230:
   504   004142  EF7D  F020         	goto	l1050
   505   004146                     l1070:
   506                           
   507                           ;./LCD.h: 129:          while(counter < 4)
   508   004146  0E03               	movlw	3
   509   004148  640E               	cpfsgt	LightScan@counter^0,c
   510   00414A  EFA9  F020         	goto	u241
   511   00414E  EFAB  F020         	goto	u240
   512   004152                     u241:
   513   004152  EF8A  F020         	goto	l95
   514   004156                     u240:
   515   004156  EF7D  F020         	goto	l1050
   516   00415A                     l91:
   517   00415A  0012               	return		;funcret
   518   00415C                     __end_of_LightScan:
   519                           	callstack 0
   520                           
   521 ;; *************** function _LCD_String_xy *****************
   522 ;; Defined at:
   523 ;;		line 84 in file "./LCD.h"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  row             1    wreg     unsigned char 
   526 ;;  pos             1   14[COMRAM] unsigned char 
   527 ;;  msg             1   15[COMRAM] PTR const unsigned char 
   528 ;;		 -> STR_1(12), 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  row             1   16[COMRAM] unsigned char 
   531 ;;  location        1   17[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   545 ;;Total ram usage:        4 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 5
   548 ;; This function calls:
   549 ;;		_LCD_Command
   550 ;;		_LCD_String
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text2
   557   00426C                     __ptext2:
   558                           	callstack 0
   559   00426C                     _LCD_String_xy:
   560                           	callstack 25
   561                           
   562                           ;incstack = 0
   563                           ;LCD_String_xy@row stored from wreg
   564   00426C  6E11               	movwf	LCD_String_xy@row^0,c
   565   00426E                     
   566                           ;./LCD.h: 87:     if(row<=1)
   567   00426E  0E02               	movlw	2
   568   004270  6011               	cpfslt	LCD_String_xy@row^0,c
   569   004272  EF3D  F021         	goto	u171
   570   004276  EF3F  F021         	goto	u170
   571   00427A                     u171:
   572   00427A  EF48  F021         	goto	l1028
   573   00427E                     u170:
   574   00427E                     
   575                           ;./LCD.h: 88:     {;./LCD.h: 89:         location=(0x80) | ((pos) & 0x0f);
   576   00427E  500F               	movf	LCD_String_xy@pos^0,w,c
   577   004280  0B0F               	andlw	15
   578   004282  0980               	iorlw	128
   579   004284  6E12               	movwf	LCD_String_xy@location^0,c
   580   004286                     
   581                           ;./LCD.h: 90:         LCD_Command(location);
   582   004286  5012               	movf	LCD_String_xy@location^0,w,c
   583   004288  ECA1  F021         	call	_LCD_Command
   584                           
   585                           ;./LCD.h: 91:     }
   586   00428C  EF4F  F021         	goto	l1032
   587   004290                     l1028:
   588                           
   589                           ;./LCD.h: 93:     {;./LCD.h: 94:         location=(0xC0) | ((pos) & 0x0f);
   590   004290  500F               	movf	LCD_String_xy@pos^0,w,c
   591   004292  0B0F               	andlw	15
   592   004294  09C0               	iorlw	192
   593   004296  6E12               	movwf	LCD_String_xy@location^0,c
   594   004298                     
   595                           ;./LCD.h: 95:         LCD_Command(location);
   596   004298  5012               	movf	LCD_String_xy@location^0,w,c
   597   00429A  ECA1  F021         	call	_LCD_Command
   598   00429E                     l1032:
   599                           
   600                           ;./LCD.h: 97:     LCD_String(msg);
   601   00429E  C010  F00E         	movff	LCD_String_xy@msg,LCD_String@msg
   602   0042A2  EC54  F021         	call	_LCD_String	;wreg free
   603   0042A6  0012               	return		;funcret
   604   0042A8                     __end_of_LCD_String_xy:
   605                           	callstack 0
   606                           
   607 ;; *************** function _LCD_String *****************
   608 ;; Defined at:
   609 ;;		line 75 in file "./LCD.h"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  msg             1   13[COMRAM] PTR const unsigned char 
   612 ;;		 -> STR_1(12), 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   628 ;;Total ram usage:        1 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; Hardware stack levels required when called: 4
   631 ;; This function calls:
   632 ;;		_LCD_Char
   633 ;; This function is called by:
   634 ;;		_LCD_String_xy
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639   0042A8                     __ptext3:
   640                           	callstack 0
   641   0042A8                     _LCD_String:
   642                           	callstack 25
   643   0042A8                     
   644                           ;./LCD.h: 75: void LCD_String(const char *msg);./LCD.h: 76: {;./LCD.h: 77:     while((*m
      +                          sg)!=0)
   645   0042A8  EF5E  F021         	goto	l1010
   646   0042AC                     l1006:
   647                           
   648                           ;./LCD.h: 78:     {;./LCD.h: 79:       LCD_Char(*msg);
   649   0042AC  0060  F03B  FFF6   	movff	LCD_String@msg,tblptrl
   650   0042B2                     	if	0	;There is only one active tblptr byte
   651   0042B2                     	endif
   652   0042B2                     	if	0	;tblptru may be non-zero
   653   0042B2                     	endif
   654   0042B2                     	if	0	;tblptru may be non-zero
   655   0042B2                     	endif
   656   0042B2  0008               	tblrd		*
   657   0042B4  50F5               	movf	tablat,w,c
   658   0042B6  EC92  F021         	call	_LCD_Char
   659   0042BA                     
   660                           ;./LCD.h: 80:       msg++;
   661   0042BA  2A0E               	incf	LCD_String@msg^0,f,c
   662   0042BC                     l1010:
   663                           
   664                           ;./LCD.h: 77:     while((*msg)!=0)
   665   0042BC  0060  F03B  FFF6   	movff	LCD_String@msg,tblptrl
   666   0042C2                     	if	0	;There is only one active tblptr byte
   667   0042C2                     	endif
   668   0042C2                     	if	0	;tblptru may be non-zero
   669   0042C2                     	endif
   670   0042C2                     	if	0	;tblptru may be non-zero
   671   0042C2                     	endif
   672   0042C2  0008               	tblrd		*
   673   0042C4  50F5               	movf	tablat,w,c
   674   0042C6  0900               	iorlw	0
   675   0042C8  A4D8               	btfss	status,2,c
   676   0042CA  EF69  F021         	goto	u161
   677   0042CE  EF6B  F021         	goto	u160
   678   0042D2                     u161:
   679   0042D2  EF56  F021         	goto	l1006
   680   0042D6                     u160:
   681   0042D6  0012               	return		;funcret
   682   0042D8                     __end_of_LCD_String:
   683                           	callstack 0
   684                           
   685 ;; *************** function _LCD_Char *****************
   686 ;; Defined at:
   687 ;;		line 64 in file "./LCD.h"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  dat             1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  dat             1   12[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 3
   708 ;; This function calls:
   709 ;;		_MSdelay
   710 ;; This function is called by:
   711 ;;		_LCD_String
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text4
   717   004324                     __ptext4:
   718                           	callstack 0
   719   004324                     _LCD_Char:
   720                           	callstack 25
   721                           
   722                           ;incstack = 0
   723                           ;LCD_Char@dat stored from wreg
   724   004324  6E0D               	movwf	LCD_Char@dat^0,c
   725   004326                     
   726                           ;./LCD.h: 64: void LCD_Char(char dat);./LCD.h: 65: {;./LCD.h: 66:     LATB= dat;
   727   004326  0060  F037  FFBB   	movff	LCD_Char@dat,16315	;volatile
   728   00432C                     
   729                           ;./LCD.h: 67:     LATD0 = 1;
   730   00432C  80BD               	bsf	16317,0,c	;volatile
   731   00432E                     
   732                           ;./LCD.h: 68:     LATD1=1;
   733   00432E  82BD               	bsf	16317,1,c	;volatile
   734   004330                     
   735                           ;./LCD.h: 69:     __nop();
   736   004330  0000               	nop	
   737   004332                     
   738                           ;./LCD.h: 70:     LATD1=0;
   739   004332  92BD               	bcf	16317,1,c	;volatile
   740   004334                     
   741                           ;./LCD.h: 71:     MSdelay(1);
   742   004334  0E00               	movlw	0
   743   004336  6E08               	movwf	(MSdelay@val+1)^0,c
   744   004338  0E01               	movlw	1
   745   00433A  6E07               	movwf	MSdelay@val^0,c
   746   00433C  ECEC  F020         	call	_MSdelay	;wreg free
   747   004340  0012               	return		;funcret
   748   004342                     __end_of_LCD_Char:
   749                           	callstack 0
   750                           
   751 ;; *************** function _LCD_Init *****************
   752 ;; Defined at:
   753 ;;		line 38 in file "./LCD.h"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 4
   774 ;; This function calls:
   775 ;;		_LCD_Command
   776 ;;		_MSdelay
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text5
   783   0042D8                     __ptext5:
   784                           	callstack 0
   785   0042D8                     _LCD_Init:
   786                           	callstack 26
   787   0042D8                     
   788                           ;./LCD.h: 40:     MSdelay(15);
   789   0042D8  0E00               	movlw	0
   790   0042DA  6E08               	movwf	(MSdelay@val+1)^0,c
   791   0042DC  0E0F               	movlw	15
   792   0042DE  6E07               	movwf	MSdelay@val^0,c
   793   0042E0  ECEC  F020         	call	_MSdelay	;wreg free
   794   0042E4                     
   795                           ;./LCD.h: 41:     TRISB = 0x00;
   796   0042E4  0E00               	movlw	0
   797   0042E6  6EC3               	movwf	195,c	;volatile
   798   0042E8                     
   799                           ;./LCD.h: 42:     TRISD = 0x00;
   800   0042E8  0E00               	movlw	0
   801   0042EA  6EC5               	movwf	197,c	;volatile
   802                           
   803                           ;./LCD.h: 43:     LCD_Command(0x01);
   804   0042EC  0E01               	movlw	1
   805   0042EE  ECA1  F021         	call	_LCD_Command
   806                           
   807                           ;./LCD.h: 44:     LCD_Command(0x38);
   808   0042F2  0E38               	movlw	56
   809   0042F4  ECA1  F021         	call	_LCD_Command
   810                           
   811                           ;./LCD.h: 45:     LCD_Command(0x0c);
   812   0042F8  0E0C               	movlw	12
   813   0042FA  ECA1  F021         	call	_LCD_Command
   814                           
   815                           ;./LCD.h: 46:     LCD_Command(0x06);
   816   0042FE  0E06               	movlw	6
   817   004300  ECA1  F021         	call	_LCD_Command
   818   004304  0012               	return		;funcret
   819   004306                     __end_of_LCD_Init:
   820                           	callstack 0
   821                           
   822 ;; *************** function _LCD_Clear *****************
   823 ;; Defined at:
   824 ;;		line 49 in file "./LCD.h"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 4
   845 ;; This function calls:
   846 ;;		_LCD_Command
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text6
   853   004374                     __ptext6:
   854                           	callstack 0
   855   004374                     _LCD_Clear:
   856                           	callstack 26
   857   004374                     
   858                           ;./LCD.h: 51:         LCD_Command(0x01);
   859   004374  0E01               	movlw	1
   860   004376  ECA1  F021         	call	_LCD_Command
   861   00437A  0012               	return		;funcret
   862   00437C                     __end_of_LCD_Clear:
   863                           	callstack 0
   864                           
   865 ;; *************** function _LCD_Command *****************
   866 ;; Defined at:
   867 ;;		line 54 in file "./LCD.h"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  cmd             1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  cmd             1   12[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 3
   888 ;; This function calls:
   889 ;;		_MSdelay
   890 ;; This function is called by:
   891 ;;		_LCD_Init
   892 ;;		_LCD_Clear
   893 ;;		_LCD_String_xy
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text7
   898   004342                     __ptext7:
   899                           	callstack 0
   900   004342                     _LCD_Command:
   901                           	callstack 26
   902                           
   903                           ;incstack = 0
   904                           ;LCD_Command@cmd stored from wreg
   905   004342  6E0D               	movwf	LCD_Command@cmd^0,c
   906   004344                     
   907                           ;./LCD.h: 54: void LCD_Command(char cmd );./LCD.h: 55: {;./LCD.h: 56:     LATB= cmd;
   908   004344  0060  F037  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   909   00434A                     
   910                           ;./LCD.h: 57:     LATD0 = 0;
   911   00434A  90BD               	bcf	16317,0,c	;volatile
   912   00434C                     
   913                           ;./LCD.h: 58:     LATD1 = 1;
   914   00434C  82BD               	bsf	16317,1,c	;volatile
   915   00434E                     
   916                           ;./LCD.h: 59:     __nop();
   917   00434E  0000               	nop	
   918   004350                     
   919                           ;./LCD.h: 60:     LATD1 = 0;
   920   004350  92BD               	bcf	16317,1,c	;volatile
   921   004352                     
   922                           ;./LCD.h: 61:     MSdelay(3);
   923   004352  0E00               	movlw	0
   924   004354  6E08               	movwf	(MSdelay@val+1)^0,c
   925   004356  0E03               	movlw	3
   926   004358  6E07               	movwf	MSdelay@val^0,c
   927   00435A  ECEC  F020         	call	_MSdelay	;wreg free
   928   00435E  0012               	return		;funcret
   929   004360                     __end_of_LCD_Command:
   930                           	callstack 0
   931                           
   932 ;; *************** function _MSdelay *****************
   933 ;; Defined at:
   934 ;;		line 101 in file "./LCD.h"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  val             2    6[COMRAM] unsigned int 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  j               2   10[COMRAM] unsigned int 
   939 ;;  i               2    8[COMRAM] unsigned int 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   953 ;;Total ram usage:        6 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 2
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_LCD_Init
   960 ;;		_LCD_Command
   961 ;;		_LCD_Char
   962 ;;		_LightScan
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text8
   967   0041D8                     __ptext8:
   968                           	callstack 0
   969   0041D8                     _MSdelay:
   970                           	callstack 27
   971   0041D8                     
   972                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
   973   0041D8  0E00               	movlw	0
   974   0041DA  6E0A               	movwf	(MSdelay@i+1)^0,c
   975   0041DC  0E00               	movlw	0
   976   0041DE  6E09               	movwf	MSdelay@i^0,c
   977   0041E0  EF05  F021         	goto	l978
   978   0041E4                     l966:
   979                           
   980                           ;./LCD.h: 105:             for(j=0;j<165;j++);
   981   0041E4  0E00               	movlw	0
   982   0041E6  6E0C               	movwf	(MSdelay@j+1)^0,c
   983   0041E8  0E00               	movlw	0
   984   0041EA  6E0B               	movwf	MSdelay@j^0,c
   985   0041EC                     l972:
   986   0041EC  4A0B               	infsnz	MSdelay@j^0,f,c
   987   0041EE  2A0C               	incf	(MSdelay@j+1)^0,f,c
   988   0041F0  500C               	movf	(MSdelay@j+1)^0,w,c
   989   0041F2  E109               	bnz	u140
   990   0041F4  0EA5               	movlw	165
   991   0041F6  5C0B               	subwf	MSdelay@j^0,w,c
   992   0041F8  A0D8               	btfss	status,0,c
   993   0041FA  EF01  F021         	goto	u141
   994   0041FE  EF03  F021         	goto	u140
   995   004202                     u141:
   996   004202  EFF6  F020         	goto	l972
   997   004206                     u140:
   998   004206  4A09               	infsnz	MSdelay@i^0,f,c
   999   004208  2A0A               	incf	(MSdelay@i+1)^0,f,c
  1000   00420A                     l978:
  1001   00420A  5007               	movf	MSdelay@val^0,w,c
  1002   00420C  5C09               	subwf	MSdelay@i^0,w,c
  1003   00420E  5008               	movf	(MSdelay@val+1)^0,w,c
  1004   004210  580A               	subwfb	(MSdelay@i+1)^0,w,c
  1005   004212  A0D8               	btfss	status,0,c
  1006   004214  EF0E  F021         	goto	u151
  1007   004218  EF10  F021         	goto	u150
  1008   00421C                     u151:
  1009   00421C  EFF2  F020         	goto	l966
  1010   004220                     u150:
  1011   004220  0012               	return		;funcret
  1012   004222                     __end_of_MSdelay:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _INT0_ISR *****************
  1016 ;; Defined at:
  1017 ;;		line 21 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 1
  1038 ;; This function calls:
  1039 ;;		i2_MSdelay
  1040 ;; This function is called by:
  1041 ;;		Interrupt level 2
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text9
  1046   004360                     __ptext9:
  1047                           	callstack 0
  1048   004360                     _INT0_ISR:
  1049                           	callstack 25
  1050   004360                     
  1051                           ;main.c: 23:     PORTCbits.RC7 = 1;
  1052   004360  8ECC               	bsf	204,7,c	;volatile
  1053   004362                     
  1054                           ;main.c: 24:     MSdelay(1000);
  1055   004362  0E03               	movlw	3
  1056   004364  6E02               	movwf	(i2MSdelay@val+1)^0,c
  1057   004366  0EE8               	movlw	232
  1058   004368  6E01               	movwf	i2MSdelay@val^0,c
  1059   00436A  EC11  F021         	call	i2_MSdelay	;wreg free
  1060   00436E                     
  1061                           ;main.c: 25:     PIR1bits.INT0IF = 0;
  1062   00436E  0139               	movlb	57	; () banked
  1063   004370  91A1               	bcf	161,0,b	;volatile
  1064   004372                     
  1065                           ; BSR set to: 57
  1066   004372  0011               	retfie		f
  1067   004374                     __end_of_INT0_ISR:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function i2_MSdelay *****************
  1071 ;; Defined at:
  1072 ;;		line 101 in file "./LCD.h"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  val             2    0[COMRAM] unsigned int 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  j               2    4[COMRAM] unsigned int 
  1077 ;;  i               2    2[COMRAM] unsigned int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_INT0_ISR
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text10
  1101   004222                     __ptext10:
  1102                           	callstack 0
  1103   004222                     i2_MSdelay:
  1104                           	callstack 25
  1105   004222                     
  1106                           ;./LCD.h: 101: void MSdelay(unsigned int val);./LCD.h: 102: {;./LCD.h: 103:      unsigne
      +                          d int i,j;;./LCD.h: 104:         for(i=0;i<val;i++)
  1107   004222  0E00               	movlw	0
  1108   004224  6E04               	movwf	(i2MSdelay@i+1)^0,c
  1109   004226  0E00               	movlw	0
  1110   004228  6E03               	movwf	i2MSdelay@i^0,c
  1111   00422A  EF2A  F021         	goto	i2l1090
  1112   00422E                     i2l1078:
  1113                           
  1114                           ;./LCD.h: 105:             for(j=0;j<165;j++);
  1115   00422E  0E00               	movlw	0
  1116   004230  6E06               	movwf	(i2MSdelay@j+1)^0,c
  1117   004232  0E00               	movlw	0
  1118   004234  6E05               	movwf	i2MSdelay@j^0,c
  1119   004236                     i2l1084:
  1120   004236  4A05               	infsnz	i2MSdelay@j^0,f,c
  1121   004238  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  1122   00423A  5006               	movf	(i2MSdelay@j+1)^0,w,c
  1123   00423C  E109               	bnz	i2u25_40
  1124   00423E  0EA5               	movlw	165
  1125   004240  5C05               	subwf	i2MSdelay@j^0,w,c
  1126   004242  A0D8               	btfss	status,0,c
  1127   004244  EF26  F021         	goto	i2u25_41
  1128   004248  EF28  F021         	goto	i2u25_40
  1129   00424C                     i2u25_41:
  1130   00424C  EF1B  F021         	goto	i2l1084
  1131   004250                     i2u25_40:
  1132   004250  4A03               	infsnz	i2MSdelay@i^0,f,c
  1133   004252  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  1134   004254                     i2l1090:
  1135   004254  5001               	movf	i2MSdelay@val^0,w,c
  1136   004256  5C03               	subwf	i2MSdelay@i^0,w,c
  1137   004258  5002               	movf	(i2MSdelay@val+1)^0,w,c
  1138   00425A  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  1139   00425C  A0D8               	btfss	status,0,c
  1140   00425E  EF33  F021         	goto	i2u26_41
  1141   004262  EF35  F021         	goto	i2u26_40
  1142   004266                     i2u26_41:
  1143   004266  EF17  F021         	goto	i2l1078
  1144   00426A                     i2u26_40:
  1145   00426A  0012               	return		;funcret
  1146   00426C                     __end_ofi2_MSdelay:
  1147                           	callstack 0
  1148                           
  1149                           ;
  1150                           ; H/W Interrupt Vector Table @ 0x4008
  1151                           ;
  1152                           
  1153                           	psect	ivt0x4008
  1154   004008                     __pivt0x4008:
  1155                           	callstack 0
  1156   004008                     ivt0x4008_base:
  1157                           	callstack 0
  1158                           
  1159                           ; Vector 0 : SWINT
  1160   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1161                           
  1162                           ; Vector 1 : HLVD
  1163   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1164                           
  1165                           ; Vector 2 : OSF
  1166   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1167                           
  1168                           ; Vector 3 : CSW
  1169   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1170                           
  1171                           ; Vector 4 : NVM
  1172   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1173                           
  1174                           ; Vector 5 : SCAN
  1175   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1176                           
  1177                           ; Vector 6 : CRC
  1178   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1179                           
  1180                           ; Vector 7 : IOC
  1181   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1182                           
  1183                           ; Vector 8 : INT0
  1184   004018  10D8               	dw	_INT0_ISR shr (0+2)
  1185                           
  1186                           ; Vector 9 : ZCD
  1187   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1188                           
  1189                           ; Vector 10 : AD
  1190   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1191                           
  1192                           ; Vector 11 : ADT
  1193   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1194                           
  1195                           ; Vector 12 : CMP1
  1196   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1197                           
  1198                           ; Vector 13 : SMT1
  1199   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1200                           
  1201                           ; Vector 14 : SMT1PRA
  1202   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1203                           
  1204                           ; Vector 15 : SMT1PRW
  1205   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1206                           
  1207                           ; Vector 16 : DMA1SCNT
  1208   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1209                           
  1210                           ; Vector 17 : DMA1DCNT
  1211   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1212                           
  1213                           ; Vector 18 : DMA1OR
  1214   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1215                           
  1216                           ; Vector 19 : DMA1A
  1217   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1218                           
  1219                           ; Vector 20 : SPI1RX
  1220   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1221                           
  1222                           ; Vector 21 : SPI1TX
  1223   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1224                           
  1225                           ; Vector 22 : SPI1
  1226   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1227                           
  1228                           ; Vector 23 : I2C1RX
  1229   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1230                           
  1231                           ; Vector 24 : I2C1TX
  1232   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1233                           
  1234                           ; Vector 25 : I2C1
  1235   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1236                           
  1237                           ; Vector 26 : I2C1E
  1238   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1239                           
  1240                           ; Vector 27 : U1RX
  1241   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1242                           
  1243                           ; Vector 28 : U1TX
  1244   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1245                           
  1246                           ; Vector 29 : U1E
  1247   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1248                           
  1249                           ; Vector 30 : U1
  1250   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1251                           
  1252                           ; Vector 31 : TMR0
  1253   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1254                           
  1255                           ; Vector 32 : TMR1
  1256   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1257                           
  1258                           ; Vector 33 : TMR1G
  1259   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1260                           
  1261                           ; Vector 34 : TMR2
  1262   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1263                           
  1264                           ; Vector 35 : CCP1
  1265   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1266                           
  1267                           ; Vector 36 : Undefined
  1268   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1269                           
  1270                           ; Vector 37 : NCO1
  1271   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1272                           
  1273                           ; Vector 38 : CWG1
  1274   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1275                           
  1276                           ; Vector 39 : CLC1
  1277   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1278                           
  1279                           ; Vector 40 : INT1
  1280   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1281                           
  1282                           ; Vector 41 : CMP2
  1283   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1284                           
  1285                           ; Vector 42 : DMA2SCNT
  1286   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1287                           
  1288                           ; Vector 43 : DMA2DCNT
  1289   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1290                           
  1291                           ; Vector 44 : DMA2OR
  1292   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1293                           
  1294                           ; Vector 45 : DMA2A
  1295   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1296                           
  1297                           ; Vector 46 : I2C2RX
  1298   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1299                           
  1300                           ; Vector 47 : I2C2TX
  1301   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1302                           
  1303                           ; Vector 48 : I2C2
  1304   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1305                           
  1306                           ; Vector 49 : I2C2E
  1307   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1308                           
  1309                           ; Vector 50 : U2RX
  1310   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1311                           
  1312                           ; Vector 51 : U2TX
  1313   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1314                           
  1315                           ; Vector 52 : U2E
  1316   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1317                           
  1318                           ; Vector 53 : U2
  1319   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1320                           
  1321                           ; Vector 54 : TMR3
  1322   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1323                           
  1324                           ; Vector 55 : TMR3G
  1325   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1326                           
  1327                           ; Vector 56 : TMR4
  1328   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1329                           
  1330                           ; Vector 57 : CCP2
  1331   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1332                           
  1333                           ; Vector 58 : Undefined
  1334   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1335                           
  1336                           ; Vector 59 : CWG2
  1337   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1338                           
  1339                           ; Vector 60 : CLC2
  1340   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1341                           
  1342                           ; Vector 61 : INT2
  1343   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1344                           
  1345                           ; Vector 62 : Undefined
  1346   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1347                           
  1348                           ; Vector 63 : Undefined
  1349   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1350                           
  1351                           ; Vector 64 : Undefined
  1352   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1353                           
  1354                           ; Vector 65 : Undefined
  1355   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1356                           
  1357                           ; Vector 66 : Undefined
  1358   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1359                           
  1360                           ; Vector 67 : Undefined
  1361   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1362                           
  1363                           ; Vector 68 : Undefined
  1364   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1365                           
  1366                           ; Vector 69 : Undefined
  1367   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1368                           
  1369                           ; Vector 70 : TMR5
  1370   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1371                           
  1372                           ; Vector 71 : TMR5G
  1373   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1374                           
  1375                           ; Vector 72 : TMR6
  1376   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1377                           
  1378                           ; Vector 73 : CCP3
  1379   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1380                           
  1381                           ; Vector 74 : CWG3
  1382   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1383                           
  1384                           ; Vector 75 : CLC3
  1385   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1386                           
  1387                           ; Vector 76 : Undefined
  1388   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1389                           
  1390                           ; Vector 77 : Undefined
  1391   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1392                           
  1393                           ; Vector 78 : Undefined
  1394   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1395                           
  1396                           ; Vector 79 : Undefined
  1397   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1398                           
  1399                           ; Vector 80 : CCP4
  1400   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1401                           
  1402                           ; Vector 81 : CLC4
  1403   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1404   0040AC                     ivt0x4008_undefint:
  1405                           	callstack 0
  1406   0040AC  00FF               	reset	
  1407                           
  1408                           	psect	rparam
  1409   000000                     
  1410                           	psect	config
  1411                           
  1412                           ;Config register CONFIG1L @ 0x300000
  1413                           ;	External Oscillator Selection
  1414                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1415                           ;	Reset Oscillator Selection
  1416                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1417   300000                     	org	3145728
  1418   300000  F8                 	db	248
  1419                           
  1420                           ;Config register CONFIG1H @ 0x300001
  1421                           ;	Clock out Enable bit
  1422                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1423                           ;	PRLOCKED One-Way Set Enable bit
  1424                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1425                           ;	Clock Switch Enable bit
  1426                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1427                           ;	Fail-Safe Clock Monitor Enable bit
  1428                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1429   300001                     	org	3145729
  1430   300001  FF                 	db	255
  1431                           
  1432                           ;Config register CONFIG2L @ 0x300002
  1433                           ;	MCLR Enable bit
  1434                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1435                           ;	Power-up timer selection bits
  1436                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1437                           ;	Multi-vector enable bit
  1438                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1439                           ;	IVTLOCK bit One-way set enable bit
  1440                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1441                           ;	Low Power BOR Enable bit
  1442                           ;	LPBOREN = OFF, ULPBOR disabled
  1443                           ;	Brown-out Reset Enable bits
  1444                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1445   300002                     	org	3145730
  1446   300002  FF                 	db	255
  1447                           
  1448                           ;Config register CONFIG2H @ 0x300003
  1449                           ;	Brown-out Reset Voltage Selection bits
  1450                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1451                           ;	ZCD Disable bit
  1452                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1453                           ;	PPSLOCK bit One-Way Set Enable bit
  1454                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1455                           ;	Stack Full/Underflow Reset Enable bit
  1456                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1457                           ;	Debugger Enable bit
  1458                           ;	DEBUG = OFF, Background debugger disabled
  1459                           ;	Extended Instruction Set Enable bit
  1460                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1461   300003                     	org	3145731
  1462   300003  FF                 	db	255
  1463                           
  1464                           ;Config register CONFIG3L @ 0x300004
  1465                           ;	WDT Period selection bits
  1466                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1467                           ;	WDT operating mode
  1468                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1469   300004                     	org	3145732
  1470   300004  9F                 	db	159
  1471                           
  1472                           ;Config register CONFIG3H @ 0x300005
  1473                           ;	WDT Window Select bits
  1474                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1475                           ;	WDT input clock selector
  1476                           ;	WDTCCS = SC, Software Control
  1477   300005                     	org	3145733
  1478   300005  FF                 	db	255
  1479                           
  1480                           ;Config register CONFIG4L @ 0x300006
  1481                           ;	Boot Block Size selection bits
  1482                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1483                           ;	Boot Block enable bit
  1484                           ;	BBEN = OFF, Boot block disabled
  1485                           ;	Storage Area Flash enable bit
  1486                           ;	SAFEN = OFF, SAF disabled
  1487                           ;	Application Block write protection bit
  1488                           ;	WRTAPP = OFF, Application Block not write protected
  1489   300006                     	org	3145734
  1490   300006  FF                 	db	255
  1491                           
  1492                           ;Config register CONFIG4H @ 0x300007
  1493                           ;	Boot Block Write Protection bit
  1494                           ;	WRTB = OFF, Boot Block not write-protected
  1495                           ;	Configuration Register Write Protection bit
  1496                           ;	WRTC = OFF, Configuration registers not write-protected
  1497                           ;	Data EEPROM Write Protection bit
  1498                           ;	WRTD = OFF, Data EEPROM not write-protected
  1499                           ;	SAF Write protection bit
  1500                           ;	WRTSAF = OFF, SAF not Write Protected
  1501                           ;	Low Voltage Programming Enable bit
  1502                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1503   300007                     	org	3145735
  1504   300007  FF                 	db	255
  1505                           
  1506                           ;Config register CONFIG5L @ 0x300008
  1507                           ;	PFM and Data EEPROM Code Protection bit
  1508                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1509   300008                     	org	3145736
  1510   300008  FF                 	db	255
  1511                           
  1512                           ;Config register CONFIG5H @ 0x300009
  1513                           ;	unspecified, using default values
  1514   300009                     	org	3145737
  1515   300009  FF                 	db	255
  1516                           tosu	equ	0x3FFF
  1517                           tosh	equ	0x3FFE
  1518                           tosl	equ	0x3FFD
  1519                           stkptr	equ	0x3FFC
  1520                           pclatu	equ	0x3FFB
  1521                           pclath	equ	0x3FFA
  1522                           pcl	equ	0x3FF9
  1523                           tblptru	equ	0x3FF8
  1524                           tblptrh	equ	0x3FF7
  1525                           tblptrl	equ	0x3FF6
  1526                           tablat	equ	0x3FF5
  1527                           prodh	equ	0x3FF4
  1528                           prodl	equ	0x3FF3
  1529                           indf0	equ	0x3FEF
  1530                           postinc0	equ	0x3FEE
  1531                           postdec0	equ	0x3FED
  1532                           preinc0	equ	0x3FEC
  1533                           plusw0	equ	0x3FEB
  1534                           fsr0h	equ	0x3FEA
  1535                           fsr0l	equ	0x3FE9
  1536                           wreg	equ	0x3FE8
  1537                           indf1	equ	0x3FE7
  1538                           postinc1	equ	0x3FE6
  1539                           postdec1	equ	0x3FE5
  1540                           preinc1	equ	0x3FE4
  1541                           plusw1	equ	0x3FE3
  1542                           fsr1h	equ	0x3FE2
  1543                           fsr1l	equ	0x3FE1
  1544                           bsr	equ	0x3FE0
  1545                           indf2	equ	0x3FDF
  1546                           postinc2	equ	0x3FDE
  1547                           postdec2	equ	0x3FDD
  1548                           preinc2	equ	0x3FDC
  1549                           plusw2	equ	0x3FDB
  1550                           fsr2h	equ	0x3FDA
  1551                           fsr2l	equ	0x3FD9
  1552                           status	equ	0x3FD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LightScan->_MSdelay
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4307
                                             18 COMRAM     2     2      0
                           _LCD_Char
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                          _LightScan
 ---------------------------------------------------------------------------------
 (1) _LightScan                                            2     2      0     657
                                             12 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    1496
                                             14 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     665
                                             13 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     544
                                             12 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1066
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     544
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     544
                                             12 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     522
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0     118
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (6) i2_MSdelay                                            6     4      2     118
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _LightScan
     _MSdelay

 _INT0_ISR (ROOT)
   i2_MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      82        0.0%
BITBIGSFRllhhhh    4FA      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      81        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhl       9E      0       0      78        0.0%
BITBIGSFRllhhhl     5F      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      16       1       23.2%
BITBIGSFRhhhhh      2D      0       0      69        0.0%
BITBIGSFRllhhl      1E      0       0      77        0.0%
BITBIGSFRlllhh       F      0       0      79        0.0%
BITBIGSFRlllhl       F      0       0      80        0.0%
BITBIGSFRhhhhl       5      0       0      70        0.0%
BITBIGSFRlhh         4      0       0      73        0.0%
BITBIGSFRhhl         4      0       0      72        0.0%
BITBIGSFRhhhl        1      0       0      71        0.0%
BITBIGSFRlhl         1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      14        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 11:50:22 2024

           ?_LCD_Command 0001                       l61 435E                       l70 42D6  
                     l55 4304                       l64 4340                       l58 437A  
                     l83 4220                       l75 42A6                       l91 415A  
                     l95 4114                       l88 40CC              ?_LCD_String 000E  
                    l112 41D4                      l972 41EC                      l964 41D8  
                    l980 4326                      l974 41F0                      l966 41E4  
                    l990 4334                      l982 432C                      l976 4206  
                    l992 4344                      l984 432E                      l978 420A  
                    l994 434A                      l986 4330                      l996 434C  
                    l988 4332                      l998 434E                      u200 40FA  
                    u201 40F6                      u210 4110                      u211 410C  
                    u140 4206                      u220 4122                      u141 4202  
                    u221 411E                      u150 4220                      u230 4142  
                    u151 421C                      u231 413E                      u160 42D6  
                    u240 4156                      u161 42D2                      u241 4152  
                    u170 427E                      u171 427A                      u180 40C8  
                    u181 40C4                      u190 40DA                      u191 40D6  
                    u277 41C8                      wreg 3FE8              LCD_Char@dat 000D  
                   l1000 4350                     l1002 4352                     l1010 42BC  
                   l1012 42D8                     l1004 42A8                     l1020 426E  
                   l1100 415E                     l1014 42E4                     l1006 42AC  
                   l1030 4298                     l1022 426E                     l1110 417A  
                   l1102 416C                     l1016 42E8                     l1008 42BA  
                   l1032 429E                     l1024 427E                     l1040 40DA  
                   l1120 4186                     l1112 417C                     l1104 416E  
                   l1018 4374                     l1026 4286                     l1050 40FA  
                   l1042 40DC                     l1034 40B4                     l1130 41A0  
                   l1122 4188                     l1114 417E                     l1106 4176  
                   l1028 4290                     l1060 4126                     l1044 40DE  
                   l1036 40B8                     l1132 41A8                     l1124 418C  
                   l1116 4180                     l1108 4178                     l1062 4132  
                   l1046 40EA                     l1054 4100                     l1070 4146  
                   l1134 41B0                     l1126 4190                     l1118 4184  
                   l1064 4134                     l1056 4122                     l1048 40EC  
                   l1136 41BE                     l1128 4198                     l1058 4124  
                   l1098 415C                     STR_1 2001                     _LATB 3FBB  
                   i2l83 426A                     _WPUA 3A41                     _main 415C  
                   start 40AE          __end_of_MSdelay 4222            _LCD_String_xy 426C  
           ___param_bank 0000         __end_of_LCD_Char 4342         __end_of_LCD_Init 4306  
       __end_of_INT0_ISR 4374                    ?_main 0001                    _LATD0 1FDE8  
                  _LATD1 1FDE9                    i2l107 4372                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
                  _input 0016                    tablat 3FF5                    status 3FD8  
         ?_LCD_String_xy 000F          __initialization 4306             __end_of_main 41D8  
                 ??_main 0013        __end_of_LCD_Clear 437C            __activetblptr 0001  
                 _ANSELA 3A40                   _ANSELC 3A60         LightScan@counter 000E  
       LCD_String_xy@msg 0010         LCD_String_xy@pos 000F         LCD_String_xy@row 0011  
              ??_MSdelay 0009                   i2l1090 4254                   i2l1084 4236  
                 i2l1076 4222                   i2l1092 4360                   i2l1086 423A  
                 i2l1078 422E                   i2l1094 4362                   i2l1088 4250  
                 i2l1096 436E        __end_ofi2_MSdelay 426C                   _input2 0015  
                 isa$std 0001             __mediumconst 0000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 4316                ?_LCD_Init 0001  
              ?_INT0_ISR 0001          ??_LCD_String_xy 0011            ___rparam_used 0001  
         __pcstackCOMRAM 0001             ??_LCD_String 000F        __end_of_LightScan 415C  
             ??_LCD_Char 000D               ??_LCD_Init 000E               ??_INT0_ISR 0007  
     __end_of_LCD_String 42D8                  IVTBASEH 3FD6                  IVTBASEL 3FD5  
                IVTBASEU 3FD7                  _INT0PPS 3AC0                  i2u25_40 4250  
                i2u25_41 424C                  i2u26_40 426A                  i2u26_41 4266  
                _MSdelay 41D8            LCD_String@msg 000E                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000                  __pcinit 4306  
                __ramtop 2000            ivt0x4008_base 4008                  __ptext0 415C  
                __ptext1 40B2                  __ptext2 426C                  __ptext3 42A8  
                __ptext4 4324                  __ptext5 42D8                  __ptext6 4374  
                __ptext7 4342                  __ptext8 41D8                  __ptext9 4360  
              _LCD_Clear 4374     end_of_initialization 4316           LCD_Command@cmd 000D  
              i2_MSdelay 4222                _PORTAbits 3FCA                _PORTCbits 3FCC  
             ?_LCD_Clear 0001            ??_LCD_Command 000D               ?i2_MSdelay 0001  
    start_initialization 4306                _LightScan 40B2    __end_of_LCD_String_xy 42A8  
    __end_of_LCD_Command 4360              __pbssCOMRAM 0015               ?_LightScan 0001  
            ??_LCD_Clear 000E                 ?_MSdelay 0007              __pivt0x4008 4008  
           i2MSdelay@val 0001              ??i2_MSdelay 0003              __smallconst 2000  
  LCD_String_xy@location 0012                 MSdelay@i 0009                 MSdelay@j 000B  
               _LCD_Char 4324                 _LCD_Init 42D8                 _INT0_ISR 4360  
               _IPR1bits 3981                 _PIE1bits 3991                 _PIR1bits 39A1  
     LightScan@pinNumber 000D        ivt0x4008_undefint 40AC              _LCD_Command 4342  
            ??_LightScan 000D              _INTCON0bits 3FD2                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2000                 __ptext10 4222  
             MSdelay@val 0007                 isa$xinst 0000               _LCD_String 42A8  
               intlevel2 0000               i2MSdelay@i 0003               i2MSdelay@j 0005  
